{
  "@graph": [
    {
      "@id": "#33",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.7.0",
      "doc:transformed": true,
      "doc:sourceSpec": "OAS 2.0"
    },
    {
      "@id": "#34",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "MockingServiceProxyAutomationTests",
      "core:description": "Mocking service proxy test API",
      "core:version": "v1",
      "apiContract:endpoint": [
        {
          "@id": "#35"
        },
        {
          "@id": "#38"
        },
        {
          "@id": "#42"
        },
        {
          "@id": "#45"
        },
        {
          "@id": "#62"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:endpoint": "[(29,2)-(156,3)]",
          "core:description": "[(5,4)-(5,51)]",
          "#34": "[(1,0)-(157,1)]",
          "core:name": "[(4,4)-(4,49)]",
          "core:version": "[(6,4)-(6,19)]"
        }
      }
    },
    {
      "@id": "#35",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/examples",
      "apiContract:supportedOperation": [
        {
          "@id": "#36"
        }
      ],
      "smaps": {
        "lexical": {
          "#35": "[(30,4)-(51,5)]"
        }
      }
    },
    {
      "@id": "#38",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/exampleType",
      "apiContract:supportedOperation": [
        {
          "@id": "#39"
        }
      ],
      "smaps": {
        "lexical": {
          "#38": "[(52,4)-(67,5)]"
        }
      }
    },
    {
      "@id": "#42",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/exampleInTypeAndResource",
      "apiContract:supportedOperation": [
        {
          "@id": "#43"
        }
      ],
      "smaps": {
        "lexical": {
          "#42": "[(68,4)-(89,5)]"
        }
      }
    },
    {
      "@id": "#45",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/examplesInResource",
      "apiContract:supportedOperation": [
        {
          "@id": "#46"
        }
      ],
      "smaps": {
        "lexical": {
          "#45": "[(90,4)-(127,5)]"
        }
      }
    },
    {
      "@id": "#62",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/examplesInResourceAndType",
      "apiContract:supportedOperation": [
        {
          "@id": "#63"
        }
      ],
      "smaps": {
        "lexical": {
          "#62": "[(128,4)-(155,5)]"
        }
      }
    },
    {
      "@id": "#36",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "GET_examples",
      "core:mediaType": [
        "application/json"
      ],
      "apiContract:returns": [
        {
          "@id": "#37"
        }
      ],
      "apiContract:operationId": "GET_examples",
      "smaps": {
        "lexical": {
          "apiContract:operationId": "[(32,8)-(32,37)]",
          "core:mediaType": "[(33,8)-(35,9)]",
          "#36": "[(31,6)-(50,7)]",
          "core:name": "[(32,8)-(32,37)]",
          "apiContract:returns": "[(36,8)-(49,9)]"
        }
      }
    },
    {
      "@id": "#39",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "GET_exampleType",
      "core:mediaType": [
        "application/json"
      ],
      "apiContract:returns": [
        {
          "@id": "#40"
        }
      ],
      "apiContract:operationId": "GET_exampleType",
      "smaps": {
        "lexical": {
          "apiContract:operationId": "[(54,8)-(54,40)]",
          "core:mediaType": "[(55,8)-(57,9)]",
          "#39": "[(53,6)-(66,7)]",
          "core:name": "[(54,8)-(54,40)]",
          "apiContract:returns": "[(58,8)-(65,9)]"
        }
      }
    },
    {
      "@id": "#43",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "GET_exampleInTypeAndResource",
      "core:mediaType": [
        "application/json"
      ],
      "apiContract:returns": [
        {
          "@id": "#44"
        }
      ],
      "apiContract:operationId": "GET_exampleInTypeAndResource",
      "smaps": {
        "lexical": {
          "apiContract:operationId": "[(70,8)-(70,53)]",
          "core:mediaType": "[(71,8)-(73,9)]",
          "#43": "[(69,6)-(88,7)]",
          "core:name": "[(70,8)-(70,53)]",
          "apiContract:returns": "[(74,8)-(87,9)]"
        }
      }
    },
    {
      "@id": "#46",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "GET_examplesInResource",
      "core:mediaType": [
        "application/json"
      ],
      "apiContract:returns": [
        {
          "@id": "#47"
        }
      ],
      "apiContract:operationId": "GET_examplesInResource",
      "smaps": {
        "lexical": {
          "apiContract:operationId": "[(92,8)-(92,47)]",
          "core:mediaType": "[(93,8)-(95,9)]",
          "#46": "[(91,6)-(126,7)]",
          "core:name": "[(92,8)-(92,47)]",
          "apiContract:returns": "[(96,8)-(125,9)]"
        }
      }
    },
    {
      "@id": "#63",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "GET_examplesInResourceAndType",
      "core:mediaType": [
        "application/json"
      ],
      "apiContract:returns": [
        {
          "@id": "#64"
        }
      ],
      "apiContract:operationId": "GET_examplesInResourceAndType",
      "smaps": {
        "lexical": {
          "apiContract:operationId": "[(130,8)-(130,54)]",
          "core:mediaType": "[(131,8)-(133,9)]",
          "#63": "[(129,6)-(154,7)]",
          "core:name": "[(130,8)-(130,54)]",
          "apiContract:returns": "[(134,8)-(153,9)]"
        }
      }
    },
    {
      "@id": "#37",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "",
      "apiContract:payload": [
        {
          "@id": "#14"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(38,12)-(38,29)]",
          "#37": "[(37,10)-(48,11)]",
          "core:name": "[(37,10)-(37,15)]"
        }
      }
    },
    {
      "@id": "#40",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "",
      "apiContract:payload": [
        {
          "@id": "#41"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(60,12)-(60,29)]",
          "#40": "[(59,10)-(64,11)]",
          "core:name": "[(59,10)-(59,15)]"
        }
      }
    },
    {
      "@id": "#44",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "",
      "apiContract:payload": [
        {
          "@id": "#19"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(76,12)-(76,29)]",
          "#44": "[(75,10)-(86,11)]",
          "core:name": "[(75,10)-(75,15)]"
        }
      }
    },
    {
      "@id": "#47",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "",
      "apiContract:payload": [
        {
          "@id": "#48"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(98,12)-(98,29)]",
          "#47": "[(97,10)-(124,11)]",
          "core:name": "[(97,10)-(97,15)]"
        }
      }
    },
    {
      "@id": "#64",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "",
      "apiContract:payload": [
        {
          "@id": "#28"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(136,12)-(136,29)]",
          "#64": "[(135,10)-(152,11)]",
          "core:name": "[(135,10)-(135,15)]"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      }
    },
    {
      "@id": "#41",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      }
    },
    {
      "@id": "#19",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      }
    },
    {
      "@id": "#48",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#49"
      }
    },
    {
      "@id": "#28",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      }
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#2"
        },
        {
          "@id": "#4"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "exampleType",
      "apiContract:examples": [
        {
          "@id": "#6"
        },
        {
          "@id": "#10"
        },
        {
          "@id": "#15"
        },
        {
          "@id": "#20"
        }
      ],
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#1": "amf://id#32"
        },
        "type-property-lexical-info": {
          "#1": "[(14,6)-(14,12)]"
        },
        "lexical": {
          "shacl:name": "[(9,4)-(9,17)]",
          "#1": "[(9,4)-(27,5)]"
        },
        "declared-element": {
          "#1": ""
        },
        "resolved-link-target": {
          "#1": "amf://id#1"
        }
      }
    },
    {
      "@id": "#49",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#58"
        },
        {
          "@id": "#60"
        }
      ],
      "shacl:name": "default",
      "apiContract:examples": [
        {
          "@id": "#50"
        }
      ],
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#49": "[(110,14)-(110,20)]"
        },
        "lexical": {
          "apiContract:examples": "[(100,14)-(109,15)]",
          "#49": "[(99,12)-(123,13)]"
        },
        "auto-generated-name": {
          "#49": ""
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#prop1"
        }
      ],
      "raml-shapes:range": {
        "@id": "#3"
      },
      "shacl:minCount": 1,
      "shacl:name": "prop1",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(24,8)-(24,15)]",
          "#2": "[(16,8)-(18,9)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#prop2"
        }
      ],
      "raml-shapes:range": {
        "@id": "#5"
      },
      "shacl:minCount": 1,
      "shacl:name": "prop2",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(25,8)-(25,15)]",
          "#4": "[(19,8)-(21,9)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#7"
      },
      "doc:raw": "\"prop1\": \"John Doe\"\n\"prop2\": 1",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#6": "[(10,6)-(13,7)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "application/json0",
      "doc:strict": false,
      "core:mediaType": "application/json",
      "doc:structuredValue": {
        "@id": "#11"
      },
      "doc:raw": "\"prop1\": \"example5\"\n\"prop2\": 5",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#10": "[(40,14)-(43,15)]"
        },
        "tracked-element": {
          "#10": "amf://id#14"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "application/json2",
      "doc:strict": false,
      "core:mediaType": "application/json",
      "doc:structuredValue": {
        "@id": "#16"
      },
      "doc:raw": "\"prop1\": \"resource example\"\n\"prop2\": 10",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#15": "[(78,14)-(81,15)]"
        },
        "tracked-element": {
          "#15": "amf://id#19"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "application/json4",
      "doc:strict": false,
      "core:mediaType": "application/json",
      "doc:structuredValue": {
        "@id": "#21"
      },
      "doc:raw": "\"one\":\n  \"prop1\": \"something else\"\n  \"prop2\": 30\n\"two\":\n  \"prop1\": \"another\"\n  \"prop2\": 31",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#20": "[(138,14)-(147,15)]"
        },
        "tracked-element": {
          "#20": "amf://id#28"
        }
      }
    },
    {
      "@id": "#58",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#prop1"
        }
      ],
      "raml-shapes:range": {
        "@id": "#59"
      },
      "shacl:minCount": 1,
      "shacl:name": "prop1",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(120,16)-(120,23)]",
          "#58": "[(112,16)-(114,17)]"
        }
      }
    },
    {
      "@id": "#60",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#prop2"
        }
      ],
      "raml-shapes:range": {
        "@id": "#61"
      },
      "shacl:minCount": 1,
      "shacl:name": "prop2",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(121,16)-(121,23)]",
          "#60": "[(115,16)-(117,17)]"
        }
      }
    },
    {
      "@id": "#50",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#51"
      },
      "doc:raw": "\"one\":\n  \"prop1\": \"something\"\n  \"prop2\": 20\n\"two\":\n  \"prop1\": \"other\"\n  \"prop2\": 21",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#50": "[(100,14)-(109,15)]"
        },
        "tracked-element": {
          "#50": "amf://id#48"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "prop1",
      "smaps": {
        "type-property-lexical-info": {
          "#3": "[(17,10)-(17,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(17,10)-(17,26)]",
          "#3": "[(16,8)-(18,9)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "shacl:name": "prop2",
      "smaps": {
        "type-property-lexical-info": {
          "#5": "[(20,10)-(20,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(20,10)-(20,26)]",
          "#5": "[(19,8)-(21,9)]"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:prop1": {
        "@id": "#8"
      },
      "data:prop2": {
        "@id": "#9"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:prop2": "[(12,8)-(12,18)]",
          "#7": "[(10,17)-(13,7)]",
          "data:prop1": "[(11,8)-(11,27)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:prop1": {
        "@id": "#12"
      },
      "data:prop2": {
        "@id": "#13"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:prop2": "[(42,16)-(42,26)]",
          "#11": "[(40,34)-(43,15)]",
          "data:prop1": "[(41,16)-(41,35)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:prop1": {
        "@id": "#17"
      },
      "data:prop2": {
        "@id": "#18"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:prop2": "[(80,16)-(80,27)]",
          "#16": "[(78,34)-(81,15)]",
          "data:prop1": "[(79,16)-(79,43)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:one": {
        "@id": "#22"
      },
      "data:two": {
        "@id": "#25"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:two": "[(143,16)-(146,17)]",
          "#21": "[(138,34)-(147,15)]",
          "data:one": "[(139,16)-(142,17)]"
        }
      }
    },
    {
      "@id": "#59",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "prop1",
      "smaps": {
        "type-property-lexical-info": {
          "#59": "[(113,18)-(113,24)]"
        },
        "lexical": {
          "shacl:datatype": "[(113,18)-(113,34)]",
          "#59": "[(112,16)-(114,17)]"
        }
      }
    },
    {
      "@id": "#61",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "shacl:name": "prop2",
      "smaps": {
        "type-property-lexical-info": {
          "#61": "[(116,18)-(116,24)]"
        },
        "lexical": {
          "shacl:datatype": "[(116,18)-(116,34)]",
          "#61": "[(115,16)-(117,17)]"
        }
      }
    },
    {
      "@id": "#51",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:one": {
        "@id": "#52"
      },
      "data:two": {
        "@id": "#55"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:two": "[(105,16)-(108,17)]",
          "#51": "[(100,25)-(109,15)]",
          "data:one": "[(101,16)-(104,17)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "John Doe",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#8": "[(11,17)-(11,27)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "1",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "prop2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#9": "[(12,17)-(12,18)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "example5",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#12": "[(41,25)-(41,35)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "5",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "prop2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#13": "[(42,25)-(42,26)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "resource example",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#17": "[(79,25)-(79,43)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "10",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "prop2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#18": "[(80,25)-(80,27)]"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:prop1": {
        "@id": "#23"
      },
      "data:prop2": {
        "@id": "#24"
      },
      "core:name": "one",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:prop2": "[(141,18)-(141,29)]",
          "#22": "[(139,23)-(142,17)]",
          "data:prop1": "[(140,18)-(140,43)]"
        }
      }
    },
    {
      "@id": "#25",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:prop1": {
        "@id": "#26"
      },
      "data:prop2": {
        "@id": "#27"
      },
      "core:name": "two",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:prop2": "[(145,18)-(145,29)]",
          "#25": "[(143,23)-(146,17)]",
          "data:prop1": "[(144,18)-(144,36)]"
        }
      }
    },
    {
      "@id": "#52",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:prop1": {
        "@id": "#53"
      },
      "data:prop2": {
        "@id": "#54"
      },
      "core:name": "one",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:prop2": "[(103,18)-(103,29)]",
          "#52": "[(101,23)-(104,17)]",
          "data:prop1": "[(102,18)-(102,38)]"
        }
      }
    },
    {
      "@id": "#55",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:prop1": {
        "@id": "#56"
      },
      "data:prop2": {
        "@id": "#57"
      },
      "core:name": "two",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:prop2": "[(107,18)-(107,29)]",
          "#55": "[(105,23)-(108,17)]",
          "data:prop1": "[(106,18)-(106,34)]"
        }
      }
    },
    {
      "@id": "#23",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "something else",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#23": "[(140,27)-(140,43)]"
        }
      }
    },
    {
      "@id": "#24",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "30",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "prop2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#24": "[(141,27)-(141,29)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "another",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#26": "[(144,27)-(144,36)]"
        }
      }
    },
    {
      "@id": "#27",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "31",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "prop2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#27": "[(145,27)-(145,29)]"
        }
      }
    },
    {
      "@id": "#53",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "something",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#53": "[(102,27)-(102,38)]"
        }
      }
    },
    {
      "@id": "#54",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "20",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "prop2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#54": "[(103,27)-(103,29)]"
        }
      }
    },
    {
      "@id": "#56",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "other",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#56": "[(106,27)-(106,34)]"
        }
      }
    },
    {
      "@id": "#57",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "21",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "prop2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#57": "[(107,27)-(107,29)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#34"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#33"
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
