package amf.graphql.internal.spec.parser.syntax

object TokenTypes {
  val DOCUMENT = "document"
  val DEFINITION = "definition"
  val TYPE_SYSTEM_DEFINITION = "typeSystemDefinition"
  val ROOT_TYPE_DEFINITION = "rootOperationTypeDefinition"
  val DESCRIPTION = "description"
  val STRING_VALUE = "stringValue"
  val SCHEMA_DEFINITION = "schemaDefinition"
  val TYPE_DEFINITION = "typeDefinition"
  val OBJECT_TYPE_DEFINITION = "objectTypeDefinition"
  val INPUT_OBJECT_TYPE_DEFINITION = "inputObjectTypeDefinition"
  val INPUT_FIELDS_DEFINITION = "inputFieldsDefinition"
  val INPUT_VALUE_DEFINITION = "inputValueDefinition"
  val INTERFACE_TYPE_DEFINITION = "interfaceTypeDefinition"
  val TYPE = "type"
  val NAME = "name"
  val NAME_TERMINAL = "NAME"
  val ROOT_OPERATION_TYPE_DEFINITION = "rootOperationTypeDefinition"
  val OPERATION_TYPE = "operationType"
  val NAMED_TYPE = "namedType"
  val IMPLEMENTS_INTERFACES = "implementsInterfaces"
  val FIELDS_DEFINITION = "fieldsDefinition"
  val FIELD_DEFINITION = "fieldDefinition"
  val ARGUMENTS_DEFINITION = "argumentsDefinition"
  val UNION_TYPE_DEFINITION = "unionTypeDefinition"
  val UNION_MEMBER_TYPES = "unionMemberTypes"
  val ENUM_TYPE_DEFINITION = "enumTypeDefinition"
  val ENUM_VALUES_DEFINITION = "enumValuesDefinition"
  val ENUM_VALUE_DEFINITION = "enumValueDefinition"
  val ENUM_VALUE = "enumValue"
  val TYPE_ = "type_"
  val LIST_TYPE = "listType"
}
