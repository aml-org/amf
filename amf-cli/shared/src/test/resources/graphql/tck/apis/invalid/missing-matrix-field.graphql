type Query {
    name: String
}

interface Chess {
    grid: [[Int!]!]!
}

type ChessBoard1 implements Chess {
    grid: [[Int!]!]
}

type ChessBoard2 implements Chess {
    grid: [[Int!]]
}

type ChessBoard3 implements Chess {
    grid: [[Int]]
}

type ChessBoard4 implements Chess {
    grid: [[Int!]!]! @matrixDirective(matrix: [["this"],["is"], ["a"], ["string"]])
}

directive @matrixDirective(matrix: [[String]]) on FIELD_DEFINITION
