{
  "@graph": [
    {
      "@id": "#31",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "API",
      "core:version": "1.0",
      "apiContract:endpoint": [
        {
          "@id": "#32"
        },
        {
          "@id": "#44"
        }
      ],
      "smaps": {
        "source-vendor": {
          "#31": "RAML 1.0"
        },
        "lexical": {
          "core:version": "[(3,0)-(5,0)]",
          "#31": "[(2,0)-(51,0)]",
          "core:name": "[(2,0)-(3,0)]"
        }
      }
    },
    {
      "@id": "#32",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/engineersTraitEndpoint",
      "apiContract:supportedOperation": [
        {
          "@id": "#33"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(34,0)-(34,23)]",
          "#32": "[(34,0)-(43,0)]"
        }
      }
    },
    {
      "@id": "#44",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/engineersResourceTypeEndpoint",
      "apiContract:supportedOperation": [
        {
          "@id": "#46"
        }
      ],
      "doc:extends": [
        {
          "@id": "#45"
        }
      ],
      "smaps": {
        "lexical": {
          "doc:extends": "[(44,2)-(45,0)]",
          "#44": "[(43,0)-(51,0)]",
          "apiContract:path": "[(43,0)-(43,30)]"
        }
      }
    },
    {
      "@id": "#33",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:returns": [
        {
          "@id": "#35"
        }
      ],
      "doc:extends": [
        {
          "@id": "#34"
        }
      ],
      "smaps": {
        "lexical": {
          "doc:extends": "[(36,4)-(37,0)]",
          "#33": "[(35,2)-(43,0)]",
          "apiContract:returns": "[(37,4)-(43,0)]"
        }
      }
    },
    {
      "@id": "#46",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:returns": [
        {
          "@id": "#47"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(46,4)-(51,0)]",
          "#46": "[(45,2)-(51,0)]"
        }
      }
    },
    {
      "@id": "#45",
      "@type": [
        "apiContract:ParametrizedResourceType",
        "doc:ParametrizedDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "employeeResourceType",
      "doc:target": {
        "@id": "#10"
      },
      "smaps": {
        "lexical": {
          "core:name": "[(44,8)-(44,28)]",
          "#45": "[(44,8)-(44,28)]"
        }
      }
    },
    {
      "@id": "#35",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "500",
      "core:name": "500",
      "apiContract:payload": [
        {
          "@id": "#36"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(39,8)-(43,0)]",
          "#35": "[(38,6)-(43,0)]"
        }
      }
    },
    {
      "@id": "#34",
      "@type": [
        "apiContract:ParametrizedTrait",
        "doc:ParametrizedDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "employeeTrait",
      "doc:target": {
        "@id": "#21"
      },
      "smaps": {
        "lexical": {
          "core:name": "[(36,9)-(36,22)]",
          "#34": "[(36,9)-(36,22)]"
        }
      }
    },
    {
      "@id": "#47",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "500",
      "core:name": "500",
      "apiContract:payload": [
        {
          "@id": "#48"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(48,8)-(51,0)]",
          "#47": "[(47,6)-(51,0)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "apiContract:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "employeeResourceType",
      "doc:dataNode": {
        "@id": "#11"
      },
      "smaps": {
        "resolved-link-target": {
          "#10": "amf://id#10"
        },
        "declared-element": {
          "#10": ""
        },
        "lexical": {
          "doc:dataNode": "[(26,4)-(34,0)]",
          "#10": "[(25,2)-(34,0)]",
          "core:name": "[(25,2)-(25,22)]"
        },
        "resolved-link": {
          "#10": "amf://id#20"
        }
      }
    },
    {
      "@id": "#36",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#37"
      },
      "smaps": {
        "lexical": {
          "#36": "[(40,10)-(43,0)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "apiContract:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "employeeTrait",
      "doc:dataNode": {
        "@id": "#22"
      },
      "smaps": {
        "resolved-link-target": {
          "#21": "amf://id#21"
        },
        "declared-element": {
          "#21": ""
        },
        "lexical": {
          "doc:dataNode": "[(18,4)-(24,0)]",
          "#21": "[(17,2)-(24,0)]",
          "core:name": "[(17,2)-(17,15)]"
        },
        "resolved-link": {
          "#21": "amf://id#30"
        }
      }
    },
    {
      "@id": "#48",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#49"
      },
      "smaps": {
        "lexical": {
          "#48": "[(49,10)-(51,0)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:post": {
        "@id": "#12"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:post": "[(26,4)-(34,0)]",
          "#11": "[(26,4)-(34,0)]"
        }
      }
    },
    {
      "@id": "#37",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#38"
        },
        {
          "@id": "#39"
        },
        {
          "@id": "#40"
        }
      ],
      "shacl:name": "Employee",
      "smaps": {
        "inheritance-provenance": {
          "shacl:name": "amf://id#4"
        },
        "inherited-shapes": {
          "#37": "amf://id#41,amf://id#42,amf://id#43"
        },
        "type-property-lexical-info": {
          "#37": "[(41,12)-(41,16)]"
        },
        "lexical": {
          "#37": "[(40,10)-(43,0)]"
        },
        "auto-generated-name": {
          "#37": ""
        },
        "synthesized-field": {
          "shacl:closed": "true"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:responses": {
        "@id": "#23"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:responses": "[(18,4)-(24,0)]",
          "#22": "[(18,4)-(24,0)]"
        }
      }
    },
    {
      "@id": "#49",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#38"
        },
        {
          "@id": "#39"
        },
        {
          "@id": "#40"
        }
      ],
      "shacl:name": "Employee",
      "smaps": {
        "inheritance-provenance": {
          "shacl:name": "amf://id#4"
        },
        "inherited-shapes": {
          "#49": "amf://id#41,amf://id#42,amf://id#43"
        },
        "type-property-lexical-info": {
          "#49": "[(50,12)-(50,16)]"
        },
        "lexical": {
          "#49": "[(49,10)-(51,0)]"
        },
        "auto-generated-name": {
          "#49": ""
        },
        "synthesized-field": {
          "shacl:closed": "true"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:responses": {
        "@id": "#13"
      },
      "core:name": "post",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:responses": "[(27,6)-(34,0)]",
          "#12": "[(27,0)-(34,0)]"
        }
      }
    },
    {
      "@id": "#38",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#engineeringSkill"
        }
      ],
      "raml-shapes:range": {
        "@id": "#9"
      },
      "shacl:minCount": 1,
      "shacl:name": "engineeringSkill",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(14,24)-(14,30)]",
          "#38": "[(14,6)-(16,0)]"
        },
        "inheritance-provenance": {
          "#38": "amf://id#7"
        }
      }
    },
    {
      "@id": "#39",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#3"
      },
      "shacl:minCount": 1,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(8,12)-(8,18)]",
          "#39": "[(8,6)-(9,0)]"
        },
        "inheritance-provenance": {
          "#39": "amf://id#1"
        }
      }
    },
    {
      "@id": "#40",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#employeeId"
        }
      ],
      "raml-shapes:range": {
        "@id": "#6"
      },
      "shacl:minCount": 1,
      "shacl:name": "employeeId",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(11,18)-(11,24)]",
          "#40": "[(11,6)-(12,0)]"
        },
        "inheritance-provenance": {
          "#40": "amf://id#4"
        }
      }
    },
    {
      "@id": "#23",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:500": {
        "@id": "#24"
      },
      "core:name": "responses",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:500": "[(19,6)-(24,0)]",
          "#23": "[(19,0)-(24,0)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:500": {
        "@id": "#14"
      },
      "core:name": "responses",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:500": "[(28,8)-(34,0)]",
          "#13": "[(28,0)-(34,0)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "engineeringSkill",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(14,24)-(14,30)]",
          "#9": "[(14,6)-(16,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(8,12)-(8,18)]",
          "#3": "[(8,6)-(9,0)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "employeeId",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(11,18)-(11,24)]",
          "#6": "[(11,6)-(12,0)]"
        }
      }
    },
    {
      "@id": "#24",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:body": {
        "@id": "#25"
      },
      "core:name": "500",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:body": "[(20,8)-(24,0)]",
          "#24": "[(20,0)-(24,0)]"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:body": {
        "@id": "#15"
      },
      "core:name": "500",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:body": "[(29,10)-(34,0)]",
          "#14": "[(29,0)-(34,0)]"
        }
      }
    },
    {
      "@id": "#25",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:application%2Fjson": {
        "@id": "#26"
      },
      "core:name": "body",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:application%2Fjson": "[(21,10)-(24,0)]",
          "#25": "[(21,0)-(24,0)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:application%2Fjson": {
        "@id": "#16"
      },
      "core:name": "body",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:application%2Fjson": "[(30,12)-(34,0)]",
          "#15": "[(30,0)-(34,0)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:type": {
        "@id": "#27"
      },
      "core:name": "application/json",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:type": "[(22,12)-(24,0)]",
          "#26": "[(22,0)-(24,0)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:type": {
        "@id": "#17"
      },
      "core:name": "application/json",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:type": "[(31,14)-(34,0)]",
          "#16": "[(31,0)-(34,0)]"
        }
      }
    },
    {
      "@id": "#27",
      "@type": [
        "data:Array",
        "rdf:Seq",
        "data:Node",
        "doc:DomainElement"
      ],
      "rdfs:member": [
        {
          "@id": "#28"
        },
        {
          "@id": "#29"
        }
      ],
      "core:name": "type",
      "smaps": {
        "lexical": {
          "#27": "[(22,18)-(22,36)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "data:Array",
        "rdf:Seq",
        "data:Node",
        "doc:DomainElement"
      ],
      "rdfs:member": [
        {
          "@id": "#18"
        },
        {
          "@id": "#19"
        }
      ],
      "core:name": "type",
      "smaps": {
        "lexical": {
          "#17": "[(31,20)-(31,38)]"
        }
      }
    },
    {
      "@id": "#28",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Employee",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_7",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#28": "[(22,19)-(22,27)]"
        }
      }
    },
    {
      "@id": "#29",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Person",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_8",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#29": "[(22,29)-(22,35)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Employee",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_8",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#18": "[(31,21)-(31,29)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Person",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_9",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#19": "[(31,31)-(31,37)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#4"
        },
        {
          "@id": "#7"
        },
        {
          "@id": "#10"
        },
        {
          "@id": "#21"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#31"
      },
      "doc:version": "3.0.0",
      "doc:root": true
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#2"
        }
      ],
      "shacl:name": "Person",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "shacl:name": "[(6,2)-(6,8)]",
          "#1": "[(6,2)-(9,0)]"
        },
        "declared-element": {
          "#1": ""
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#5"
        }
      ],
      "shacl:name": "Employee",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "shacl:name": "[(9,2)-(9,10)]",
          "#4": "[(9,2)-(12,0)]"
        },
        "declared-element": {
          "#4": ""
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#8"
        }
      ],
      "shacl:name": "Engineer",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "shacl:name": "[(12,2)-(12,10)]",
          "#7": "[(12,2)-(16,0)]"
        },
        "declared-element": {
          "#7": ""
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#3"
      },
      "shacl:minCount": 1,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(8,12)-(8,18)]",
          "#2": "[(8,6)-(9,0)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#employeeId"
        }
      ],
      "raml-shapes:range": {
        "@id": "#6"
      },
      "shacl:minCount": 1,
      "shacl:name": "employeeId",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(11,18)-(11,24)]",
          "#5": "[(11,6)-(12,0)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#engineeringSkill"
        }
      ],
      "raml-shapes:range": {
        "@id": "#9"
      },
      "shacl:minCount": 1,
      "shacl:name": "engineeringSkill",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(14,24)-(14,30)]",
          "#8": "[(14,6)-(16,0)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  }
}
