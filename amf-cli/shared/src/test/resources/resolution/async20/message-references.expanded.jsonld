[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "/async-api",
        "@type": [
          "apiContract:AsyncAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "components"
          }
        ],
        "core:version": [
          {
            "@value": "1.0.0"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#/async-api/endpoint/subscribe%2Fchannel",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "subscribe/channel"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "subscribe"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "someMessage"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/declares/msg/someMessage/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "apiContract:schemaMediaType": [
                          {
                            "@value": "application/schema+json;version=draft-07"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ],
                            "smaps": {
                              "type-property-lexical-info": {
                                "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(16,8)-(16,12)]"
                              },
                              "lexical": {
                                "shacl:datatype": "[(16,8)-(17,0)]",
                                "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(15,6)-(17,0)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "raml-shapes:schema": "[(15,6)-(17,0)]",
                            "core:mediaType": "[(18,6)-(19,0)]",
                            "#/declares/msg/someMessage/payload/application%2Fjson": "[(10,0)-(22,0)]",
                            "apiContract:schemaMediaType": "[(17,6)-(18,0)]"
                          }
                        }
                      }
                    ],
                    "core:displayName": [
                      {
                        "@value": "lightMeasured"
                      }
                    ],
                    "core:title": [
                      {
                        "@value": "Light measured"
                      }
                    ],
                    "apiContract:headerSchema": [
                      {
                        "@id": "#/declares/msg/someMessage/shape/schema",
                        "@type": [
                          "shacl:NodeShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:closed": [
                          {
                            "@value": false
                          }
                        ],
                        "shacl:property": [
                          {
                            "@id": "#/declares/msg/someMessage/shape/schema/property/property/a",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:path": [
                              {
                                "@id": "http://a.ml/vocabularies/data#a"
                              }
                            ],
                            "raml-shapes:range": [
                              {
                                "@id": "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a",
                                "@type": [
                                  "raml-shapes:ScalarShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "shacl:datatype": [
                                  {
                                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "a"
                                  }
                                ],
                                "smaps": {
                                  "type-property-lexical-info": {
                                    "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(14,12)-(14,16)]"
                                  },
                                  "lexical": {
                                    "shacl:datatype": "[(14,12)-(15,0)]",
                                    "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(13,10)-(15,0)]"
                                  }
                                }
                              }
                            ],
                            "shacl:minCount": [
                              {
                                "@value": 0
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "a"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "shacl:minCount": "true"
                              },
                              "lexical": {
                                "#/declares/msg/someMessage/shape/schema/property/property/a": "[(13,10)-(15,0)]"
                              }
                            }
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "schema"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "shacl:closed": "true"
                          },
                          "lexical": {
                            "#/declares/msg/someMessage/shape/schema": "[(10,6)-(15,0)]"
                          },
                          "type-property-lexical-info": {
                            "#/declares/msg/someMessage/shape/schema": "[(11,8)-(11,12)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "virtual-element": {
                        "apiContract:payload": "true"
                      },
                      "resolved-link": {
                        "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response"
                      },
                      "lexical": {
                        "apiContract:headerSchema": "[(10,6)-(15,0)]",
                        "core:displayName": "[(19,6)-(20,0)]",
                        "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": "[(9,4)-(22,0)]",
                        "core:name": "[(9,4)-(9,15)]",
                        "core:title": "[(20,6)-(22,0)]"
                      },
                      "declared-element": {
                        "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": ""
                      },
                      "resolved-link-target": {
                        "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/declares/msg/someMessage"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(25,6)-(28,0)]",
                    "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe": "[(24,4)-(28,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:supportedOperation": "[(24,0)-(28,0)]",
                "#/async-api/endpoint/subscribe%2Fchannel": "[(23,2)-(28,0)]"
              }
            }
          },
          {
            "@id": "#/async-api/endpoint/publish%2Fchannel",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "publish/channel"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "publish"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "someMessage"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/declares/msg/someMessage/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "apiContract:schemaMediaType": [
                          {
                            "@value": "application/schema+json;version=draft-07"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ],
                            "smaps": {
                              "type-property-lexical-info": {
                                "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(16,8)-(16,12)]"
                              },
                              "lexical": {
                                "shacl:datatype": "[(16,8)-(17,0)]",
                                "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(15,6)-(17,0)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "raml-shapes:schema": "[(15,6)-(17,0)]",
                            "core:mediaType": "[(18,6)-(19,0)]",
                            "#/declares/msg/someMessage/payload/application%2Fjson": "[(10,0)-(22,0)]",
                            "apiContract:schemaMediaType": "[(17,6)-(18,0)]"
                          }
                        }
                      }
                    ],
                    "core:displayName": [
                      {
                        "@value": "lightMeasured"
                      }
                    ],
                    "core:title": [
                      {
                        "@value": "Light measured"
                      }
                    ],
                    "apiContract:headerSchema": [
                      {
                        "@id": "#/declares/msg/someMessage/shape/schema",
                        "@type": [
                          "shacl:NodeShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:closed": [
                          {
                            "@value": false
                          }
                        ],
                        "shacl:property": [
                          {
                            "@id": "#/declares/msg/someMessage/shape/schema/property/property/a",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:path": [
                              {
                                "@id": "http://a.ml/vocabularies/data#a"
                              }
                            ],
                            "raml-shapes:range": [
                              {
                                "@id": "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a",
                                "@type": [
                                  "raml-shapes:ScalarShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "shacl:datatype": [
                                  {
                                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "a"
                                  }
                                ],
                                "smaps": {
                                  "type-property-lexical-info": {
                                    "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(14,12)-(14,16)]"
                                  },
                                  "lexical": {
                                    "shacl:datatype": "[(14,12)-(15,0)]",
                                    "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(13,10)-(15,0)]"
                                  }
                                }
                              }
                            ],
                            "shacl:minCount": [
                              {
                                "@value": 0
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "a"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "shacl:minCount": "true"
                              },
                              "lexical": {
                                "#/declares/msg/someMessage/shape/schema/property/property/a": "[(13,10)-(15,0)]"
                              }
                            }
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "schema"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "shacl:closed": "true"
                          },
                          "lexical": {
                            "#/declares/msg/someMessage/shape/schema": "[(10,6)-(15,0)]"
                          },
                          "type-property-lexical-info": {
                            "#/declares/msg/someMessage/shape/schema": "[(11,8)-(11,12)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "virtual-element": {
                        "apiContract:payload": "true"
                      },
                      "resolved-link": {
                        "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request"
                      },
                      "lexical": {
                        "apiContract:headerSchema": "[(10,6)-(15,0)]",
                        "core:displayName": "[(19,6)-(20,0)]",
                        "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": "[(9,4)-(22,0)]",
                        "core:name": "[(9,4)-(9,15)]",
                        "core:title": "[(20,6)-(22,0)]"
                      },
                      "declared-element": {
                        "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": ""
                      },
                      "resolved-link-target": {
                        "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/declares/msg/someMessage"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:expects": "[(30,6)-(31,49)]",
                    "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish": "[(29,4)-(31,49)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:supportedOperation": "[(29,0)-(31,49)]",
                "#/async-api/endpoint/publish%2Fchannel": "[(28,2)-(31,49)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "apiContract:endpoint": "[(22,0)-(31,49)]",
            "core:name": "[(3,2)-(4,0)]",
            "/async-api": "[(1,0)-(31,49)]",
            "core:version": "[(4,2)-(6,0)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#/BaseUnitProcessingData",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.8.1"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "ASYNC 2.0"
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#/declares/msg/someMessage",
        "@type": [
          "apiContract:Message",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "someMessage"
          }
        ],
        "apiContract:payload": [
          {
            "@id": "#/declares/msg/someMessage/payload/application%2Fjson",
            "@type": [
              "apiContract:Payload",
              "core:Payload",
              "doc:DomainElement"
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ],
            "apiContract:schemaMediaType": [
              {
                "@value": "application/schema+json;version=draft-07"
              }
            ],
            "raml-shapes:schema": [
              {
                "@id": "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "schema"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(16,8)-(16,12)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(16,8)-(17,0)]",
                    "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(15,6)-(17,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "raml-shapes:schema": "[(15,6)-(17,0)]",
                "core:mediaType": "[(18,6)-(19,0)]",
                "#/declares/msg/someMessage/payload/application%2Fjson": "[(10,0)-(22,0)]",
                "apiContract:schemaMediaType": "[(17,6)-(18,0)]"
              }
            }
          }
        ],
        "core:displayName": [
          {
            "@value": "lightMeasured"
          }
        ],
        "core:title": [
          {
            "@value": "Light measured"
          }
        ],
        "apiContract:headerSchema": [
          {
            "@id": "#/declares/msg/someMessage/shape/schema",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "#/declares/msg/someMessage/shape/schema/property/property/a",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#a"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "a"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(14,12)-(14,16)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(14,12)-(15,0)]",
                        "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(13,10)-(15,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 0
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "a"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "shacl:minCount": "true"
                  },
                  "lexical": {
                    "#/declares/msg/someMessage/shape/schema/property/property/a": "[(13,10)-(15,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "schema"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:closed": "true"
              },
              "lexical": {
                "#/declares/msg/someMessage/shape/schema": "[(10,6)-(15,0)]"
              },
              "type-property-lexical-info": {
                "#/declares/msg/someMessage/shape/schema": "[(11,8)-(11,12)]"
              }
            }
          }
        ],
        "smaps": {
          "virtual-element": {
            "apiContract:payload": "true"
          },
          "lexical": {
            "apiContract:headerSchema": "[(10,6)-(15,0)]",
            "core:displayName": "[(19,6)-(20,0)]",
            "#/declares/msg/someMessage": "[(9,4)-(22,0)]",
            "core:name": "[(9,4)-(9,15)]",
            "core:title": "[(20,6)-(22,0)]"
          },
          "declared-element": {
            "#/declares/msg/someMessage": ""
          }
        }
      }
    ],
    "@context": {
      "@base": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
