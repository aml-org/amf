[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "/web-api",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "se-8987-reopen2"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#/web-api/endpoint/%2Fexample1",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/example1"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/endpoint/%2Fexample1/supportedOperation/post",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson/shape/schema/inherits/union/default-union",
                            "@type": [
                              "raml-shapes:UnionShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "raml-shapes:anyOf": [
                              {
                                "@id": "#/declares/shape/Dog/link-68892",
                                "@type": [
                                  "shacl:NodeShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "doc:link-target": [
                                  {
                                    "@id": "#/declares/shape/Dog"
                                  }
                                ],
                                "doc:link-label": [
                                  {
                                    "@value": "Dog"
                                  }
                                ]
                              },
                              {
                                "@id": "#/declares/shape/Cat/link-67510",
                                "@type": [
                                  "shacl:NodeShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "doc:link-target": [
                                  {
                                    "@id": "#/declares/shape/Cat"
                                  }
                                ],
                                "doc:link-label": [
                                  {
                                    "@value": "Cat"
                                  }
                                ]
                              }
                            ],
                            "smaps": {
                              "auto-generated-name": {
                                "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson/shape/schema/inherits/union/default-union": ""
                              },
                              "lexical": {
                                "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson/shape/schema/inherits/union/default-union": "[(24,6)-(25,0)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson": "[(23,4)-(25,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(22,2)-(25,0)]",
                        "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request": "[(22,7)-(25,0)]"
                      },
                      "virtual-element": {
                        "#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request": "true"
                      }
                    }
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/endpoint/%2Fexample1/supportedOperation/post/returns/resp/200",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/web-api/endpoint/%2Fexample1/supportedOperation/post/returns/resp/200": "[(26,4)-(27,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(25,2)-(27,0)]",
                    "#/web-api/endpoint/%2Fexample1/supportedOperation/post": "[(21,1)-(27,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(20,0)-(20,9)]",
                "#/web-api/endpoint/%2Fexample1": "[(20,0)-(27,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/endpoint/%2Fexample2",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/example2"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/endpoint/%2Fexample2/supportedOperation/post",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/endpoint/%2Fexample2/supportedOperation/post/expects/request",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Fexample2/supportedOperation/post/expects/request/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/any/UnionType/link-1401453193",
                            "@type": [
                              "raml-shapes:UnionShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/any/UnionType"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "UnionType"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/endpoint/%2Fexample2/supportedOperation/post/expects/request/payload/application%2Fjson": "[(30,4)-(32,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(29,2)-(32,0)]",
                        "#/web-api/endpoint/%2Fexample2/supportedOperation/post/expects/request": "[(29,7)-(32,0)]"
                      },
                      "virtual-element": {
                        "#/web-api/endpoint/%2Fexample2/supportedOperation/post/expects/request": "true"
                      }
                    }
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/endpoint/%2Fexample2/supportedOperation/post/returns/resp/200",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/web-api/endpoint/%2Fexample2/supportedOperation/post/returns/resp/200": "[(33,4)-(33,8)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(32,2)-(33,8)]",
                    "#/web-api/endpoint/%2Fexample2/supportedOperation/post": "[(28,1)-(33,8)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(27,0)-(27,9)]",
                "#/web-api/endpoint/%2Fexample2": "[(27,0)-(33,8)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "core:name": "[(2,0)-(3,0)]",
            "/web-api": "[(2,0)-(33,8)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#/BaseUnitProcessingData",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.8.1"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "RAML 1.0"
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#/declares/any/UnionType",
        "@type": [
          "raml-shapes:UnionShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "raml-shapes:anyOf": [
          {
            "@id": "#/declares/shape/Dog_0",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "#/declares/shape/Dog/property/property/name",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#name"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "#/declares/shape/Dog/property/property/name/scalar/name",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "name"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/declares/shape/Dog/property/property/name/scalar/name": "[(10,6)-(10,10)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(10,6)-(11,0)]",
                        "#/declares/shape/Dog/property/property/name/scalar/name": "[(9,4)-(11,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "name"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "shacl:minCount": "true",
                    "shacl:path": "true"
                  },
                  "lexical": {
                    "raml-shapes:range": "[(9,9)-(11,0)]",
                    "#/declares/shape/Dog/property/property/name": "[(9,4)-(11,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "Dog"
              }
            ],
            "apiContract:examples": [
              {
                "@id": "#/declares/shape/Dog/examples/example/default-example",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "#/declares/shape/Dog/examples/example/default-example/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:name": [
                      {
                        "@id": "#/declares/shape/Dog/examples/example/default-example/object_1/name_2",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "Pepe"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "name"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/shape/Dog/examples/example/default-example/object_1/name_2": "[(12,10)-(12,14)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true"
                      },
                      "lexical": {
                        "data:name": "[(12,4)-(13,0)]",
                        "#/declares/shape/Dog/examples/example/default-example/object_1": "[(12,0)-(13,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "name: Pepe"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:raw": "true",
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "#/declares/shape/Dog/examples/example/default-example": "[(11,2)-(13,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:closed": "true"
              },
              "resolved-link": {
                "#/declares/shape/Dog_0": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson/shape/schema/inherits/union/default-union/anyOf/shape/default-node"
              },
              "type-property-lexical-info": {
                "#/declares/shape/Dog_0": "[(7,2)-(7,6)]"
              },
              "lexical": {
                "apiContract:examples": "[(11,2)-(13,0)]",
                "#/declares/shape/Dog_0": "[(6,1)-(13,0)]"
              },
              "declared-element": {
                "#/declares/shape/Dog_0": ""
              },
              "resolved-link-target": {
                "#/declares/shape/Dog_0": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/declares/shape/Dog"
              }
            }
          },
          {
            "@id": "#/declares/shape/Cat_1",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "#/declares/shape/Cat/property/property/age",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#age"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "#/declares/shape/Cat/property/property/age/scalar/age",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#integer"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "age"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/declares/shape/Cat/property/property/age/scalar/age": "[(17,6)-(17,10)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(17,6)-(18,0)]",
                        "#/declares/shape/Cat/property/property/age/scalar/age": "[(16,4)-(18,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "age"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "shacl:minCount": "true",
                    "shacl:path": "true"
                  },
                  "lexical": {
                    "raml-shapes:range": "[(16,8)-(18,0)]",
                    "#/declares/shape/Cat/property/property/age": "[(16,4)-(18,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "Cat"
              }
            ],
            "apiContract:examples": [
              {
                "@id": "#/declares/shape/Cat/examples/example/default-example",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "#/declares/shape/Cat/examples/example/default-example/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:age": [
                      {
                        "@id": "#/declares/shape/Cat/examples/example/default-example/object_1/age",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "45"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#integer"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "age"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/shape/Cat/examples/example/default-example/object_1/age": "[(19,9)-(19,11)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true"
                      },
                      "lexical": {
                        "data:age": "[(19,4)-(20,0)]",
                        "#/declares/shape/Cat/examples/example/default-example/object_1": "[(19,0)-(20,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "age: 45"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:raw": "true",
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "#/declares/shape/Cat/examples/example/default-example": "[(18,2)-(20,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:closed": "true"
              },
              "resolved-link": {
                "#/declares/shape/Cat_1": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson/shape/schema/inherits/union/default-union/anyOf/shape/default-node_3"
              },
              "type-property-lexical-info": {
                "#/declares/shape/Cat_1": "[(14,2)-(14,6)]"
              },
              "lexical": {
                "apiContract:examples": "[(18,2)-(20,0)]",
                "#/declares/shape/Cat_1": "[(13,1)-(20,0)]"
              },
              "declared-element": {
                "#/declares/shape/Cat_1": ""
              },
              "resolved-link-target": {
                "#/declares/shape/Cat_1": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/declares/shape/Cat"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "UnionType"
          }
        ],
        "smaps": {
          "inherited-shapes": {
            "#/declares/any/UnionType": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/declares/any/UnionType/inherits/union/default-union"
          },
          "type-property-lexical-info": {
            "#/declares/any/UnionType": "[(5,2)-(5,6)]"
          },
          "lexical": {
            "shacl:name": "[(4,1)-(4,10)]",
            "#/declares/any/UnionType": "[(4,1)-(6,0)]"
          },
          "declared-element": {
            "#/declares/any/UnionType": ""
          }
        }
      },
      {
        "@id": "#/declares/shape/Dog",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/Dog/property/property/name",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#name"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/Dog/property/property/name/scalar/name",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "name"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/Dog/property/property/name/scalar/name": "[(10,6)-(10,10)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(10,6)-(11,0)]",
                    "#/declares/shape/Dog/property/property/name/scalar/name": "[(9,4)-(11,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "name"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true",
                "shacl:path": "true"
              },
              "lexical": {
                "raml-shapes:range": "[(9,9)-(11,0)]",
                "#/declares/shape/Dog/property/property/name": "[(9,4)-(11,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "Dog"
          }
        ],
        "apiContract:examples": [
          {
            "@id": "#/declares/shape/Dog/examples/example/default-example",
            "@type": [
              "apiContract:Example",
              "doc:DomainElement"
            ],
            "doc:strict": [
              {
                "@value": true
              }
            ],
            "doc:structuredValue": [
              {
                "@id": "#/declares/shape/Dog/examples/example/default-example/object_1",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:name": [
                  {
                    "@id": "#/declares/shape/Dog/examples/example/default-example/object_1/name_2",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "Pepe"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "name"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#/declares/shape/Dog/examples/example/default-example/object_1/name_2": "[(12,10)-(12,14)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "object_1"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:name": "[(12,4)-(13,0)]",
                    "#/declares/shape/Dog/examples/example/default-example/object_1": "[(12,0)-(13,0)]"
                  }
                }
              }
            ],
            "doc:raw": [
              {
                "@value": "name: Pepe"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "doc:raw": "true",
                "doc:strict": "true"
              },
              "lexical": {
                "#/declares/shape/Dog/examples/example/default-example": "[(11,2)-(13,0)]"
              }
            }
          }
        ],
        "smaps": {
          "synthesized-field": {
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#/declares/shape/Dog": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson/shape/schema/inherits/union/default-union/anyOf/shape/default-node"
          },
          "type-property-lexical-info": {
            "#/declares/shape/Dog": "[(7,2)-(7,6)]"
          },
          "lexical": {
            "apiContract:examples": "[(11,2)-(13,0)]",
            "#/declares/shape/Dog": "[(6,1)-(13,0)]",
            "shacl:name": "[(6,1)-(6,4)]"
          },
          "declared-element": {
            "#/declares/shape/Dog": ""
          },
          "resolved-link-target": {
            "#/declares/shape/Dog": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/declares/shape/Dog"
          }
        }
      },
      {
        "@id": "#/declares/shape/Cat",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/Cat/property/property/age",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#age"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/Cat/property/property/age/scalar/age",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#integer"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "age"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/Cat/property/property/age/scalar/age": "[(17,6)-(17,10)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(17,6)-(18,0)]",
                    "#/declares/shape/Cat/property/property/age/scalar/age": "[(16,4)-(18,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "age"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true",
                "shacl:path": "true"
              },
              "lexical": {
                "raml-shapes:range": "[(16,8)-(18,0)]",
                "#/declares/shape/Cat/property/property/age": "[(16,4)-(18,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "Cat"
          }
        ],
        "apiContract:examples": [
          {
            "@id": "#/declares/shape/Cat/examples/example/default-example",
            "@type": [
              "apiContract:Example",
              "doc:DomainElement"
            ],
            "doc:strict": [
              {
                "@value": true
              }
            ],
            "doc:structuredValue": [
              {
                "@id": "#/declares/shape/Cat/examples/example/default-example/object_1",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:age": [
                  {
                    "@id": "#/declares/shape/Cat/examples/example/default-example/object_1/age",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "45"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#integer"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "age"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#/declares/shape/Cat/examples/example/default-example/object_1/age": "[(19,9)-(19,11)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "object_1"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:age": "[(19,4)-(20,0)]",
                    "#/declares/shape/Cat/examples/example/default-example/object_1": "[(19,0)-(20,0)]"
                  }
                }
              }
            ],
            "doc:raw": [
              {
                "@value": "age: 45"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "doc:raw": "true",
                "doc:strict": "true"
              },
              "lexical": {
                "#/declares/shape/Cat/examples/example/default-example": "[(18,2)-(20,0)]"
              }
            }
          }
        ],
        "smaps": {
          "synthesized-field": {
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#/declares/shape/Cat": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/web-api/endpoint/%2Fexample1/supportedOperation/post/expects/request/payload/application%2Fjson/shape/schema/inherits/union/default-union/anyOf/shape/default-node_3"
          },
          "type-property-lexical-info": {
            "#/declares/shape/Cat": "[(14,2)-(14,6)]"
          },
          "lexical": {
            "apiContract:examples": "[(18,2)-(20,0)]",
            "#/declares/shape/Cat": "[(13,1)-(20,0)]",
            "shacl:name": "[(13,1)-(13,4)]"
          },
          "declared-element": {
            "#/declares/shape/Cat": ""
          },
          "resolved-link-target": {
            "#/declares/shape/Cat": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml#/declares/shape/Cat"
          }
        }
      }
    ],
    "@context": {
      "@base": "file://amf-cli/shared/src/test/resources/resolution/union-of-declarations/api.raml",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "data": "http://a.ml/vocabularies/data#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
