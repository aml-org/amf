#%RAML 0.8
title: api title
version: v1
baseUri: http://base.uri/{version}/{param1}
mediaType: application/json
protocols:
  - HTTP
  - HTTPS
baseUriParameters:
  param1:
    displayName: Param 1
    description: some description
    type: string
    maxLength: 10
    example: one
documentation:
  -
    title: doc title 1
    content: single line
  -
    title: doc title 2
    content: |
      multi
      line
schemas:
  UserJson:
    example:
      firstname: tato
      lastname: bores
      age: 66
    schema: |
      {
         "$schema": "http://json-schema.org/draft-04/schema",
         "type": "object",
         "properties": {
           "firstname":  { "type": "string" },
           "lastname":  { "type": "string" },
           "age":  { "type": "integer" }
         },
         "required": [ "firstname", "lastname" ]
      }
  UserXml: |
    <xs:schema attributeFormDefault="unqualified"
               elementFormDefault="qualified"
               xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="api-request">
        <xs:complexType>
          <xs:sequence>
            <xs:element type="xs:string" name="input"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
traits:
  one:
    description: method description from trait one
  two:
    description: method description from trait two
resourceTypes:
  first:
    usage: first usage
    description: top description
/top:
  baseUriParameters:
    param1:
      description: resource override
      type: number
  get:
    baseUriParameters:
      param1:
        description: method override
        type: boolean
    description: get something
    queryParameters:
      order:
        default: asc
        maxLength: 4
        example: desc
        type: string
        repeat: true
    body: {}
  post:
    description: post something
    responses:
      "200":
        body:
          application/json:
            example:
              firstname: tato
              lastname: bores
              age: 66
            schema: |
              {
                 "$schema": "http://json-schema.org/draft-04/schema",
                 "type": "object",
                 "properties": {
                   "firstname":  { "type": "string" },
                   "lastname":  { "type": "string" },
                   "age":  { "type": "integer" }
                 },
                 "required": [ "firstname", "lastname" ]
              }
          application/xml: |
            <xs:schema attributeFormDefault="unqualified"
                       elementFormDefault="qualified"
                       xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <xs:element name="api-request">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element type="xs:string" name="input"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:schema>
          multipart/form-data:
            formParameters:
              description:
                type: string
                required: false
              image:
                type: file
                required: false
          application/vnd.inline+json: |
            {
                "$schema": "http://json-schema.org/draft-03/schema",
                "properties": {
                    "input": {
                        "required": false,
                        "type": "string"
                    }
                },
                "required": false,
                "type": "object"
            }
      "400":
        body: {}
    body:
      application/json:
        example:
          firstname: tato
          lastname: bores
          age: 66
        schema: |
          {
             "$schema": "http://json-schema.org/draft-04/schema",
             "type": "object",
             "properties": {
               "firstname":  { "type": "string" },
               "lastname":  { "type": "string" },
               "age":  { "type": "integer" }
             },
             "required": [ "firstname", "lastname" ]
          }
      application/xml: |
        <xs:schema attributeFormDefault="unqualified"
                   elementFormDefault="qualified"
                   xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <xs:element name="api-request">
            <xs:complexType>
              <xs:sequence>
                <xs:element type="xs:string" name="input"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:schema>
      multipart/form-data:
        formParameters:
          description:
            type: string
            required: false
          image:
            type: file
            required: false
      application/vnd.inline+json: |
        {
            "$schema": "http://json-schema.org/draft-03/schema",
            "properties": {
                "input": {
                    "required": false,
                    "type": "string"
                }
            },
            "required": false,
            "type": "object"
        }
  /children:
    description: child description
    post:
      body:
        application/json:
          example:
            firstname: tato
            lastname: bores
            age: 66
          schema: |
            {
               "$schema": "http://json-schema.org/draft-04/schema",
               "type": "object",
               "properties": {
                 "firstname":  { "type": "string" },
                 "lastname":  { "type": "string" },
                 "age":  { "type": "integer" }
               },
               "required": [ "firstname", "lastname" ]
            }
    /{childId}:
      uriParameters:
        childId:
          type: string
  description: top description
