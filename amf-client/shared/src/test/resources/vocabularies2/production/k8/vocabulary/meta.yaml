#%Vocabulary 1.0

vocabulary: k8-meta
base: http://mulesoft.com/vocabularies/k8-meta#

external:
  schema-org: http://schema.org/


classTerms:

  KubernetesObject:
    displayName: Object
    description: |
      Kubernetes Objects are persistent entities in the Kubernetes system. Kubernetes uses these entities to represent the state of your cluster. Specifically, they can describe:
      What containerized applications are running (and on which nodes)
        The resources available to those applications
        The policies around how those applications behave, such as restart policies, upgrades, and fault-tolerance
      A Kubernetes object is a “record of intent”–once you create the object, the Kubernetes system will constantly work to ensure that object exists. By creating an object, you’re effectively telling the Kubernetes system what you want your cluster’s workload to look like; this is your cluster’s desired state
    properties:
      - apiVersion
      - kind
      - metadata
      - spec
      - status

  ObjectMeta:
    displayName: Object Meta
    description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create
    properties:
      - name
      - namespace
      - resourceVersion
      - uid
      - clusterName
      - dateTime
      - deletionGracePeriodSeconds
      - deletionTimestamp

  ObjectSpec:
    displayName: Object Spec
    description: Desired final state for the Kubernetes Object

  ObjectStatus:
    displayName: Object Status
    description: Current state for the Kubernetes Object


propertyTerms:

  dateTime:
    displayName: date time
    description: date time
    range: string

  apiVersion:
    displayName: api version
    description: |
      APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
    extends: schema-org.version
    range: string

  kind:
    displayName: kind
    description: |
      Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    range: string

  metadata:
    displayName: metadata
    description: |
      Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    range: ObjectMeta

  spec:
    displayName: spec
    description: |
      Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

  status:
    displayName: status
    description: |
      Most recently observed status of the object. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

  clusterName:
    displayName: cluster name
    description: |
      The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
    extends: schema-org.name
    range: string

  creationTimestamp:
    displayName: creation timestamp
    description: |
      CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    range: dateTime

  deletionGracePeriodSeconds:
    displayName: deletion grace period
    description: |
      Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only
    range: integer

  deletionTimestamp:
    displayName: deletion timestamp
    description: |
      DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted.
      This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client.
      The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field. Once set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only.
      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
    range: dateTime

  name:
    displayName: name
    description: |
      Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    extends: schema-org.name
    range: string

  namespace:
    displayName: namespace
    description: |
      Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
    range: string

  resourceVersion:
    displayName: resource version
    description: |
      An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    extends: schema-org.version
    range: string

  uid:
    displayName: uid
    description: |
      UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    range: string
    extends: schema-org.identifier
