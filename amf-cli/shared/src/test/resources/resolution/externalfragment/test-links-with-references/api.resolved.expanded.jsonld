[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "/web-api",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "test"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#/web-api/endpoint/%2Farticles",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/articles"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/endpoint/%2Farticles/supportedOperation/get",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/endpoint/%2Farticles/supportedOperation/get/returns/resp/200",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Farticles/supportedOperation/get/returns/resp/200/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/shape/error/link-96784904",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/shape/error"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "error"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/endpoint/%2Farticles/supportedOperation/get/returns/resp/200/payload/application%2Fjson": "[(11,10)-(13,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(10,8)-(13,0)]",
                        "#/web-api/endpoint/%2Farticles/supportedOperation/get/returns/resp/200": "[(9,6)-(13,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(8,4)-(13,0)]",
                    "#/web-api/endpoint/%2Farticles/supportedOperation/get": "[(7,2)-(13,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/endpoint/%2Farticles/supportedOperation/post",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/endpoint/%2Farticles/supportedOperation/post/returns/resp/200",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Farticles/supportedOperation/post/returns/resp/200/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/shape/error/link-96784904",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/shape/error"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "error"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/endpoint/%2Farticles/supportedOperation/post/returns/resp/200/payload/application%2Fjson": "[(17,10)-(18,23)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(16,8)-(18,23)]",
                        "#/web-api/endpoint/%2Farticles/supportedOperation/post/returns/resp/200": "[(15,6)-(18,23)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(14,4)-(18,23)]",
                    "#/web-api/endpoint/%2Farticles/supportedOperation/post": "[(13,2)-(18,23)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(6,0)-(6,9)]",
                "#/web-api/endpoint/%2Farticles": "[(6,0)-(18,23)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "core:name": "[(2,0)-(3,0)]",
            "/web-api": "[(2,0)-(18,23)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#/BaseUnitProcessingData",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.8.1"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "RAML 1.0"
          }
        ]
      }
    ],
    "doc:references": [
      {
        "@id": "#/references/0",
        "@type": [
          "doc:ExternalFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "#/references/0/external",
            "@type": [
              "doc:ExternalDomainElement",
              "doc:DomainElement"
            ],
            "doc:raw": [
              {
                "@value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"details\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"message\"\n      ]\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"message\",\n    \"details\"\n  ]\n}"
              }
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ],
            "smaps": {
              "lexical": {
                "#/references/0/external": "[(1,0)-(28,1)]"
              }
            }
          }
        ],
        "doc:root": [
          {
            "@value": false
          }
        ],
        "doc:processingData": [
          {
            "@id": "#/references/0/BaseUnitProcessingData",
            "@type": [
              "doc:BaseUnitProcessingData"
            ],
            "doc:transformed": [
              {
                "@value": false
              }
            ]
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#/declares/shape/error",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/error/property/property/status",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#status"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/error/property/property/status/scalar/status",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "status"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/error/property/property/status/scalar/status": "[(6,6)-(6,12)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(6,6)-(6,22)]",
                    "#/declares/shape/error/property/property/status/scalar/status": "[(5,4)-(7,5)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "status"
              }
            ],
            "smaps": {
              "lexical": {
                "shacl:minCount": "[(24,4)-(24,12)]",
                "#/declares/shape/error/property/property/status": "[(5,4)-(7,5)]"
              }
            }
          },
          {
            "@id": "#/declares/shape/error/property/property/message",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#message"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/error/property/property/message/scalar/message",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "message"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/error/property/property/message/scalar/message": "[(9,6)-(9,12)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(9,6)-(9,22)]",
                    "#/declares/shape/error/property/property/message/scalar/message": "[(8,4)-(10,5)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "message"
              }
            ],
            "smaps": {
              "lexical": {
                "shacl:minCount": "[(25,4)-(25,13)]",
                "#/declares/shape/error/property/property/message": "[(8,4)-(10,5)]"
              }
            }
          },
          {
            "@id": "#/declares/shape/error/property/property/details",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#details"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/error/property/property/details/shape/details",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "#/declares/shape/error/property/property/details/shape/details/property/property/message",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#message"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declares/shape/error/property/property/details/shape/details/property/property/message/scalar/message",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "message"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declares/shape/error/property/property/details/shape/details/property/property/message/scalar/message": "[(15,10)-(15,16)]"
                          },
                          "lexical": {
                            "shacl:datatype": "[(15,10)-(15,26)]",
                            "#/declares/shape/error/property/property/details/shape/details/property/property/message/scalar/message": "[(14,8)-(16,9)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 1
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "message"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "shacl:minCount": "[(19,8)-(19,17)]",
                        "#/declares/shape/error/property/property/details/shape/details/property/property/message": "[(14,8)-(16,9)]"
                      }
                    }
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "details"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "shacl:closed": "true"
                  },
                  "lexical": {
                    "#/declares/shape/error/property/property/details/shape/details": "[(11,4)-(21,5)]"
                  },
                  "type-property-lexical-info": {
                    "#/declares/shape/error/property/property/details/shape/details": "[(12,6)-(12,12)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "details"
              }
            ],
            "smaps": {
              "lexical": {
                "shacl:minCount": "[(26,4)-(26,13)]",
                "#/declares/shape/error/property/property/details": "[(11,4)-(21,5)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "error"
          }
        ],
        "doc:reference-id": [
          {
            "@id": "#/references/0/external"
          }
        ],
        "smaps": {
          "synthesized-field": {
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#/declares/shape/error": "file://amf-cli/shared/src/test/resources/resolution/externalfragment/test-links-with-references/api.raml#/web-api/endpoint/%2Farticles/supportedOperation/post/returns/resp/200/payload/application%2Fjson/shape/schema/inherits/shape/error"
          },
          "type-property-lexical-info": {
            "#/declares/shape/error": "[(3,2)-(3,8)]"
          },
          "lexical": {
            "shacl:name": "[(4,2)-(4,7)]",
            "#/declares/shape/error": "[(4,2)-(28,1)]"
          },
          "declared-element": {
            "#/declares/shape/error": ""
          },
          "resolved-link-target": {
            "#/declares/shape/error": "file://amf-cli/shared/src/test/resources/resolution/externalfragment/test-links-with-references/api.raml#/declares/shape/error"
          },
          "parsed-json-schema": {
            "#/declares/shape/error": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"details\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"message\"\n      ]\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"message\",\n    \"details\"\n  ]\n}"
          }
        }
      }
    ],
    "@context": {
      "@base": "file://amf-cli/shared/src/test/resources/resolution/externalfragment/test-links-with-references/api.raml",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
