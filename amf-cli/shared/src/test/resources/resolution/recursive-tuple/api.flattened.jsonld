{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 0.8"
    },
    {
      "@id": "/web-api",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "ALS-1202",
      "apiContract:endpoint": [
        {
          "@id": "#/web-api/endpoint/%2Fflows"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(2,0)-(4,0)]",
          "/web-api": "[(2,0)-(11,45)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/flows",
      "apiContract:supportedOperation": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(4,0)-(4,6)]",
          "#/web-api/endpoint/%2Fflows": "[(4,0)-(11,45)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "apiContract:returns": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(6,6)-(11,45)]",
          "#/web-api/endpoint/%2Fflows/supportedOperation/get": "[(5,4)-(11,45)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(8,10)-(11,45)]",
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200": "[(7,8)-(11,45)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson": "[(9,12)-(11,45)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson",
      "@type": [
        "raml-shapes:TupleShape",
        "raml-shapes:ArrayShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/list"
      },
      "shacl:name": "application/json",
      "apiContract:examples": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example"
        }
      ],
      "doc:reference-id": [
        {
          "@id": "#/references/0/external"
        }
      ],
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson": "[(2,2)-(2,8)]"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson": "[(9,12)-(36,1)]"
        },
        "parsed-json-schema": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson": "{\n  \"type\": \"array\",\n  \"items\": [{\n    \"$ref\": \"#/definitions/Person\"\n  },{\n    \"$ref\": \"#/definitions/Animal\"\n  }],\n  \"definitions\": {\n    \"Person\": {\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"pet\": {\n          \"$ref\": \"#/definitions/Animal\"\n        }\n      }\n    },\n    \"Animal\": {\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\"\n        },\n        \"owners\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Person\"\n          }\n        }\n      }\n    }\n  }\n}"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/list",
      "@type": "rdfs:Seq",
      "rdfs:_1": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person"
      },
      "rdfs:_2": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal"
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1"
      },
      "doc:reference-id": [
        {
          "@id": "#/references/1/external"
        }
      ],
      "doc:location": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/example.json",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example": "[(1,0)-(1,0)]"
        },
        "tracked-element": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/name"
        },
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/pet"
        }
      ],
      "shacl:name": "Person",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners/array/owners/shape/default-node"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person": "[(9,4)-(18,5)]"
        },
        "resolved-link-target": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/name"
        },
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/age"
        },
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "Animal",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal": "[(19,4)-(34,5)]"
        },
        "resolved-link-target": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1",
      "@type": [
        "data:Array",
        "rdf:Seq",
        "data:Node",
        "doc:DomainElement"
      ],
      "rdfs:member": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2"
        }
      ],
      "core:name": "array_1",
      "smaps": {
        "parsed-json-example": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1": "[{\n  \"name\": \"Astro\",\n  \"pet\": {\n    \"name\": \"Netwon\",\n    \"age\": 55,\n    \"owners\": [\"Astro\", \"Boy\"]\n  }\n}]"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1": "[(1,0)-(8,2)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/name",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/name/scalar/name"
      },
      "shacl:minCount": 0,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/name": "[(11,8)-(13,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/pet",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#pet"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal"
      },
      "shacl:minCount": 0,
      "shacl:name": "pet",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/pet": "[(14,8)-(16,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/name",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/name/scalar/name"
      },
      "shacl:minCount": 0,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/name": "[(21,8)-(23,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/age",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#age"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/age/scalar/age"
      },
      "shacl:minCount": 0,
      "shacl:name": "age",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/age": "[(24,8)-(26,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#owners"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners/array/owners"
      },
      "shacl:minCount": 0,
      "shacl:name": "owners",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners": "[(27,8)-(32,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:name": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/name_1"
      },
      "data:pet": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet"
      },
      "core:name": "object_2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:pet": "[(3,2)-(7,3)]",
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2": "[(1,1)-(8,1)]",
          "data:name": "[(2,2)-(2,17)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/name/scalar/name",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/name/scalar/name": "[(12,10)-(12,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(12,10)-(12,26)]",
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/property/property/name/scalar/name": "[(11,8)-(13,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/name/scalar/name",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/name/scalar/name": "[(22,10)-(22,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(22,10)-(22,26)]",
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/name/scalar/name": "[(21,8)-(23,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/age/scalar/age",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "shacl:name": "age",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/age/scalar/age": "[(25,10)-(25,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(25,10)-(25,27)]",
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/age/scalar/age": "[(24,8)-(26,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners/array/owners",
      "@type": [
        "raml-shapes:ArrayShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/recursive"
      },
      "shacl:name": "owners",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners/array/owners": "[(28,10)-(28,16)]"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners/array/owners": "[(27,8)-(32,9)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/name_1",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Astro",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/name_1": "[(2,10)-(2,17)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:name": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/name"
      },
      "data:age": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/age"
      },
      "data:owners": {
        "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners"
      },
      "core:name": "pet",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:owners": "[(6,4)-(6,30)]",
          "data:name": "[(4,4)-(4,20)]",
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet": "[(3,9)-(7,3)]",
          "data:age": "[(5,4)-(5,13)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/recursive",
      "@type": [
        "raml-shapes:RecursiveShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:fixPoint": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "Person",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true"
        },
        "resolved-link": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/recursive": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/member1/shape/Animal/property/property/owners/array/owners/shape/default-node"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/recursive": "[(9,4)-(18,5)]"
        },
        "resolved-link-target": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person/recursive": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/inherits/array/application%2Fjson/items/shape/Person"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/name",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Netwon",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/name": "[(4,12)-(4,20)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/age",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "55",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "age",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/age": "[(5,11)-(5,13)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners",
      "@type": [
        "data:Array",
        "rdf:Seq",
        "data:Node",
        "doc:DomainElement"
      ],
      "rdfs:member": [
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners/member/scalar_8"
        },
        {
          "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners/member/scalar_9"
        }
      ],
      "core:name": "owners",
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners": "[(6,14)-(6,30)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners/member/scalar_8",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Astro",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_8",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners/member/scalar_8": "[(6,15)-(6,22)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners/member/scalar_9",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Boy",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_9",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fflows/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/application%2Fjson/examples/example/default-example/array_1/member/object_2/pet/owners/member/scalar_9": "[(6,24)-(6,29)]"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#/references/0"
        },
        {
          "@id": "#/references/1"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/web-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/references/0",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/0/external"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/0/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/references/1",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/1/external"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/1/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/references/0/external",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\n  \"type\": \"array\",\n  \"items\": [{\n    \"$ref\": \"#/definitions/Person\"\n  },{\n    \"$ref\": \"#/definitions/Animal\"\n  }],\n  \"definitions\": {\n    \"Person\": {\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"pet\": {\n          \"$ref\": \"#/definitions/Animal\"\n        }\n      }\n    },\n    \"Animal\": {\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\"\n        },\n        \"owners\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Person\"\n          }\n        }\n      }\n    }\n  }\n}",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#/references/0/external": "[(1,0)-(36,1)]"
        }
      }
    },
    {
      "@id": "#/references/0/BaseUnitProcessingData",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    },
    {
      "@id": "#/references/1/external",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "[{\n  \"name\": \"Astro\",\n  \"pet\": {\n    \"name\": \"Netwon\",\n    \"age\": 55,\n    \"owners\": [\"Astro\", \"Boy\"]\n  }\n}]",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#/references/1/external": "[(1,0)-(8,2)]"
        }
      }
    },
    {
      "@id": "#/references/1/BaseUnitProcessingData",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/resolution/recursive-tuple/api.raml",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  }
}
