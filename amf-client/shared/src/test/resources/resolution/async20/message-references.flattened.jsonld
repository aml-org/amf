{
  "@graph": [
    {
      "@id": "#7",
      "@type": [
        "apiContract:AsyncAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "components",
      "core:version": "1.0.0",
      "apiContract:endpoint": [
        {
          "@id": "#8"
        },
        {
          "@id": "#11"
        }
      ],
      "smaps": {
        "source-vendor": {
          "#7": "ASYNC 2.0"
        },
        "lexical": {
          "apiContract:endpoint": "[(22,0)-(31,49)]",
          "core:name": "[(3,2)-(4,0)]",
          "#7": "[(1,0)-(31,49)]",
          "core:version": "[(4,2)-(6,0)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "subscribe/channel",
      "apiContract:supportedOperation": [
        {
          "@id": "#9"
        }
      ],
      "smaps": {
        "lexical": {
          "#8": "[(23,2)-(28,0)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "publish/channel",
      "apiContract:supportedOperation": [
        {
          "@id": "#12"
        }
      ],
      "smaps": {
        "lexical": {
          "#11": "[(28,2)-(31,49)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "subscribe",
      "apiContract:returns": [
        {
          "@id": "#10"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(25,6)-(28,0)]",
          "#9": "[(24,4)-(28,0)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "publish",
      "apiContract:expects": [
        {
          "@id": "#13"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:expects": "[(30,6)-(31,49)]",
          "#12": "[(29,4)-(31,49)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "someMessage",
      "apiContract:payload": [
        {
          "@id": "#5"
        }
      ],
      "core:displayName": "lightMeasured",
      "core:title": "Light measured",
      "apiContract:headerSchema": {
        "@id": "#2"
      },
      "smaps": {
        "resolved-link-target": {
          "#10": "amf://id#1"
        },
        "declared-element": {
          "#10": ""
        },
        "lexical": {
          "apiContract:headerSchema": "[(10,6)-(15,0)]",
          "core:displayName": "[(19,6)-(20,0)]",
          "#10": "[(9,4)-(22,0)]",
          "core:title": "[(20,6)-(22,0)]"
        },
        "resolved-link": {
          "#10": "amf://id#10"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "apiContract:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "someMessage",
      "apiContract:payload": [
        {
          "@id": "#5"
        }
      ],
      "core:displayName": "lightMeasured",
      "core:title": "Light measured",
      "apiContract:headerSchema": {
        "@id": "#2"
      },
      "smaps": {
        "resolved-link-target": {
          "#13": "amf://id#1"
        },
        "declared-element": {
          "#13": ""
        },
        "lexical": {
          "apiContract:headerSchema": "[(10,6)-(15,0)]",
          "core:displayName": "[(19,6)-(20,0)]",
          "#13": "[(9,4)-(22,0)]",
          "core:title": "[(20,6)-(22,0)]"
        },
        "resolved-link": {
          "#13": "amf://id#13"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "apiContract:schemaMediaType": "application/schema+json;version=draft-07",
      "raml-shapes:schema": {
        "@id": "#6"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(15,6)-(17,0)]",
          "core:mediaType": "[(18,6)-(19,0)]",
          "apiContract:schemaMediaType": "[(17,6)-(18,0)]"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#3"
        }
      ],
      "shacl:name": "schema",
      "smaps": {
        "type-property-lexical-info": {
          "#2": "[(11,8)-(11,12)]"
        },
        "lexical": {
          "#2": "[(10,6)-(15,0)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "schema",
      "smaps": {
        "type-property-lexical-info": {
          "#6": "[(16,8)-(16,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(16,8)-(17,0)]",
          "#6": "[(15,6)-(17,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#a"
        }
      ],
      "raml-shapes:range": {
        "@id": "#4"
      },
      "shacl:minCount": 0,
      "shacl:name": "a",
      "smaps": {
        "lexical": {
          "#3": "[(13,10)-(15,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "a",
      "smaps": {
        "type-property-lexical-info": {
          "#4": "[(14,12)-(14,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(14,12)-(15,0)]",
          "#4": "[(13,10)-(15,0)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#7"
      },
      "doc:version": "2.2.0",
      "doc:root": true
    },
    {
      "@id": "#1",
      "@type": [
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "someMessage",
      "apiContract:payload": [
        {
          "@id": "#5"
        }
      ],
      "core:displayName": "lightMeasured",
      "core:title": "Light measured",
      "apiContract:headerSchema": {
        "@id": "#2"
      },
      "smaps": {
        "declared-element": {
          "#1": ""
        },
        "lexical": {
          "apiContract:headerSchema": "[(10,6)-(15,0)]",
          "core:displayName": "[(19,6)-(20,0)]",
          "#1": "[(9,4)-(22,0)]",
          "core:title": "[(20,6)-(22,0)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
