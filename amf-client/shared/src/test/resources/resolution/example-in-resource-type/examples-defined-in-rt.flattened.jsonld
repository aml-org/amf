{
  "@graph": [
    {
      "@id": "#23",
      "@type": [
        "apiContract:WebAPI",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "PC Billing System API",
      "apiContract:endpoint": [
        {
          "@id": "#24"
        }
      ],
      "smaps": {
        "source-vendor": {
          "#23": "RAML 1.0"
        },
        "lexical": {
          "core:name": "[(2,0)-(4,0)]",
          "#23": "[(2,0)-(28,27)]"
        }
      }
    },
    {
      "@id": "#24",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/applying-rt",
      "apiContract:supportedOperation": [
        {
          "@id": "#25"
        }
      ],
      "doc:extends": [
        {
          "@id": "#2"
        }
      ],
      "smaps": {
        "lexical": {
          "#24": "[(22,0)-(28,27)]"
        }
      }
    },
    {
      "@id": "#25",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "apiContract:returns": [
        {
          "@id": "#26"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(25,4)-(28,27)]",
          "#25": "[(24,2)-(28,27)]"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "apiContract:ParametrizedResourceType",
        "doc:ParametrizedDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "readOnlyCollection",
      "doc:target": {
        "@id": "#11"
      },
      "smaps": {
        "lexical": {
          "core:name": "[(23,8)-(23,26)]",
          "#2": "[(23,8)-(23,26)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#8"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(27,8)-(28,27)]",
          "#26": "[(26,6)-(28,27)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "apiContract:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "readOnlyCollection",
      "doc:dataNode": {
        "@id": "#12"
      },
      "doc:variable": [
        "resourcePathName"
      ],
      "smaps": {
        "resolved-link-target": {
          "#11": "amf://id#11"
        },
        "declared-element": {
          "#11": ""
        },
        "lexical": {
          "doc:dataNode": "[(12,4)-(22,0)]",
          "#11": "[(11,2)-(22,0)]"
        },
        "resolved-link": {
          "#11": "amf://id#22"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "smaps": {
        "lexical": {
          "#8": "[(28,10)-(28,27)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:get": {
        "@id": "#13"
      },
      "core:name": "object_1",
      "smaps": {
        "lexical": {
          "data:get": "[(12,4)-(22,0)]",
          "#12": "[(12,4)-(22,0)]"
        }
      }
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#3"
        }
      ],
      "shacl:name": "message",
      "apiContract:examples": [
        {
          "@id": "#5"
        }
      ],
      "smaps": {
        "extension-provenance": {
          "shacl:name": "id->amf://id#2",
          "shacl:closed": "id->amf://id#2"
        },
        "resolved-link-target": {
          "#1": "amf://id#10"
        },
        "declared-element": {
          "#1": ""
        },
        "lexical": {
          "shacl:name": "[(5,2)-(5,9)]",
          "#1": "[(5,2)-(10,0)]"
        },
        "resolved-link": {
          "#1": "amf://id#9"
        },
        "auto-generated-name": {
          "#1": ""
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:responses": {
        "@id": "#14"
      },
      "core:name": "get",
      "smaps": {
        "lexical": {
          "data:responses": "[(13,6)-(22,0)]",
          "#13": "[(13,0)-(22,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#message"
        }
      ],
      "raml-shapes:range": {
        "@id": "#4"
      },
      "shacl:minCount": 1,
      "shacl:name": "message",
      "smaps": {
        "extension-provenance": {
          "shacl:name": "id->amf://id#2",
          "shacl:path": "id->amf://id#2",
          "#3": "id->amf://id#2",
          "shacl:minCount": "id->amf://id#2"
        },
        "lexical": {
          "#3": "[(7,6)-(10,0)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "search yielded nothing",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#6"
      },
      "doc:raw": "message: Matching applying-rt not found",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "extension-provenance": {
          "doc:raw": "id->amf://id#2",
          "core:name": "id->amf://id#2",
          "#5": "id->amf://id#2",
          "doc:strict": "id->amf://id#2"
        },
        "lexical": {
          "doc:raw": "[(20,18)-(20,66)]",
          "core:name": "[(19,16)-(20,66)]",
          "#5": "[(19,16)-(20,66)]",
          "doc:structuredValue": "[(20,18)-(20,66)]"
        },
        "local-element": {
          "#5": ""
        },
        "tracked-element": {
          "#5": "amf://id#8"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:200": {
        "@id": "#15"
      },
      "core:name": "responses",
      "smaps": {
        "lexical": {
          "data:200": "[(14,8)-(22,0)]",
          "#14": "[(14,0)-(22,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "message",
      "smaps": {
        "extension-provenance": {
          "shacl:name": "id->amf://id#2",
          "shacl:datatype": "id->amf://id#2"
        },
        "lexical": {
          "#4": "[(7,6)-(10,0)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:message": {
        "@id": "#7"
      },
      "core:name": "object_1",
      "smaps": {
        "extension-provenance": {
          "core:name": "id->amf://id#2"
        },
        "lexical": {
          "data:message": "[(20,18)-(20,66)]",
          "#6": "[(20,18)-(20,66)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:body": {
        "@id": "#16"
      },
      "core:name": "200",
      "smaps": {
        "lexical": {
          "data:body": "[(15,10)-(22,0)]",
          "#15": "[(15,0)-(22,0)]"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Matching applying-rt not found",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "message",
      "smaps": {
        "extension-provenance": {
          "core:name": "id->amf://id#2",
          "data:value": "id->amf://id#2",
          "#7": "id->amf://id#2",
          "shacl:datatype": "id->amf://id#2"
        },
        "lexical": {
          "#7": "[(20,27)-(20,66)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:application%2Fjson": {
        "@id": "#17"
      },
      "core:name": "body",
      "smaps": {
        "lexical": {
          "data:application%2Fjson": "[(16,12)-(22,0)]",
          "#16": "[(16,0)-(22,0)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:type": {
        "@id": "#18"
      },
      "data:examples": {
        "@id": "#19"
      },
      "core:name": "application/json",
      "smaps": {
        "lexical": {
          "data:examples": "[(18,14)-(22,0)]",
          "#17": "[(17,0)-(22,0)]",
          "data:type": "[(17,14)-(18,0)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "message",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "type",
      "smaps": {
        "lexical": {
          "#18": "[(17,20)-(17,27)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:search%20yielded%20nothing": {
        "@id": "#20"
      },
      "core:name": "examples",
      "smaps": {
        "lexical": {
          "data:search%20yielded%20nothing": "[(19,16)-(22,0)]",
          "#19": "[(19,0)-(22,0)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:message": {
        "@id": "#21"
      },
      "core:name": "search yielded nothing",
      "smaps": {
        "lexical": {
          "data:message": "[(20,18)-(22,0)]",
          "#20": "[(20,0)-(22,0)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Matching <<resourcePathName>> not found",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "message",
      "smaps": {
        "lexical": {
          "#21": "[(20,27)-(20,66)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#11"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#23"
      },
      "doc:version": "2.1.1",
      "doc:root": true
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
