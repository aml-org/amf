"""
schema documentation
"""
schema @MyDirective(text: "Luke Skywalker") {
    query: Query
    mutation: Mutation
}

type Query {
    """
    field description
    """
    searchResult: SearchResult
}

type Mutation {
    changeUserStatus: OutputType
}

"""
an input type.
"""
input InputType {
    randomText: String
}

type Person implements HasName {
    name: String
    surname: String
}

interface HasName {
    name: String
}

extend interface HasName {
    surname: String
}

type Dog {
    name: String!
    breed: String!
}

union SearchResult = Person | Dog

"""A directive."""
directive @MyDirective(
    """A directive argument."""
    text: String
) on SCHEMA

enum Planet {
    """A Planet."""
    MERCURY
    VENUS
    EARTH
    MARS
    JUPITER
    SATURN
    URANUS
    NEPTUNE
}

extend enum Planet {
    PLUTO
}

scalar Date

type OutputType {
    success(input_: InputType!): Boolean
}