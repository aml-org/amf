{
  "@graph": [
    {
      "@id": "#10",
      "@type": [
        "apiContract:WebAPI",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "some api",
      "smaps": {
        "source-vendor": {
          "#10": "RAML 1.0"
        },
        "lexical": {
          "core:name": "[(2,0)-(4,0)]",
          "#10": "[(2,0)-(13,22)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#6"
        },
        {
          "@id": "#8"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#10"
      },
      "doc:version": "2.1.0",
      "doc:root": true
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#2"
        }
      ],
      "shacl:name": "user",
      "smaps": {
        "resolved-link-target": {
          "#1": "amf://id#1"
        },
        "declared-element": {
          "#1": ""
        },
        "lexical": {
          "shacl:name": "[(5,2)-(5,6)]",
          "#1": "[(5,2)-(9,0)]"
        },
        "resolved-link": {
          "#1": "amf://id#5"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "raml-shapes:ArrayShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "#1"
      },
      "shacl:name": "users",
      "smaps": {
        "resolved-link-target": {
          "#6": "amf://id#6"
        },
        "declared-element": {
          "#6": ""
        },
        "lexical": {
          "shacl:name": "[(9,2)-(9,7)]",
          "#6": "[(9,2)-(12,0)]"
        },
        "type-property-lexical-info": {
          "#6": "[(10,4)-(10,8)]"
        },
        "resolved-link": {
          "#6": "amf://id#7"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "raml-shapes:UnionShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "#1"
        },
        {
          "@id": "#6"
        }
      ],
      "shacl:name": "theUnion",
      "smaps": {
        "inherited-shapes": {
          "#8": "amf://id#9"
        },
        "type-property-lexical-info": {
          "#8": "[(13,4)-(13,8)]"
        },
        "lexical": {
          "shacl:name": "[(12,2)-(12,10)]",
          "#8": "[(12,11)-(13,22)]"
        },
        "declared-element": {
          "#8": ""
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#user-id"
        }
      ],
      "raml-shapes:range": {
        "@id": "#3"
      },
      "shacl:minCount": 1,
      "shacl:name": "user-id",
      "smaps": {
        "lexical": {
          "#2": "[(7,6)-(9,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "user-id",
      "smaps": {
        "type-property-lexical-info": {
          "#3": "[(8,8)-(8,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(8,8)-(9,0)]",
          "#3": "[(7,6)-(9,0)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
