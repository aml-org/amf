{
  "@graph": [
    {
      "@id": "#1",
      "@type": [
        "apiContract:AsyncAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "someThing",
      "core:version": "1.0.0",
      "apiContract:endpoint": [
        {
          "@id": "#2"
        }
      ],
      "smaps": {
        "source-vendor": {
          "#1": "ASYNC 2.0"
        },
        "lexical": {
          "apiContract:endpoint": "[(5,0)-(31,0)]",
          "core:name": "[(3,2)-(4,0)]",
          "#1": "[(1,0)-(31,0)]",
          "core:version": "[(4,2)-(5,0)]"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "aChannel",
      "apiContract:supportedOperation": [
        {
          "@id": "#3"
        }
      ],
      "smaps": {
        "lexical": {
          "#2": "[(6,2)-(31,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "publish",
      "apiContract:expects": [
        {
          "@id": "#4"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:expects": "[(8,6)-(31,0)]",
          "#3": "[(7,4)-(31,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "apiContract:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#14"
        }
      ],
      "apiContract:headerSchema": {
        "@id": "#5"
      },
      "smaps": {
        "lexical": {
          "apiContract:headerSchema": "[(9,8)-(14,0)]",
          "#4": "[(9,0)-(31,0)]"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#15"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(14,8)-(22,0)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#6"
        }
      ],
      "shacl:name": "schema",
      "apiContract:examples": [
        {
          "@id": "#8"
        },
        {
          "@id": "#11"
        }
      ],
      "smaps": {
        "type-property-lexical-info": {
          "#5": "[(10,10)-(10,14)]"
        },
        "lexical": {
          "#5": "[(9,8)-(14,0)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#16"
        }
      ],
      "shacl:name": "schema",
      "apiContract:examples": [
        {
          "@id": "#18"
        },
        {
          "@id": "#21"
        },
        {
          "@id": "#24"
        },
        {
          "@id": "#27"
        }
      ],
      "smaps": {
        "type-property-lexical-info": {
          "#15": "[(15,10)-(15,14)]"
        },
        "lexical": {
          "#15": "[(14,8)-(22,0)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#a"
        }
      ],
      "raml-shapes:range": {
        "@id": "#7"
      },
      "shacl:minCount": 0,
      "shacl:name": "a",
      "smaps": {
        "lexical": {
          "#6": "[(12,12)-(14,0)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "default-example_1",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#9"
      },
      "doc:raw": "a: first header",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "doc:raw": "[(26,0)-(27,0)]",
          "#8": "[(25,20)-(27,0)]",
          "doc:structuredValue": "[(25,20)-(27,0)]"
        },
        "tracked-element": {
          "#8": "amf://id#4"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "default-example_4",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#12"
      },
      "doc:raw": "a: second header",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "doc:raw": "[(30,0)-(31,0)]",
          "#11": "[(29,20)-(31,0)]",
          "doc:structuredValue": "[(29,20)-(31,0)]"
        },
        "tracked-element": {
          "#11": "amf://id#4"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#17"
      },
      "shacl:minCount": 0,
      "shacl:name": "name",
      "smaps": {
        "lexical": {
          "#16": "[(17,12)-(19,0)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "default-example_1",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#19"
      },
      "doc:raw": "name: Pipi",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "doc:raw": "[(20,14)-(21,0)]",
          "#18": "[(20,14)-(21,0)]",
          "doc:structuredValue": "[(20,14)-(21,0)]"
        },
        "tracked-element": {
          "#18": "amf://id#14"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "default-example_2",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#22"
      },
      "doc:raw": "name: Romagnoli",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "doc:raw": "[(21,14)-(22,0)]",
          "#21": "[(21,14)-(22,0)]",
          "doc:structuredValue": "[(21,14)-(22,0)]"
        },
        "tracked-element": {
          "#21": "amf://id#14"
        }
      }
    },
    {
      "@id": "#24",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "default-example_2",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#25"
      },
      "doc:raw": "name: Johnny",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "doc:raw": "[(24,0)-(25,0)]",
          "#24": "[(23,20)-(25,0)]",
          "doc:structuredValue": "[(23,20)-(25,0)]"
        },
        "tracked-element": {
          "#24": "amf://id#4"
        }
      }
    },
    {
      "@id": "#27",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "default-example_3",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#28"
      },
      "doc:raw": "name: Goode",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "doc:raw": "[(28,0)-(29,0)]",
          "#27": "[(27,20)-(29,0)]",
          "doc:structuredValue": "[(27,20)-(29,0)]"
        },
        "tracked-element": {
          "#27": "amf://id#4"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "a",
      "smaps": {
        "type-property-lexical-info": {
          "#7": "[(13,14)-(13,18)]"
        },
        "lexical": {
          "shacl:datatype": "[(13,14)-(14,0)]",
          "#7": "[(12,12)-(14,0)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:a": {
        "@id": "#10"
      },
      "core:name": "object_1",
      "smaps": {
        "lexical": {
          "data:a": "[(26,14)-(27,0)]",
          "#9": "[(26,0)-(27,0)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:a": {
        "@id": "#13"
      },
      "core:name": "object_1",
      "smaps": {
        "lexical": {
          "data:a": "[(30,14)-(31,0)]",
          "#12": "[(30,0)-(31,0)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "type-property-lexical-info": {
          "#17": "[(18,14)-(18,18)]"
        },
        "lexical": {
          "shacl:datatype": "[(18,14)-(19,0)]",
          "#17": "[(17,12)-(19,0)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:name": {
        "@id": "#20"
      },
      "core:name": "object_1",
      "smaps": {
        "lexical": {
          "data:name": "[(20,14)-(21,0)]",
          "#19": "[(20,14)-(21,0)]"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:name": {
        "@id": "#23"
      },
      "core:name": "object_1",
      "smaps": {
        "lexical": {
          "data:name": "[(21,14)-(22,0)]",
          "#22": "[(21,14)-(22,0)]"
        }
      }
    },
    {
      "@id": "#25",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:name": {
        "@id": "#26"
      },
      "core:name": "object_1",
      "smaps": {
        "lexical": {
          "data:name": "[(24,14)-(25,0)]",
          "#25": "[(24,0)-(25,0)]"
        }
      }
    },
    {
      "@id": "#28",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:name": {
        "@id": "#29"
      },
      "core:name": "object_1",
      "smaps": {
        "lexical": {
          "data:name": "[(28,14)-(29,0)]",
          "#28": "[(28,0)-(29,0)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "first header",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "a",
      "smaps": {
        "lexical": {
          "#10": "[(26,17)-(26,29)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "second header",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "a",
      "smaps": {
        "lexical": {
          "#13": "[(30,17)-(30,30)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Pipi",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "lexical": {
          "#20": "[(20,20)-(20,24)]"
        }
      }
    },
    {
      "@id": "#23",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Romagnoli",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "lexical": {
          "#23": "[(21,20)-(21,29)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Johnny",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "lexical": {
          "#26": "[(24,20)-(24,26)]"
        }
      }
    },
    {
      "@id": "#29",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Goode",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "lexical": {
          "#29": "[(28,20)-(28,25)]"
        }
      }
    },
    {
      "@id": "",
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#1"
      },
      "doc:version": "2.4.0",
      "doc:root": true
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
