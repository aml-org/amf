[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "#21",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "Testing same example with different names"
          }
        ],
        "apiContract:accepts": [
          {
            "@value": "application/json"
          }
        ],
        "apiContract:contentType": [
          {
            "@value": "application/json"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#22",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/one"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#23",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#24",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#8",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#4/link--90472973",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#4"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "UsingObj"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#8": "[(14,6)-(22,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#24": "[(13,9)-(22,0)]"
                      },
                      "virtual-element": {
                        "#24": "true"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#23": "[(12,2)-(22,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(11,0)-(11,4)]",
                "#22": "[(11,0)-(22,0)]"
              }
            }
          },
          {
            "@id": "#25",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/two"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#26",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#27",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#9",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#4/link--90472973",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#4"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "UsingObj"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#9": "[(24,4)-(31,13)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#27": "[(24,9)-(31,13)]"
                      },
                      "virtual-element": {
                        "#27": "true"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#26": "[(23,2)-(31,13)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(22,0)-(22,4)]",
                "#25": "[(22,0)-(31,13)]"
              }
            }
          }
        ],
        "smaps": {
          "single-value-array": {
            "apiContract:contentType": "",
            "apiContract:accepts": ""
          },
          "lexical": {
            "apiContract:contentType": "[(4,0)-(6,0)]",
            "core:name": "[(2,0)-(4,0)]",
            "#21": "[(2,0)-(31,13)]",
            "apiContract:accepts": "[(4,0)-(6,0)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#20",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.8.2"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "RAML 1.0"
          }
        ]
      }
    ],
    "doc:references": [
      {
        "@id": "#1",
        "@type": [
          "doc:ExternalFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "#3",
            "@type": [
              "doc:ExternalDomainElement",
              "doc:DomainElement"
            ],
            "doc:raw": [
              {
                "@value": "{\n  \"ok\" : true\n}"
              }
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ],
            "smaps": {
              "lexical": {
                "#3": "[(1,0)-(3,1)]"
              }
            }
          }
        ],
        "doc:root": [
          {
            "@value": false
          }
        ],
        "doc:processingData": [
          {
            "@id": "#2",
            "@type": [
              "doc:BaseUnitProcessingData"
            ],
            "doc:transformed": [
              {
                "@value": false
              }
            ]
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#4",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#16",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#ok"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#17",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "ok"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:datatype": "[(9,10)-(9,17)]",
                    "#17": "[(9,6)-(11,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "ok"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true",
                "shacl:path": "true"
              },
              "lexical": {
                "raml-shapes:range": "[(9,10)-(9,17)]",
                "#16": "[(9,6)-(11,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "UsingObj"
          }
        ],
        "apiContract:examples": [
          {
            "@id": "#5",
            "@type": [
              "apiContract:Example",
              "doc:DomainElement"
            ],
            "core:name": [
              {
                "@value": "sameExample1"
              }
            ],
            "doc:strict": [
              {
                "@value": true
              }
            ],
            "doc:structuredValue": [
              {
                "@id": "#6",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:ok": [
                  {
                    "@id": "#7",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "true"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "ok"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#7": "[(2,9)-(2,13)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "object_1"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:ok": "[(2,2)-(2,13)]",
                    "#6": "[(1,0)-(3,1)]"
                  },
                  "parsed-json-example": {
                    "#6": "{\n  \"ok\" : true\n}"
                  }
                }
              }
            ],
            "doc:reference-id": [
              {
                "@id": "#3"
              }
            ],
            "doc:location": [
              {
                "@value": "file://amf-cli/shared/src/test/resources/validations/dup-name-example-tracking/same-example.json"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "doc:strict": "true"
              },
              "lexical": {
                "#5": "[(17,10)-(18,0)]"
              },
              "tracked-element": {
                "#5": "amf://id#8,amf://id#9"
              }
            }
          },
          {
            "@id": "#10",
            "@type": [
              "apiContract:Example",
              "doc:DomainElement"
            ],
            "core:name": [
              {
                "@value": "sameExample2"
              }
            ],
            "doc:strict": [
              {
                "@value": true
              }
            ],
            "doc:structuredValue": [
              {
                "@id": "#11",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:ok": [
                  {
                    "@id": "#12",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "true"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "ok"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#12": "[(20,32)-(20,36)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "object_1"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:ok": "[(20,25)-(20,36)]",
                    "#11": "[(19,23)-(21,24)]"
                  },
                  "parsed-json-example": {
                    "#11": "{\n  \"ok\" : true\n}\n"
                  }
                }
              }
            ],
            "doc:raw": [
              {
                "@value": "{\n  \"ok\" : true\n}\n"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "doc:raw": "true",
                "doc:strict": "true"
              },
              "lexical": {
                "#10": "[(18,10)-(22,0)]"
              },
              "tracked-element": {
                "#10": "amf://id#8"
              }
            }
          },
          {
            "@id": "#13",
            "@type": [
              "apiContract:Example",
              "doc:DomainElement"
            ],
            "core:name": [
              {
                "@value": "sameExample3"
              }
            ],
            "doc:strict": [
              {
                "@value": true
              }
            ],
            "doc:structuredValue": [
              {
                "@id": "#14",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:ok": [
                  {
                    "@id": "#15",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "true"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "ok"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#15": "[(30,32)-(30,36)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "object_1"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:ok": "[(30,25)-(30,36)]",
                    "#14": "[(29,23)-(31,24)]"
                  },
                  "parsed-json-example": {
                    "#14": "{\n  \"ok\" : true\n}"
                  }
                }
              }
            ],
            "doc:raw": [
              {
                "@value": "{\n  \"ok\" : true\n}"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "doc:raw": "true",
                "doc:strict": "true"
              },
              "lexical": {
                "#13": "[(28,10)-(31,13)]"
              },
              "tracked-element": {
                "#13": "amf://id#9"
              }
            }
          }
        ],
        "smaps": {
          "synthesized-field": {
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#4": "amf://id#19"
          },
          "lexical": {
            "shacl:name": "[(7,2)-(7,10)]",
            "#4": "[(7,2)-(11,0)]"
          },
          "declared-element": {
            "#4": ""
          },
          "resolved-link-target": {
            "#4": "amf://id#4"
          }
        }
      }
    ],
    "@context": {
      "@base": "amf://id",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "data": "http://a.ml/vocabularies/data#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
