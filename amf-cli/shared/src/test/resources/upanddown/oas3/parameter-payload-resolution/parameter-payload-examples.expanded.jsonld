[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "#8",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "Basic Callbacks"
          }
        ],
        "core:version": [
          {
            "@value": "0.1"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#9",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/test"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#10",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#11",
                    "@type": [
                      "apiContract:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "description"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#12",
                        "@type": [
                          "apiContract:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#13",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ],
                            "apiContract:examples": [
                              {
                                "@id": "#14",
                                "@type": [
                                  "apiContract:Example",
                                  "doc:DomainElement"
                                ],
                                "doc:strict": [
                                  {
                                    "@value": true
                                  }
                                ],
                                "core:mediaType": [
                                  {
                                    "@value": "application/json"
                                  }
                                ],
                                "doc:structuredValue": [
                                  {
                                    "@id": "#15",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "Example defined in payload"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "scalar_1"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#15": "[(38,27)-(38,55)]"
                                      }
                                    }
                                  }
                                ],
                                "doc:raw": [
                                  {
                                    "@value": "Example defined in payload"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "doc:raw": "true",
                                    "doc:strict": "true",
                                    "core:mediaType": "true"
                                  },
                                  "lexical": {
                                    "#14": "[(38,27)-(38,55)]"
                                  },
                                  "tracked-element": {
                                    "#14": "amf://id#12"
                                  }
                                }
                              }
                            ],
                            "smaps": {
                              "auto-generated-name": {
                                "#13": ""
                              },
                              "lexical": {
                                "shacl:datatype": "[(36,18)-(36,34)]",
                                "#13": "[(35,16)-(37,17)]"
                              },
                              "type-property-lexical-info": {
                                "#13": "[(36,18)-(36,24)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "raml-shapes:schema": "[(35,16)-(37,17)]",
                            "#12": "[(34,14)-(39,15)]",
                            "core:mediaType": "[(34,14)-(34,32)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(33,12)-(40,13)]",
                        "core:name": "[(31,10)-(31,15)]",
                        "#11": "[(31,10)-(41,11)]",
                        "core:description": "[(32,12)-(32,40)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(30,8)-(42,9)]",
                    "#10": "[(29,6)-(43,7)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "#9": "[(28,4)-(44,5)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "apiContract:endpoint": "[(27,2)-(45,3)]",
            "core:name": "[(4,4)-(4,30)]",
            "#8": "[(1,0)-(47,1)]",
            "core:version": "[(5,4)-(5,20)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#7",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.3.0"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "OAS 3.0"
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#1",
        "@type": [
          "apiContract:Parameter",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "simple"
          }
        ],
        "apiContract:paramName": [
          {
            "@value": "token"
          }
        ],
        "core:description": [
          {
            "@value": "token to be passed as a header"
          }
        ],
        "apiContract:required": [
          {
            "@value": false
          }
        ],
        "apiContract:style": [
          {
            "@value": "simple"
          }
        ],
        "apiContract:explode": [
          {
            "@value": false
          }
        ],
        "apiContract:binding": [
          {
            "@value": "header"
          }
        ],
        "raml-shapes:schema": [
          {
            "@id": "#2",
            "@type": [
              "raml-shapes:ScalarShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": [
              {
                "@id": "http://www.w3.org/2001/XMLSchema#string"
              }
            ],
            "shacl:name": [
              {
                "@value": "simple"
              }
            ],
            "apiContract:examples": [
              {
                "@id": "#3",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "#4",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "Example defined in schema"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#4": "[(15,21)-(15,48)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "Example defined in schema"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:raw": "true",
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "#3": "[(15,21)-(15,48)]"
                  }
                }
              },
              {
                "@id": "#5",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "a"
                  }
                ],
                "apiContract:guiSummary": [
                  {
                    "@value": "simple example"
                  }
                ],
                "core:description": [
                  {
                    "@value": "description of the example"
                  }
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "#6",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "Example defined in parameter examples"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#6": "[(21,21)-(21,60)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "Example defined in parameter examples"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:raw": "true",
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "doc:structuredValue": "[(21,12)-(21,60)]",
                    "apiContract:guiSummary": "[(19,12)-(19,39)]",
                    "#5": "[(18,10)-(22,11)]",
                    "core:name": "[(18,10)-(18,13)]",
                    "core:description": "[(20,12)-(20,55)]"
                  },
                  "tracked-element": {
                    "#5": "amf://id#1"
                  }
                }
              }
            ],
            "smaps": {
              "auto-generated-name": {
                "#2": ""
              },
              "lexical": {
                "shacl:datatype": "[(14,10)-(14,26)]",
                "#2": "[(13,8)-(16,9)]"
              },
              "type-property-lexical-info": {
                "#2": "[(14,10)-(14,16)]"
              }
            }
          }
        ],
        "smaps": {
          "synthesized-field": {
            "apiContract:explode": "true",
            "apiContract:required": "true",
            "apiContract:style": "true"
          },
          "lexical": {
            "raml-shapes:schema": "[(13,8)-(16,9)]",
            "core:description": "[(12,8)-(12,55)]",
            "#1": "[(9,6)-(24,7)]",
            "apiContract:paramName": "[(10,8)-(10,23)]",
            "apiContract:binding": "[(11,8)-(11,22)]"
          },
          "declared-element": {
            "#1": ""
          }
        }
      }
    ],
    "@context": {
      "@base": "amf://id",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "data": "http://a.ml/vocabularies/data#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
