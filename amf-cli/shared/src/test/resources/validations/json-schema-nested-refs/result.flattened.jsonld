{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "/web-api",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "some title",
      "core:description": "some description",
      "apiContract:server": [
        {
          "@id": "#/web-api/server/uri"
        }
      ],
      "apiContract:accepts": [
        "application/json"
      ],
      "apiContract:contentType": [
        "application/json"
      ],
      "core:version": "1.0",
      "smaps": {
        "single-value-array": {
          "apiContract:contentType": "",
          "apiContract:accepts": ""
        },
        "lexical": {
          "core:version": "[(5,0)-(6,0)]",
          "apiContract:accepts": "[(6,0)-(7,0)]",
          "core:description": "[(7,0)-(9,0)]",
          "/web-api": "[(2,0)-(16,0)]",
          "core:name": "[(4,0)-(5,0)]",
          "apiContract:server": "[(2,0)-(4,0)]",
          "apiContract:contentType": "[(6,0)-(7,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/server/uri",
      "@type": [
        "apiContract:Server",
        "doc:DomainElement"
      ],
      "core:urlTemplate": "uri",
      "smaps": {
        "lexical": {
          "core:urlTemplate": "[(2,0)-(4,0)]"
        },
        "synthesized-field": {
          "#/web-api/server/uri": "true"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#/references/0"
        },
        {
          "@id": "#/references/1"
        }
      ],
      "doc:declares": [
        {
          "@id": "#/declares/shape/someType"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/web-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/references/0",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/0/external"
      },
      "doc:references": [
        {
          "@id": "#/references/0/references/0"
        }
      ],
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/0/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/references/1",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/1/external"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/1/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/declares/shape/someType",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/inherited"
        },
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/additionalApplicants/inherited"
        },
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/inherited"
        },
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/operator/inherited"
        }
      ],
      "shacl:name": "someType",
      "apiContract:examples": [
        {
          "@id": "#/declares/shape/someType/examples/example/default-example"
        }
      ],
      "doc:reference-id": [
        {
          "@id": "#/references/0/external"
        }
      ],
      "smaps": {
        "inheritance-provenance": {
          "doc:reference-id": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema"
        },
        "declared-element": {
          "#/declares/shape/someType": ""
        },
        "lexical": {
          "apiContract:examples": "[(12,4)-(16,0)]",
          "#/declares/shape/someType": "[(10,11)-(16,0)]",
          "shacl:name": "[(10,2)-(10,10)]"
        },
        "inherited-shapes": {
          "#/declares/shape/someType": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema/link--907987551"
        }
      }
    },
    {
      "@id": "#/references/0/external",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\r\n  \"$schema\": \"http://json-schema.org/draft-04/schema\",\r\n  \"type\": \"object\",\r\n  \"additionalProperties\": false,\r\n  \"properties\": {\r\n    \"merchant\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"operator\": {\r\n      \"type\": \"string\"\r\n    },\r\n\r\n    \"primaryApplicant\": {\r\n      \"$ref\": \"definitions.json#/applicant\"\r\n    },\r\n    \"additionalApplicants\": {\r\n      \"$ref\": \"definitions.json#/applicant\"\r\n    }\r\n  },\r\n  \"required\": [\r\n    \"merchant\",\r\n    \"operator\"\r\n  ]\r\n}",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#/references/0/external": "[(1,0)-(24,1)]"
        }
      }
    },
    {
      "@id": "#/references/0/references/0",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/0/references/0/external"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/0/references/0/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/references/0/BaseUnitProcessingData",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    },
    {
      "@id": "#/references/1/external",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\n  \"additionalApplicants\": {\n    \"addresses\": {\n      \"randomKey\": \"Current\"\n    },\n    \"expenses\": {\n      \"otherRandomKey\": \"Basic\"\n    }\n  },\n  \"merchant\": \"STRATTON - QLD\",\n  \"operator\": \"kenandrajog_adm\"\n}",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#/references/1/external": "[(1,0)-(12,1)]"
        }
      }
    },
    {
      "@id": "#/references/1/BaseUnitProcessingData",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/inherited",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#primaryApplicant"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant"
      },
      "shacl:minCount": 0,
      "shacl:name": "primaryApplicant",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/inherited": "[(13,4)-(15,5)]"
        },
        "inheritance-provenance": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/inherited": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/additionalApplicants/inherited",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#additionalApplicants"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant"
      },
      "shacl:minCount": 0,
      "shacl:name": "additionalApplicants",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/additionalApplicants/inherited": "[(16,4)-(18,5)]"
        },
        "inheritance-provenance": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/additionalApplicants/inherited": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/inherited",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#merchant"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/scalar/merchant"
      },
      "shacl:minCount": 1,
      "shacl:name": "merchant",
      "smaps": {
        "inheritance-provenance": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/inherited": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema"
        },
        "lexical": {
          "shacl:minCount": "[(21,4)-(21,14)]",
          "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/inherited": "[(6,4)-(8,5)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/operator/inherited",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#operator"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/operator/scalar/operator"
      },
      "shacl:minCount": 1,
      "shacl:name": "operator",
      "smaps": {
        "inheritance-provenance": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/operator/inherited": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema"
        },
        "lexical": {
          "shacl:minCount": "[(22,4)-(22,14)]",
          "#/declares/shape/someType/inherits/shape/schema/property/property/operator/inherited": "[(9,4)-(11,5)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1"
      },
      "doc:reference-id": [
        {
          "@id": "#/references/1/external"
        }
      ],
      "doc:location": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/examples/CreateApplicationRequest.json",
      "smaps": {
        "synthesized-field": {
          "doc:strict": "true"
        },
        "lexical": {
          "#/declares/shape/someType/examples/example/default-example": "[(1,0)-(1,0)]"
        }
      }
    },
    {
      "@id": "#/references/0/references/0/external",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\r\n  \"$schema\": \"http://json-schema.org/draft-04/schema\",\r\n\r\n  \"expensesLiving\": {\r\n    \"type\": \"object\"\r\n  },\r\n  \"fullAddress\": {\r\n    \"type\": \"object\"\r\n  },\r\n  \"applicant\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"addresses\": {\r\n        \"allOf\": [\r\n          {\r\n            \"$ref\": \"#/fullAddress\"\r\n          }\r\n        ]\r\n      },\r\n      \"expenses\": {\r\n        \"anyOf\": [\r\n          {\r\n            \"$ref\": \"#/expensesLiving\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}",
      "core:mediaType": "application/json",
      "smaps": {
        "lexical": {
          "#/references/0/references/0/external": "[(1,0)-(29,1)]"
        }
      }
    },
    {
      "@id": "#/references/0/references/0/BaseUnitProcessingData",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses"
        },
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "applicant",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema/property/property/additionalApplicants/shape/additionalApplicants"
        },
        "lexical": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant": "[(10,2)-(28,3)]"
        },
        "type-property-lexical-info": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant": "[(11,4)-(11,10)]"
        },
        "resolved-link-target": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/scalar/merchant",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "merchant",
      "smaps": {
        "type-property-lexical-info": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/scalar/merchant": "[(7,6)-(7,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(7,6)-(7,22)]",
          "#/declares/shape/someType/inherits/shape/schema/property/property/merchant/scalar/merchant": "[(6,4)-(8,5)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/operator/scalar/operator",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "operator",
      "smaps": {
        "type-property-lexical-info": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/operator/scalar/operator": "[(10,6)-(10,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(10,6)-(10,22)]",
          "#/declares/shape/someType/inherits/shape/schema/property/property/operator/scalar/operator": "[(9,4)-(11,5)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:additionalApplicants": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants"
      },
      "data:merchant": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1/merchant"
      },
      "data:operator": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1/operator"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:operator": "[(11,2)-(11,31)]",
          "data:additionalApplicants": "[(2,2)-(9,3)]",
          "#/declares/shape/someType/examples/example/default-example/object_1": "[(1,0)-(12,1)]",
          "data:merchant": "[(10,2)-(10,30)]"
        },
        "parsed-json-example": {
          "#/declares/shape/someType/examples/example/default-example/object_1": "{\n  \"additionalApplicants\": {\n    \"addresses\": {\n      \"randomKey\": \"Current\"\n    },\n    \"expenses\": {\n      \"otherRandomKey\": \"Basic\"\n    }\n  },\n  \"merchant\": \"STRATTON - QLD\",\n  \"operator\": \"kenandrajog_adm\"\n}"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#addresses"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses/any/addresses"
      },
      "shacl:minCount": 0,
      "shacl:name": "addresses",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses": "[(13,6)-(19,7)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#expenses"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses/any/expenses"
      },
      "shacl:minCount": 0,
      "shacl:name": "expenses",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses": "[(20,6)-(26,7)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:addresses": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/addresses"
      },
      "data:expenses": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/expenses"
      },
      "core:name": "additionalApplicants",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:expenses": "[(6,4)-(8,5)]",
          "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants": "[(2,26)-(9,3)]",
          "data:addresses": "[(3,4)-(5,5)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1/merchant",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "STRATTON - QLD",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "merchant",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/declares/shape/someType/examples/example/default-example/object_1/merchant": "[(10,14)-(10,30)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1/operator",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "kenandrajog_adm",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "operator",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/declares/shape/someType/examples/example/default-example/object_1/operator": "[(11,14)-(11,31)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses/any/addresses",
      "@type": [
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "addresses",
      "shacl:and": [
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses/any/addresses/and/shape/fullAddress"
        }
      ],
      "smaps": {
        "lexical": {
          "shacl:and": "[(14,8)-(18,9)]",
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses/any/addresses": "[(13,6)-(19,7)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses/any/expenses",
      "@type": [
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "expenses",
      "shacl:or": [
        {
          "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses/any/expenses/or/shape/expensesLiving"
        }
      ],
      "smaps": {
        "lexical": {
          "shacl:or": "[(21,8)-(25,9)]",
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses/any/expenses": "[(20,6)-(26,7)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/addresses",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:randomKey": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/addresses/randomKey"
      },
      "core:name": "addresses",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:randomKey": "[(4,6)-(4,28)]",
          "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/addresses": "[(3,17)-(5,5)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/expenses",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:otherRandomKey": {
        "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/expenses/otherRandomKey"
      },
      "core:name": "expenses",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:otherRandomKey": "[(7,6)-(7,31)]",
          "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/expenses": "[(6,16)-(8,5)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses/any/addresses/and/shape/fullAddress",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [],
      "shacl:name": "fullAddress",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses/any/addresses/and/shape/fullAddress": "[(7,2)-(9,3)]"
        },
        "type-property-lexical-info": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/addresses/any/addresses/and/shape/fullAddress": "[(8,4)-(8,10)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses/any/expenses/or/shape/expensesLiving",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [],
      "shacl:name": "expensesLiving",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses/any/expenses/or/shape/expensesLiving": "[(4,2)-(6,3)]"
        },
        "type-property-lexical-info": {
          "#/declares/shape/someType/inherits/shape/schema/property/property/primaryApplicant/shape/applicant/property/property/expenses/any/expenses/or/shape/expensesLiving": "[(5,4)-(5,10)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/addresses/randomKey",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Current",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "randomKey",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/addresses/randomKey": "[(4,19)-(4,28)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/expenses/otherRandomKey",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Basic",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "otherRandomKey",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/declares/shape/someType/examples/example/default-example/object_1/additionalApplicants/expenses/otherRandomKey": "[(7,24)-(7,31)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/validations/json-schema-nested-refs/api.raml",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
