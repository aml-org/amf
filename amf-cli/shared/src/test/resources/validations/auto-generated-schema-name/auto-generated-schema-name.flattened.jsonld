{
  "@graph": [
    {
      "@id": "#42",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.9.0",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#43",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "a title",
      "apiContract:endpoint": [
        {
          "@id": "#44"
        },
        {
          "@id": "#56"
        },
        {
          "@id": "#62"
        },
        {
          "@id": "#66"
        },
        {
          "@id": "#72"
        },
        {
          "@id": "#76"
        },
        {
          "@id": "#82"
        },
        {
          "@id": "#88"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(2,0)-(4,0)]",
          "#43": "[(2,0)-(92,0)]"
        }
      }
    },
    {
      "@id": "#44",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/anonymous",
      "apiContract:supportedOperation": [
        {
          "@id": "#45"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(24,0)-(24,10)]",
          "#44": "[(24,0)-(38,0)]"
        }
      }
    },
    {
      "@id": "#56",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/anonymous-with-include",
      "apiContract:supportedOperation": [
        {
          "@id": "#57"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(38,0)-(38,23)]",
          "#56": "[(38,0)-(49,0)]"
        }
      }
    },
    {
      "@id": "#62",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/anonymous-with-include-no-inherits",
      "apiContract:supportedOperation": [
        {
          "@id": "#63"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(49,0)-(49,35)]",
          "#62": "[(49,0)-(54,0)]"
        }
      }
    },
    {
      "@id": "#66",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/linked",
      "apiContract:supportedOperation": [
        {
          "@id": "#67"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(54,0)-(54,7)]",
          "#66": "[(54,0)-(63,0)]"
        }
      }
    },
    {
      "@id": "#72",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/linked-no-inherits",
      "apiContract:supportedOperation": [
        {
          "@id": "#73"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(63,0)-(63,19)]",
          "#72": "[(63,0)-(68,0)]"
        }
      }
    },
    {
      "@id": "#76",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/linked-with-include-inherits",
      "apiContract:supportedOperation": [
        {
          "@id": "#77"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(68,0)-(68,29)]",
          "#76": "[(68,0)-(76,0)]"
        }
      }
    },
    {
      "@id": "#82",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/linked-with-include-link",
      "apiContract:supportedOperation": [
        {
          "@id": "#83"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(76,0)-(76,25)]",
          "#82": "[(76,0)-(84,0)]"
        }
      }
    },
    {
      "@id": "#88",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/anonymous-with-inherits",
      "apiContract:supportedOperation": [
        {
          "@id": "#89"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(84,0)-(84,24)]",
          "#88": "[(84,0)-(92,0)]"
        }
      }
    },
    {
      "@id": "#45",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#46"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#51"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(31,7)-(38,0)]",
          "#45": "[(25,3)-(38,0)]"
        }
      }
    },
    {
      "@id": "#57",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#58"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#60"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(43,7)-(49,0)]",
          "#57": "[(39,3)-(49,0)]"
        }
      }
    },
    {
      "@id": "#63",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#64"
        }
      ],
      "smaps": {
        "lexical": {
          "#63": "[(50,3)-(54,0)]"
        }
      }
    },
    {
      "@id": "#67",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#68"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#70"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(59,7)-(63,0)]",
          "#67": "[(55,3)-(63,0)]"
        }
      }
    },
    {
      "@id": "#73",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#74"
        }
      ],
      "smaps": {
        "lexical": {
          "#73": "[(64,3)-(68,0)]"
        }
      }
    },
    {
      "@id": "#77",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#78"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#80"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(72,7)-(76,0)]",
          "#77": "[(69,3)-(76,0)]"
        }
      }
    },
    {
      "@id": "#83",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#84"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#86"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(80,7)-(84,0)]",
          "#83": "[(77,3)-(84,0)]"
        }
      }
    },
    {
      "@id": "#89",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#90"
        }
      ],
      "smaps": {
        "lexical": {
          "#89": "[(85,3)-(92,0)]"
        }
      }
    },
    {
      "@id": "#46",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#47"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#46": "true"
        },
        "lexical": {
          "apiContract:payload": "[(26,7)-(31,0)]",
          "#46": "[(26,12)-(31,0)]"
        }
      }
    },
    {
      "@id": "#51",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#52"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(33,15)-(38,0)]",
          "#51": "[(32,11)-(38,0)]"
        }
      }
    },
    {
      "@id": "#58",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#59"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#58": "true"
        },
        "lexical": {
          "apiContract:payload": "[(40,7)-(43,0)]",
          "#58": "[(40,12)-(43,0)]"
        }
      }
    },
    {
      "@id": "#60",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#61"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(45,15)-(49,0)]",
          "#60": "[(44,11)-(49,0)]"
        }
      }
    },
    {
      "@id": "#64",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#65"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#64": "true"
        },
        "lexical": {
          "apiContract:payload": "[(51,7)-(54,0)]",
          "#64": "[(51,12)-(54,0)]"
        }
      }
    },
    {
      "@id": "#68",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#69"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#68": "true"
        },
        "lexical": {
          "apiContract:payload": "[(56,7)-(59,0)]",
          "#68": "[(56,12)-(59,0)]"
        }
      }
    },
    {
      "@id": "#70",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#71"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(61,15)-(63,0)]",
          "#70": "[(60,11)-(63,0)]"
        }
      }
    },
    {
      "@id": "#74",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#75"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#74": "true"
        },
        "lexical": {
          "apiContract:payload": "[(65,7)-(68,0)]",
          "#74": "[(65,12)-(68,0)]"
        }
      }
    },
    {
      "@id": "#78",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#79"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#78": "true"
        },
        "lexical": {
          "apiContract:payload": "[(70,7)-(72,0)]",
          "#78": "[(70,12)-(72,0)]"
        }
      }
    },
    {
      "@id": "#80",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#81"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(74,15)-(76,0)]",
          "#80": "[(73,11)-(76,0)]"
        }
      }
    },
    {
      "@id": "#84",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#85"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#84": "true"
        },
        "lexical": {
          "apiContract:payload": "[(78,7)-(80,0)]",
          "#84": "[(78,12)-(80,0)]"
        }
      }
    },
    {
      "@id": "#86",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#87"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(82,15)-(84,0)]",
          "#86": "[(81,11)-(84,0)]"
        }
      }
    },
    {
      "@id": "#90",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#91"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#90": "true"
        },
        "lexical": {
          "apiContract:payload": "[(86,7)-(92,0)]",
          "#90": "[(86,12)-(92,0)]"
        }
      }
    },
    {
      "@id": "#47",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#48"
      },
      "smaps": {
        "lexical": {
          "#47": "[(27,11)-(31,0)]"
        }
      }
    },
    {
      "@id": "#52",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#53"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(33,20)-(38,0)]",
          "#52": "[(33,15)-(38,0)]"
        }
      }
    },
    {
      "@id": "#59",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#11"
      },
      "smaps": {
        "lexical": {
          "#59": "[(41,11)-(43,0)]"
        }
      }
    },
    {
      "@id": "#61",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#11"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(45,20)-(49,0)]",
          "#61": "[(45,15)-(49,0)]"
        }
      }
    },
    {
      "@id": "#65",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#18"
      },
      "smaps": {
        "lexical": {
          "#65": "[(52,11)-(54,0)]"
        }
      }
    },
    {
      "@id": "#69",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#26"
      },
      "smaps": {
        "lexical": {
          "#69": "[(57,11)-(59,0)]"
        }
      }
    },
    {
      "@id": "#71",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#26"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(61,21)-(61,32)]",
          "#71": "[(61,15)-(63,0)]"
        }
      }
    },
    {
      "@id": "#75",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#32"
      },
      "smaps": {
        "lexical": {
          "#75": "[(66,11)-(68,0)]"
        }
      }
    },
    {
      "@id": "#79",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#35"
      },
      "smaps": {
        "lexical": {
          "#79": "[(71,11)-(72,0)]"
        }
      }
    },
    {
      "@id": "#81",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#23"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(74,21)-(74,47)]",
          "#81": "[(74,15)-(76,0)]"
        }
      }
    },
    {
      "@id": "#85",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#40"
      },
      "smaps": {
        "lexical": {
          "#85": "[(79,11)-(80,0)]"
        }
      }
    },
    {
      "@id": "#87",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#38"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(82,21)-(82,43)]",
          "#87": "[(82,15)-(84,0)]"
        }
      }
    },
    {
      "@id": "#91",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#92"
      },
      "smaps": {
        "lexical": {
          "#91": "[(87,11)-(92,0)]"
        }
      }
    },
    {
      "@id": "#48",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#49"
        }
      ],
      "shacl:name": "schema",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#48": "[(28,15)-(28,19)]"
        },
        "auto-generated-name": {
          "#48": ""
        },
        "lexical": {
          "#48": "[(27,11)-(31,0)]"
        }
      }
    },
    {
      "@id": "#53",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#54"
        }
      ],
      "shacl:name": "default",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#53": "[(34,17)-(34,21)]"
        },
        "auto-generated-name": {
          "#53": ""
        },
        "lexical": {
          "#53": "[(33,15)-(38,0)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#12"
        }
      ],
      "shacl:name": "type",
      "core:name": "Validation Passed",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#11": "[(3,0)-(3,4)]"
        },
        "resolved-link-target": {
          "#11": "amf://id#14"
        },
        "resolved-link": {
          "#11": "amf://id#11"
        },
        "auto-generated-name": {
          "#11": ""
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#11": "[(2,0)-(5,30)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#19"
        }
      ],
      "shacl:name": "type",
      "core:name": "data type",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#18": "[(3,0)-(3,4)]"
        },
        "resolved-link": {
          "#18": "amf://id#22"
        },
        "resolved-link-target": {
          "#18": "amf://id#21"
        },
        "auto-generated-name": {
          "#18": ""
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#18": "[(2,0)-(5,29)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#27"
        }
      ],
      "shacl:name": "random-name",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#26": "[(6,7)-(6,11)]"
        },
        "resolved-link": {
          "#26": "amf://id#31"
        },
        "resolved-link-target": {
          "#26": "amf://id#29"
        },
        "declared-element": {
          "#26": ""
        },
        "lexical": {
          "shacl:name": "[(5,3)-(5,14)]",
          "#26": "[(5,3)-(10,0)]"
        }
      }
    },
    {
      "@id": "#32",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "other-type",
      "smaps": {
        "lexical": {
          "shacl:name": "[(10,3)-(10,13)]",
          "#32": "[(10,3)-(13,0)]",
          "shacl:datatype": "[(11,7)-(13,0)]"
        },
        "declared-element": {
          "#32": ""
        },
        "resolved-link-target": {
          "#32": "amf://id#33"
        },
        "resolved-link": {
          "#32": "amf://id#34"
        },
        "type-property-lexical-info": {
          "#32": "[(11,7)-(11,11)]"
        }
      }
    },
    {
      "@id": "#35",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "shacl:name": "included-inherits",
      "core:name": "Response data type",
      "smaps": {
        "inheritance-provenance": {
          "core:name": "amf://id#3"
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#35": "[(13,3)-(16,0)]",
          "shacl:name": "[(13,3)-(13,20)]"
        },
        "declared-element": {
          "#35": ""
        },
        "resolved-link-target": {
          "#35": "amf://id#36"
        },
        "inherited-shapes": {
          "#35": "amf://id#3"
        },
        "resolved-link": {
          "#35": "amf://id#37"
        },
        "type-property-lexical-info": {
          "#35": "[(14,7)-(14,11)]"
        },
        "synthesized-field": {
          "shacl:closed": "true"
        }
      }
    },
    {
      "@id": "#23",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "shacl:name": "included-inherits-response",
      "core:name": "Response data type",
      "smaps": {
        "inheritance-provenance": {
          "core:name": "amf://id#3"
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#23": "[(18,3)-(21,0)]",
          "shacl:name": "[(18,3)-(18,29)]"
        },
        "declared-element": {
          "#23": ""
        },
        "resolved-link-target": {
          "#23": "amf://id#24"
        },
        "inherited-shapes": {
          "#23": "amf://id#3"
        },
        "resolved-link": {
          "#23": "amf://id#25"
        },
        "type-property-lexical-info": {
          "#23": "[(19,7)-(19,11)]"
        },
        "synthesized-field": {
          "shacl:closed": "true"
        }
      }
    },
    {
      "@id": "#40",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "shacl:name": "included-link",
      "core:name": "Response data type",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#40": "[(3,0)-(3,4)]"
        },
        "resolved-link-target": {
          "#40": "amf://id#6"
        },
        "declared-element": {
          "#40": ""
        },
        "resolved-link": {
          "#40": "amf://id#8"
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#40": "[(2,0)-(5,32)]"
        }
      }
    },
    {
      "@id": "#38",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "shacl:name": "included-link-response",
      "core:name": "Response data type",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#38": "[(3,0)-(3,4)]"
        },
        "resolved-link-target": {
          "#38": "amf://id#6"
        },
        "declared-element": {
          "#38": ""
        },
        "resolved-link": {
          "#38": "amf://id#8"
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#38": "[(2,0)-(5,32)]"
        }
      }
    },
    {
      "@id": "#92",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#93"
        }
      ],
      "shacl:name": "type",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "auto-generated-name": {
          "#92": ""
        },
        "lexical": {
          "#92": "[(88,15)-(92,0)]"
        }
      }
    },
    {
      "@id": "#49",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#inlined-node"
        }
      ],
      "raml-shapes:range": {
        "@id": "#50"
      },
      "shacl:minCount": 1,
      "shacl:name": "inlined-node",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(30,33)-(30,39)]",
          "#49": "[(30,19)-(31,0)]"
        }
      }
    },
    {
      "@id": "#54",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#id"
        }
      ],
      "raml-shapes:range": {
        "@id": "#55"
      },
      "shacl:minCount": 1,
      "shacl:name": "id",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(36,23)-(36,29)]",
          "#54": "[(36,19)-(38,0)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#in-external-fragment"
        }
      ],
      "raml-shapes:range": {
        "@id": "#13"
      },
      "shacl:minCount": 1,
      "shacl:name": "in-external-fragment",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(5,24)-(5,30)]",
          "#12": "[(5,2)-(5,30)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#other-external-type"
        }
      ],
      "raml-shapes:range": {
        "@id": "#20"
      },
      "shacl:minCount": 1,
      "shacl:name": "other-external-type",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(5,23)-(5,29)]",
          "#19": "[(5,2)-(5,29)]"
        }
      }
    },
    {
      "@id": "#27",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#linked-node"
        }
      ],
      "raml-shapes:range": {
        "@id": "#28"
      },
      "shacl:minCount": 1,
      "shacl:name": "linked-node",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(8,24)-(8,30)]",
          "#27": "[(8,11)-(10,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#external-resp-property"
        }
      ],
      "raml-shapes:range": {
        "@id": "#5"
      },
      "shacl:minCount": 1,
      "shacl:name": "external-resp-property",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "inheritance-provenance": {
          "#4": "amf://id#3"
        },
        "lexical": {
          "raml-shapes:range": "[(5,26)-(5,32)]",
          "#4": "[(5,2)-(5,32)]"
        }
      }
    },
    {
      "@id": "#93",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#prop1"
        }
      ],
      "raml-shapes:range": {
        "@id": "#94"
      },
      "shacl:minCount": 1,
      "shacl:name": "prop1",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(90,31)-(90,37)]",
          "#93": "[(90,24)-(92,0)]"
        }
      }
    },
    {
      "@id": "#50",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "shacl:name": "inlined-node",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(30,33)-(30,39)]",
          "#50": "[(30,19)-(31,0)]"
        }
      }
    },
    {
      "@id": "#55",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "shacl:name": "id",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(36,23)-(36,29)]",
          "#55": "[(36,19)-(38,0)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "in-external-fragment",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(5,24)-(5,30)]",
          "#13": "[(5,2)-(5,30)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "other-external-type",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(5,23)-(5,29)]",
          "#20": "[(5,2)-(5,29)]"
        }
      }
    },
    {
      "@id": "#28",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "shacl:name": "linked-node",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(8,24)-(8,30)]",
          "#28": "[(8,11)-(10,0)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "external-resp-property",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(5,26)-(5,32)]",
          "#5": "[(5,2)-(5,32)]"
        }
      }
    },
    {
      "@id": "#94",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "prop1",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(90,31)-(90,37)]",
          "#94": "[(90,24)-(92,0)]"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#1"
        },
        {
          "@id": "#9"
        },
        {
          "@id": "#16"
        }
      ],
      "doc:declares": [
        {
          "@id": "#23"
        },
        {
          "@id": "#26"
        },
        {
          "@id": "#32"
        },
        {
          "@id": "#35"
        },
        {
          "@id": "#38"
        },
        {
          "@id": "#40"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#43"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#42"
      }
    },
    {
      "@id": "#1",
      "@type": [
        "raml-shapes:DataTypeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#3"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#2"
      },
      "smaps": {
        "lexical": {
          "#1": "[(1,0)-(5,32)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "raml-shapes:DataTypeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#11"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#10"
      },
      "smaps": {
        "lexical": {
          "#9": "[(1,0)-(5,30)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "raml-shapes:DataTypeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#18"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#17"
      },
      "smaps": {
        "lexical": {
          "#16": "[(1,0)-(5,29)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "shacl:name": "type",
      "core:name": "Response data type",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#3": "[(3,0)-(3,4)]"
        },
        "resolved-link-target": {
          "#3": "amf://id#6"
        },
        "resolved-link": {
          "#3": "amf://id#8"
        },
        "auto-generated-name": {
          "#3": ""
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#3": "[(2,0)-(5,32)]"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.9.0",
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#10",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.9.0",
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#17",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.9.0",
      "doc:sourceSpec": "RAML 1.0"
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
