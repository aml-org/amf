[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "/web-api",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "Device Fraud Orchestration Service"
          }
        ],
        "core:version": [
          {
            "@value": "v1"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#/web-api/endpoint/%2Fevents",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/events"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/any/unionShape/link--1499532782",
                            "@type": [
                              "raml-shapes:UnionShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/any/unionShape"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "unionShape"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request/payload/application%2Fjson": "[(26,6)-(27,24)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(25,4)-(27,24)]",
                        "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request": "[(25,9)-(27,24)]"
                      },
                      "virtual-element": {
                        "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request": "true"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/endpoint/%2Fevents/supportedOperation/post": "[(24,2)-(27,24)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(23,0)-(23,7)]",
                "#/web-api/endpoint/%2Fevents": "[(23,0)-(27,24)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "core:version": "[(3,0)-(5,0)]",
            "/web-api": "[(2,0)-(27,24)]",
            "core:name": "[(2,0)-(3,0)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#/BaseUnitProcessingData",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.8.1"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "RAML 1.0"
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#/declares/any/unionShape",
        "@type": [
          "raml-shapes:UnionShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "raml-shapes:anyOf": [
          {
            "@id": "#/declares/shape/closedShapeType",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": true
              }
            ],
            "shacl:property": [
              {
                "@id": "#/declares/shape/closedShapeType/property/property/payment",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#payment"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "#/declares/shape/closedShapeType/property/property/payment/scalar/payment",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "payment"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/declares/shape/closedShapeType/property/property/payment/scalar/payment": "[(15,8)-(15,12)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(15,8)-(17,0)]",
                        "#/declares/shape/closedShapeType/property/property/payment/scalar/payment": "[(14,6)-(17,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "payment"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "shacl:minCount": "true",
                    "shacl:path": "true"
                  },
                  "lexical": {
                    "raml-shapes:range": "[(14,14)-(17,0)]",
                    "#/declares/shape/closedShapeType/property/property/payment": "[(14,6)-(17,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "closedShapeType"
              }
            ],
            "smaps": {
              "resolved-link-target": {
                "#/declares/shape/closedShapeType": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/shape/closedShapeType"
              },
              "declared-element": {
                "#/declares/shape/closedShapeType": ""
              },
              "lexical": {
                "shacl:name": "[(10,2)-(10,17)]",
                "#/declares/shape/closedShapeType": "[(10,2)-(17,0)]",
                "shacl:closed": "[(12,4)-(13,0)]"
              },
              "type-property-lexical-info": {
                "#/declares/shape/closedShapeType": "[(11,4)-(11,8)]"
              },
              "resolved-link": {
                "#/declares/shape/closedShapeType": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/any/unionShape/inherits/union/default-union/anyOf/shape/default-node"
              }
            }
          },
          {
            "@id": "#/declares/shape/openShape",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "#/declares/shape/openShape/property/property/order",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#order"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "#/declares/shape/openShape/property/property/order/scalar/order",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "order"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/declares/shape/openShape/property/property/order/scalar/order": "[(21,8)-(21,12)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(21,8)-(23,0)]",
                        "#/declares/shape/openShape/property/property/order/scalar/order": "[(20,6)-(23,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "order"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "shacl:minCount": "true",
                    "shacl:path": "true"
                  },
                  "lexical": {
                    "raml-shapes:range": "[(20,12)-(23,0)]",
                    "#/declares/shape/openShape/property/property/order": "[(20,6)-(23,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "openShape"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:closed": "true"
              },
              "resolved-link": {
                "#/declares/shape/openShape": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/any/unionShape/inherits/union/default-union/anyOf/shape/default-node_1"
              },
              "type-property-lexical-info": {
                "#/declares/shape/openShape": "[(18,4)-(18,8)]"
              },
              "lexical": {
                "shacl:name": "[(17,2)-(17,11)]",
                "#/declares/shape/openShape": "[(17,2)-(23,0)]"
              },
              "declared-element": {
                "#/declares/shape/openShape": ""
              },
              "resolved-link-target": {
                "#/declares/shape/openShape": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/shape/openShape"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "unionShape"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declares/any/unionShape": ""
          },
          "lexical": {
            "shacl:name": "[(6,2)-(6,12)]",
            "#/declares/any/unionShape": "[(6,2)-(10,0)]"
          },
          "type-property-lexical-info": {
            "#/declares/any/unionShape": "[(7,4)-(7,8)]"
          }
        }
      },
      {
        "@id": "#/declares/shape/closedShapeType",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": true
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/closedShapeType/property/property/payment",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#payment"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/closedShapeType/property/property/payment/scalar/payment",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "payment"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/closedShapeType/property/property/payment/scalar/payment": "[(15,8)-(15,12)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(15,8)-(17,0)]",
                    "#/declares/shape/closedShapeType/property/property/payment/scalar/payment": "[(14,6)-(17,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "payment"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true",
                "shacl:path": "true"
              },
              "lexical": {
                "raml-shapes:range": "[(14,14)-(17,0)]",
                "#/declares/shape/closedShapeType/property/property/payment": "[(14,6)-(17,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "closedShapeType"
          }
        ],
        "smaps": {
          "resolved-link-target": {
            "#/declares/shape/closedShapeType": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/shape/closedShapeType"
          },
          "declared-element": {
            "#/declares/shape/closedShapeType": ""
          },
          "lexical": {
            "shacl:name": "[(10,2)-(10,17)]",
            "#/declares/shape/closedShapeType": "[(10,2)-(17,0)]",
            "shacl:closed": "[(12,4)-(13,0)]"
          },
          "type-property-lexical-info": {
            "#/declares/shape/closedShapeType": "[(11,4)-(11,8)]"
          },
          "resolved-link": {
            "#/declares/shape/closedShapeType": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/any/unionShape/inherits/union/default-union/anyOf/shape/default-node"
          }
        }
      },
      {
        "@id": "#/declares/shape/openShape",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/openShape/property/property/order",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#order"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/openShape/property/property/order/scalar/order",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "order"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/openShape/property/property/order/scalar/order": "[(21,8)-(21,12)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(21,8)-(23,0)]",
                    "#/declares/shape/openShape/property/property/order/scalar/order": "[(20,6)-(23,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "order"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true",
                "shacl:path": "true"
              },
              "lexical": {
                "raml-shapes:range": "[(20,12)-(23,0)]",
                "#/declares/shape/openShape/property/property/order": "[(20,6)-(23,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "openShape"
          }
        ],
        "smaps": {
          "synthesized-field": {
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#/declares/shape/openShape": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/any/unionShape/inherits/union/default-union/anyOf/shape/default-node_1"
          },
          "type-property-lexical-info": {
            "#/declares/shape/openShape": "[(18,4)-(18,8)]"
          },
          "lexical": {
            "shacl:name": "[(17,2)-(17,11)]",
            "#/declares/shape/openShape": "[(17,2)-(23,0)]"
          },
          "declared-element": {
            "#/declares/shape/openShape": ""
          },
          "resolved-link-target": {
            "#/declares/shape/openShape": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml#/declares/shape/openShape"
          }
        }
      }
    ],
    "@context": {
      "@base": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-before.raml",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
