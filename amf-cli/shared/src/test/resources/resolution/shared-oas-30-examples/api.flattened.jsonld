{
  "@graph": [
    {
      "@id": "#29",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.2.0",
      "doc:transformed": true,
      "doc:sourceSpec": "OAS 3.0"
    },
    {
      "@id": "#30",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "example.com",
      "core:version": "1.4.0",
      "apiContract:endpoint": [
        {
          "@id": "#31"
        },
        {
          "@id": "#36"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:endpoint": "[(5,0)-(47,0)]",
          "core:name": "[(4,2)-(5,0)]",
          "#30": "[(1,0)-(92,64)]",
          "core:version": "[(3,2)-(4,0)]"
        }
      }
    },
    {
      "@id": "#31",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/inlined",
      "apiContract:supportedOperation": [
        {
          "@id": "#32"
        }
      ],
      "smaps": {
        "lexical": {
          "#31": "[(6,2)-(37,0)]"
        }
      }
    },
    {
      "@id": "#36",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/refs",
      "apiContract:supportedOperation": [
        {
          "@id": "#37"
        }
      ],
      "smaps": {
        "lexical": {
          "#36": "[(37,2)-(47,0)]"
        }
      }
    },
    {
      "@id": "#32",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#34"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#33"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(27,6)-(37,0)]",
          "#32": "[(7,4)-(37,0)]",
          "apiContract:expects": "[(19,6)-(27,0)]"
        }
      }
    },
    {
      "@id": "#37",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#39"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#38"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(43,6)-(47,0)]",
          "#37": "[(38,4)-(47,0)]",
          "apiContract:expects": "[(41,6)-(43,0)]"
        }
      }
    },
    {
      "@id": "#34",
      "@type": [
        "apiContract:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:parameter": [
        {
          "@id": "#35"
        }
      ],
      "core:name": "requestBody",
      "apiContract:payload": [
        {
          "@id": "#18"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(19,6)-(19,17)]",
          "#34": "[(19,6)-(27,0)]",
          "apiContract:parameter": "[(8,6)-(19,0)]"
        }
      }
    },
    {
      "@id": "#33",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "Ok",
      "apiContract:payload": [
        {
          "@id": "#17"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(30,10)-(37,0)]",
          "core:name": "[(28,8)-(28,13)]",
          "#33": "[(28,8)-(37,0)]",
          "core:description": "[(29,10)-(30,0)]"
        }
      }
    },
    {
      "@id": "#39",
      "@type": [
        "apiContract:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:parameter": [
        {
          "@id": "#26"
        }
      ],
      "core:name": "requestBody",
      "apiContract:payload": [
        {
          "@id": "#15"
        }
      ],
      "smaps": {
        "declared-element": {
          "#39": ""
        },
        "lexical": {
          "#39": "[(73,4)-(81,0)]"
        }
      }
    },
    {
      "@id": "#38",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "myResponse",
      "core:description": "Ok",
      "apiContract:payload": [
        {
          "@id": "#19"
        }
      ],
      "smaps": {
        "resolved-link-target": {
          "#38": "amf://id#27"
        },
        "lexical": {
          "apiContract:payload": "[(65,6)-(72,0)]",
          "#38": "[(63,4)-(72,0)]",
          "core:description": "[(64,6)-(65,0)]"
        },
        "declared-element": {
          "#38": ""
        },
        "resolved-link": {
          "#38": "amf://id#38"
        }
      }
    },
    {
      "@id": "#35",
      "@type": [
        "apiContract:Parameter",
        "doc:DomainElement"
      ],
      "core:name": "myParam",
      "apiContract:paramName": "myParam",
      "apiContract:required": false,
      "apiContract:allowEmptyValue": false,
      "apiContract:style": "form",
      "apiContract:explode": true,
      "apiContract:allowReserved": false,
      "apiContract:binding": "query",
      "apiContract:payload": [
        {
          "@id": "#20"
        }
      ],
      "smaps": {
        "synthesized-field": {
          "apiContract:explode": "true",
          "apiContract:required": "true"
        },
        "lexical": {
          "apiContract:payload": "[(12,10)-(19,0)]",
          "apiContract:style": "[(11,10)-(12,0)]",
          "core:name": "[(9,10)-(10,0)]",
          "#35": "[(9,10)-(19,0)]",
          "apiContract:paramName": "[(9,10)-(10,0)]",
          "apiContract:binding": "[(10,10)-(11,0)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "apiContract:examples": [
        {
          "@id": "#6"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:examples": "[(24,12)-(27,0)]",
          "core:mediaType": "[(21,10)-(21,26)]",
          "#18": "[(21,10)-(27,0)]",
          "raml-shapes:schema": "[(22,12)-(24,0)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(32,14)-(34,0)]",
          "#17": "[(31,12)-(37,0)]",
          "core:mediaType": "[(31,12)-(31,28)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "apiContract:Parameter",
        "doc:DomainElement"
      ],
      "core:name": "myParam",
      "apiContract:paramName": "myParam",
      "apiContract:required": false,
      "apiContract:allowEmptyValue": false,
      "apiContract:style": "form",
      "apiContract:explode": true,
      "apiContract:allowReserved": false,
      "apiContract:binding": "query",
      "apiContract:payload": [
        {
          "@id": "#16"
        }
      ],
      "smaps": {
        "synthesized-field": {
          "apiContract:explode": "true",
          "apiContract:required": "true"
        },
        "lexical": {
          "apiContract:payload": "[(86,6)-(92,64)]",
          "apiContract:style": "[(85,6)-(86,0)]",
          "#26": "[(82,4)-(92,64)]",
          "apiContract:paramName": "[(83,6)-(84,0)]",
          "apiContract:binding": "[(84,6)-(85,0)]"
        },
        "declared-element": {
          "#26": ""
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "apiContract:examples": [
        {
          "@id": "#6"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:examples": "[(78,10)-(81,0)]",
          "core:mediaType": "[(75,8)-(75,24)]",
          "#15": "[(75,8)-(81,0)]",
          "raml-shapes:schema": "[(76,10)-(78,0)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "apiContract:examples": [
        {
          "@id": "#6"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:examples": "[(69,10)-(72,0)]",
          "core:mediaType": "[(66,8)-(66,24)]",
          "#19": "[(66,8)-(72,0)]",
          "raml-shapes:schema": "[(67,10)-(69,0)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "apiContract:examples": [
        {
          "@id": "#6"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:examples": "[(16,14)-(19,0)]",
          "core:mediaType": "[(13,12)-(13,28)]",
          "#20": "[(13,12)-(19,0)]",
          "raml-shapes:schema": "[(14,14)-(16,0)]"
        }
      }
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#2"
        },
        {
          "@id": "#4"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "ErrorResponse",
      "apiContract:examples": [
        {
          "@id": "#6"
        }
      ],
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#1": "amf://id#25"
        },
        "type-property-lexical-info": {
          "#1": "[(50,6)-(50,10)]"
        },
        "lexical": {
          "shacl:name": "[(49,4)-(49,17)]",
          "#1": "[(49,4)-(56,0)]"
        },
        "declared-element": {
          "#1": ""
        },
        "resolved-link-target": {
          "#1": "amf://id#1"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "ErrorResponseExample",
      "apiContract:guiSummary": "this is an example for an error response",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#7"
      },
      "doc:raw": "status: \"202\"\ntext: \"Aloha\"",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "resolved-link": {
          "#6": "amf://id#14"
        },
        "lexical": {
          "doc:structuredValue": "[(59,6)-(62,0)]",
          "core:name": "[(57,4)-(57,24)]",
          "#6": "[(57,4)-(62,0)]",
          "apiContract:guiSummary": "[(58,6)-(59,0)]"
        },
        "declared-element": {
          "#6": ""
        },
        "resolved-link-target": {
          "#6": "amf://id#6"
        },
        "tracked-element": {
          "#6": "amf://id#17,amf://id#19,amf://id#16,amf://id#15,amf://id#20,amf://id#18"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "apiContract:examples": [
        {
          "@id": "#6"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:examples": "[(90,10)-(92,64)]",
          "core:mediaType": "[(87,8)-(87,24)]",
          "#16": "[(87,8)-(92,64)]",
          "raml-shapes:schema": "[(88,10)-(90,0)]"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#status"
        }
      ],
      "raml-shapes:range": {
        "@id": "#3"
      },
      "shacl:minCount": 0,
      "shacl:name": "status",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#2": "[(52,8)-(54,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#text"
        }
      ],
      "raml-shapes:range": {
        "@id": "#5"
      },
      "shacl:minCount": 0,
      "shacl:name": "text",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#4": "[(54,8)-(56,0)]"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:status": {
        "@id": "#8"
      },
      "data:text": {
        "@id": "#9"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:text": "[(61,8)-(62,0)]",
          "#7": "[(60,0)-(62,0)]",
          "data:status": "[(60,8)-(61,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "status",
      "smaps": {
        "type-property-lexical-info": {
          "#3": "[(53,10)-(53,14)]"
        },
        "lexical": {
          "shacl:datatype": "[(53,10)-(54,0)]",
          "#3": "[(52,8)-(54,0)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "text",
      "smaps": {
        "type-property-lexical-info": {
          "#5": "[(55,10)-(55,14)]"
        },
        "lexical": {
          "shacl:datatype": "[(55,10)-(56,0)]",
          "#5": "[(54,8)-(56,0)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "202",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "status",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#8": "[(60,16)-(60,21)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Aloha",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "text",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#9": "[(61,14)-(61,21)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#26"
        },
        {
          "@id": "#27"
        },
        {
          "@id": "#6"
        },
        {
          "@id": "#28"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#30"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#29"
      }
    },
    {
      "@id": "#27",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "myResponse",
      "core:description": "Ok",
      "apiContract:payload": [
        {
          "@id": "#19"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(65,6)-(72,0)]",
          "#27": "[(63,4)-(72,0)]",
          "core:description": "[(64,6)-(65,0)]"
        },
        "declared-element": {
          "#27": ""
        }
      }
    },
    {
      "@id": "#28",
      "@type": [
        "apiContract:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "myReqBody",
      "apiContract:payload": [
        {
          "@id": "#15"
        }
      ],
      "smaps": {
        "declared-element": {
          "#28": ""
        },
        "lexical": {
          "core:name": "[(73,4)-(73,13)]",
          "#28": "[(73,4)-(81,0)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
