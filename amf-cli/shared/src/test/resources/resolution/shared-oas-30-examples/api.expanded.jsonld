[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "/web-api",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "example.com"
          }
        ],
        "core:version": [
          {
            "@value": "1.4.0"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#/web-api/endpoint/%2Finlined",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/inlined"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/endpoint/%2Finlined/supportedOperation/post",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:parameter": [
                      {
                        "@id": "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam",
                        "@type": [
                          "apiContract:Parameter",
                          "core:Parameter",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "myParam"
                          }
                        ],
                        "apiContract:paramName": [
                          {
                            "@value": "myParam"
                          }
                        ],
                        "apiContract:required": [
                          {
                            "@value": false
                          }
                        ],
                        "apiContract:allowEmptyValue": [
                          {
                            "@value": false
                          }
                        ],
                        "apiContract:style": [
                          {
                            "@value": "form"
                          }
                        ],
                        "apiContract:explode": [
                          {
                            "@value": true
                          }
                        ],
                        "apiContract:allowReserved": [
                          {
                            "@value": false
                          }
                        ],
                        "apiContract:binding": [
                          {
                            "@value": "query"
                          }
                        ],
                        "apiContract:payload": [
                          {
                            "@id": "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson",
                            "@type": [
                              "apiContract:Payload",
                              "core:Payload",
                              "doc:DomainElement"
                            ],
                            "core:mediaType": [
                              {
                                "@value": "application/json"
                              }
                            ],
                            "raml-shapes:schema": [
                              {
                                "@id": "#/declares/shape/ErrorResponse/link--433655223",
                                "@type": [
                                  "shacl:NodeShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "doc:link-target": [
                                  {
                                    "@id": "#/declares/shape/ErrorResponse"
                                  }
                                ],
                                "doc:link-label": [
                                  {
                                    "@value": "ErrorResponse"
                                  }
                                ]
                              }
                            ],
                            "apiContract:examples": [
                              {
                                "@id": "#/declares/example/ErrorResponseExample",
                                "@type": [
                                  "apiContract:Example",
                                  "doc:DomainElement"
                                ],
                                "core:name": [
                                  {
                                    "@value": "ErrorResponseExample"
                                  }
                                ],
                                "apiContract:guiSummary": [
                                  {
                                    "@value": "this is an example for an error response"
                                  }
                                ],
                                "doc:strict": [
                                  {
                                    "@value": true
                                  }
                                ],
                                "doc:structuredValue": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1",
                                    "@type": [
                                      "data:Object",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:status": [
                                      {
                                        "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                                        "@type": [
                                          "data:Scalar",
                                          "data:Node",
                                          "doc:DomainElement"
                                        ],
                                        "data:value": [
                                          {
                                            "@value": "202"
                                          }
                                        ],
                                        "shacl:datatype": [
                                          {
                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                          }
                                        ],
                                        "core:name": [
                                          {
                                            "@value": "status"
                                          }
                                        ],
                                        "smaps": {
                                          "synthesized-field": {
                                            "core:name": "true",
                                            "shacl:datatype": "true"
                                          },
                                          "lexical": {
                                            "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                                          }
                                        }
                                      }
                                    ],
                                    "data:text": [
                                      {
                                        "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                                        "@type": [
                                          "data:Scalar",
                                          "data:Node",
                                          "doc:DomainElement"
                                        ],
                                        "data:value": [
                                          {
                                            "@value": "Aloha"
                                          }
                                        ],
                                        "shacl:datatype": [
                                          {
                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                          }
                                        ],
                                        "core:name": [
                                          {
                                            "@value": "text"
                                          }
                                        ],
                                        "smaps": {
                                          "synthesized-field": {
                                            "core:name": "true",
                                            "shacl:datatype": "true"
                                          },
                                          "lexical": {
                                            "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                                          }
                                        }
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "object_1"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true"
                                      },
                                      "lexical": {
                                        "data:text": "[(61,8)-(62,0)]",
                                        "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                                        "data:status": "[(60,8)-(61,0)]"
                                      }
                                    }
                                  }
                                ],
                                "doc:raw": [
                                  {
                                    "@value": "status: \"202\"\ntext: \"Aloha\""
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "doc:raw": "true",
                                    "doc:strict": "true"
                                  },
                                  "resolved-link": {
                                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                                  },
                                  "lexical": {
                                    "doc:structuredValue": "[(59,6)-(62,0)]",
                                    "core:name": "[(57,4)-(57,24)]",
                                    "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                                    "apiContract:guiSummary": "[(58,6)-(59,0)]"
                                  },
                                  "declared-element": {
                                    "#/declares/example/ErrorResponseExample": ""
                                  },
                                  "resolved-link-target": {
                                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                                  },
                                  "tracked-element": {
                                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                                  }
                                }
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "apiContract:examples": "[(16,14)-(19,0)]",
                                "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson": "[(13,12)-(19,0)]",
                                "core:mediaType": "[(13,12)-(13,28)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "apiContract:explode": "true",
                            "apiContract:required": "true"
                          },
                          "lexical": {
                            "apiContract:payload": "[(12,10)-(19,0)]",
                            "apiContract:style": "[(11,10)-(12,0)]",
                            "core:name": "[(9,10)-(10,0)]",
                            "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam": "[(9,10)-(19,0)]",
                            "apiContract:paramName": "[(9,10)-(10,0)]",
                            "apiContract:binding": "[(10,10)-(11,0)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "requestBody"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/shape/ErrorResponse/link--433655223",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/shape/ErrorResponse"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "ErrorResponse"
                              }
                            ]
                          }
                        ],
                        "apiContract:examples": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample",
                            "@type": [
                              "apiContract:Example",
                              "doc:DomainElement"
                            ],
                            "core:name": [
                              {
                                "@value": "ErrorResponseExample"
                              }
                            ],
                            "apiContract:guiSummary": [
                              {
                                "@value": "this is an example for an error response"
                              }
                            ],
                            "doc:strict": [
                              {
                                "@value": true
                              }
                            ],
                            "doc:structuredValue": [
                              {
                                "@id": "#/declares/example/ErrorResponseExample/object_1",
                                "@type": [
                                  "data:Object",
                                  "data:Node",
                                  "doc:DomainElement"
                                ],
                                "data:status": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "202"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "status"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                                      }
                                    }
                                  }
                                ],
                                "data:text": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "Aloha"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "text"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                                      }
                                    }
                                  }
                                ],
                                "core:name": [
                                  {
                                    "@value": "object_1"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "core:name": "true"
                                  },
                                  "lexical": {
                                    "data:text": "[(61,8)-(62,0)]",
                                    "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                                    "data:status": "[(60,8)-(61,0)]"
                                  }
                                }
                              }
                            ],
                            "doc:raw": [
                              {
                                "@value": "status: \"202\"\ntext: \"Aloha\""
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "doc:raw": "true",
                                "doc:strict": "true"
                              },
                              "resolved-link": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                              },
                              "lexical": {
                                "doc:structuredValue": "[(59,6)-(62,0)]",
                                "core:name": "[(57,4)-(57,24)]",
                                "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                                "apiContract:guiSummary": "[(58,6)-(59,0)]"
                              },
                              "declared-element": {
                                "#/declares/example/ErrorResponseExample": ""
                              },
                              "resolved-link-target": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                              },
                              "tracked-element": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "apiContract:examples": "[(24,12)-(27,0)]",
                            "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson": "[(21,10)-(27,0)]",
                            "core:mediaType": "[(21,10)-(21,26)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "core:name": "[(19,6)-(19,17)]",
                        "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody": "[(8,6)-(27,0)]",
                        "apiContract:parameter": "[(8,6)-(19,0)]"
                      },
                      "virtual-element": {
                        "#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody": "true"
                      }
                    }
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Ok"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/shape/ErrorResponse/link--433655223",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/shape/ErrorResponse"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "ErrorResponse"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "core:mediaType": "[(31,12)-(31,28)]",
                            "#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson": "[(31,12)-(37,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(30,10)-(37,0)]",
                        "core:name": "[(28,8)-(28,13)]",
                        "#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200": "[(28,8)-(37,0)]",
                        "core:description": "[(29,10)-(30,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(27,6)-(37,0)]",
                    "#/web-api/endpoint/%2Finlined/supportedOperation/post": "[(7,4)-(37,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "#/web-api/endpoint/%2Finlined": "[(6,2)-(37,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/endpoint/%2Frefs",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/refs"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/endpoint/%2Frefs/supportedOperation/post",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/endpoint/%2Frefs/supportedOperation/post/expects/request%2FrequestBody",
                    "@type": [
                      "apiContract:Request",
                      "core:Request",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:parameter": [
                      {
                        "@id": "#/declares/parameter/query/myParam",
                        "@type": [
                          "apiContract:Parameter",
                          "core:Parameter",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "myParam"
                          }
                        ],
                        "apiContract:paramName": [
                          {
                            "@value": "myParam"
                          }
                        ],
                        "apiContract:required": [
                          {
                            "@value": false
                          }
                        ],
                        "apiContract:allowEmptyValue": [
                          {
                            "@value": false
                          }
                        ],
                        "apiContract:style": [
                          {
                            "@value": "form"
                          }
                        ],
                        "apiContract:explode": [
                          {
                            "@value": true
                          }
                        ],
                        "apiContract:allowReserved": [
                          {
                            "@value": false
                          }
                        ],
                        "apiContract:binding": [
                          {
                            "@value": "query"
                          }
                        ],
                        "apiContract:payload": [
                          {
                            "@id": "#/declares/parameter/query/myParam/payload/application%2Fjson",
                            "@type": [
                              "apiContract:Payload",
                              "core:Payload",
                              "doc:DomainElement"
                            ],
                            "core:mediaType": [
                              {
                                "@value": "application/json"
                              }
                            ],
                            "raml-shapes:schema": [
                              {
                                "@id": "#/declares/shape/ErrorResponse/link--433655223",
                                "@type": [
                                  "shacl:NodeShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "doc:link-target": [
                                  {
                                    "@id": "#/declares/shape/ErrorResponse"
                                  }
                                ],
                                "doc:link-label": [
                                  {
                                    "@value": "ErrorResponse"
                                  }
                                ]
                              }
                            ],
                            "apiContract:examples": [
                              {
                                "@id": "#/declares/example/ErrorResponseExample",
                                "@type": [
                                  "apiContract:Example",
                                  "doc:DomainElement"
                                ],
                                "core:name": [
                                  {
                                    "@value": "ErrorResponseExample"
                                  }
                                ],
                                "apiContract:guiSummary": [
                                  {
                                    "@value": "this is an example for an error response"
                                  }
                                ],
                                "doc:strict": [
                                  {
                                    "@value": true
                                  }
                                ],
                                "doc:structuredValue": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1",
                                    "@type": [
                                      "data:Object",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:status": [
                                      {
                                        "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                                        "@type": [
                                          "data:Scalar",
                                          "data:Node",
                                          "doc:DomainElement"
                                        ],
                                        "data:value": [
                                          {
                                            "@value": "202"
                                          }
                                        ],
                                        "shacl:datatype": [
                                          {
                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                          }
                                        ],
                                        "core:name": [
                                          {
                                            "@value": "status"
                                          }
                                        ],
                                        "smaps": {
                                          "synthesized-field": {
                                            "core:name": "true",
                                            "shacl:datatype": "true"
                                          },
                                          "lexical": {
                                            "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                                          }
                                        }
                                      }
                                    ],
                                    "data:text": [
                                      {
                                        "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                                        "@type": [
                                          "data:Scalar",
                                          "data:Node",
                                          "doc:DomainElement"
                                        ],
                                        "data:value": [
                                          {
                                            "@value": "Aloha"
                                          }
                                        ],
                                        "shacl:datatype": [
                                          {
                                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                                          }
                                        ],
                                        "core:name": [
                                          {
                                            "@value": "text"
                                          }
                                        ],
                                        "smaps": {
                                          "synthesized-field": {
                                            "core:name": "true",
                                            "shacl:datatype": "true"
                                          },
                                          "lexical": {
                                            "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                                          }
                                        }
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "object_1"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true"
                                      },
                                      "lexical": {
                                        "data:text": "[(61,8)-(62,0)]",
                                        "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                                        "data:status": "[(60,8)-(61,0)]"
                                      }
                                    }
                                  }
                                ],
                                "doc:raw": [
                                  {
                                    "@value": "status: \"202\"\ntext: \"Aloha\""
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "doc:raw": "true",
                                    "doc:strict": "true"
                                  },
                                  "resolved-link": {
                                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                                  },
                                  "lexical": {
                                    "doc:structuredValue": "[(59,6)-(62,0)]",
                                    "core:name": "[(57,4)-(57,24)]",
                                    "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                                    "apiContract:guiSummary": "[(58,6)-(59,0)]"
                                  },
                                  "declared-element": {
                                    "#/declares/example/ErrorResponseExample": ""
                                  },
                                  "resolved-link-target": {
                                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                                  },
                                  "tracked-element": {
                                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                                  }
                                }
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "apiContract:examples": "[(90,10)-(92,64)]",
                                "#/declares/parameter/query/myParam/payload/application%2Fjson": "[(87,8)-(92,64)]",
                                "core:mediaType": "[(87,8)-(87,24)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "apiContract:explode": "true",
                            "apiContract:required": "true"
                          },
                          "lexical": {
                            "apiContract:payload": "[(86,6)-(92,64)]",
                            "apiContract:style": "[(85,6)-(86,0)]",
                            "#/declares/parameter/query/myParam": "[(82,4)-(92,64)]",
                            "apiContract:paramName": "[(83,6)-(84,0)]",
                            "apiContract:binding": "[(84,6)-(85,0)]"
                          },
                          "declared-element": {
                            "#/declares/parameter/query/myParam": ""
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "requestBody"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/declares/request%2FmyReqBody/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/shape/ErrorResponse/link--433655223",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/shape/ErrorResponse"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "ErrorResponse"
                              }
                            ]
                          }
                        ],
                        "apiContract:examples": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample",
                            "@type": [
                              "apiContract:Example",
                              "doc:DomainElement"
                            ],
                            "core:name": [
                              {
                                "@value": "ErrorResponseExample"
                              }
                            ],
                            "apiContract:guiSummary": [
                              {
                                "@value": "this is an example for an error response"
                              }
                            ],
                            "doc:strict": [
                              {
                                "@value": true
                              }
                            ],
                            "doc:structuredValue": [
                              {
                                "@id": "#/declares/example/ErrorResponseExample/object_1",
                                "@type": [
                                  "data:Object",
                                  "data:Node",
                                  "doc:DomainElement"
                                ],
                                "data:status": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "202"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "status"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                                      }
                                    }
                                  }
                                ],
                                "data:text": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "Aloha"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "text"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                                      }
                                    }
                                  }
                                ],
                                "core:name": [
                                  {
                                    "@value": "object_1"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "core:name": "true"
                                  },
                                  "lexical": {
                                    "data:text": "[(61,8)-(62,0)]",
                                    "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                                    "data:status": "[(60,8)-(61,0)]"
                                  }
                                }
                              }
                            ],
                            "doc:raw": [
                              {
                                "@value": "status: \"202\"\ntext: \"Aloha\""
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "doc:raw": "true",
                                "doc:strict": "true"
                              },
                              "resolved-link": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                              },
                              "lexical": {
                                "doc:structuredValue": "[(59,6)-(62,0)]",
                                "core:name": "[(57,4)-(57,24)]",
                                "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                                "apiContract:guiSummary": "[(58,6)-(59,0)]"
                              },
                              "declared-element": {
                                "#/declares/example/ErrorResponseExample": ""
                              },
                              "resolved-link-target": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                              },
                              "tracked-element": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "apiContract:examples": "[(78,10)-(81,0)]",
                            "#/declares/request%2FmyReqBody/payload/application%2Fjson": "[(75,8)-(81,0)]",
                            "core:mediaType": "[(75,8)-(75,24)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/web-api/endpoint/%2Frefs/supportedOperation/post/expects/request%2FrequestBody": "[(41,6)-(81,0)]"
                      },
                      "virtual-element": {
                        "#/web-api/endpoint/%2Frefs/supportedOperation/post/expects/request%2FrequestBody": "true"
                      },
                      "declared-element": {
                        "#/web-api/endpoint/%2Frefs/supportedOperation/post/expects/request%2FrequestBody": ""
                      }
                    }
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/endpoint/%2Frefs/supportedOperation/post/returns/resp/200",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "myResponse"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Ok"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/declares/resp/myResponse/payload/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/shape/ErrorResponse/link--433655223",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/shape/ErrorResponse"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "ErrorResponse"
                              }
                            ]
                          }
                        ],
                        "apiContract:examples": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample",
                            "@type": [
                              "apiContract:Example",
                              "doc:DomainElement"
                            ],
                            "core:name": [
                              {
                                "@value": "ErrorResponseExample"
                              }
                            ],
                            "apiContract:guiSummary": [
                              {
                                "@value": "this is an example for an error response"
                              }
                            ],
                            "doc:strict": [
                              {
                                "@value": true
                              }
                            ],
                            "doc:structuredValue": [
                              {
                                "@id": "#/declares/example/ErrorResponseExample/object_1",
                                "@type": [
                                  "data:Object",
                                  "data:Node",
                                  "doc:DomainElement"
                                ],
                                "data:status": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "202"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "status"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                                      }
                                    }
                                  }
                                ],
                                "data:text": [
                                  {
                                    "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "Aloha"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "text"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                                      }
                                    }
                                  }
                                ],
                                "core:name": [
                                  {
                                    "@value": "object_1"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "core:name": "true"
                                  },
                                  "lexical": {
                                    "data:text": "[(61,8)-(62,0)]",
                                    "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                                    "data:status": "[(60,8)-(61,0)]"
                                  }
                                }
                              }
                            ],
                            "doc:raw": [
                              {
                                "@value": "status: \"202\"\ntext: \"Aloha\""
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "doc:raw": "true",
                                "doc:strict": "true"
                              },
                              "resolved-link": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                              },
                              "lexical": {
                                "doc:structuredValue": "[(59,6)-(62,0)]",
                                "core:name": "[(57,4)-(57,24)]",
                                "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                                "apiContract:guiSummary": "[(58,6)-(59,0)]"
                              },
                              "declared-element": {
                                "#/declares/example/ErrorResponseExample": ""
                              },
                              "resolved-link-target": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                              },
                              "tracked-element": {
                                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "apiContract:examples": "[(69,10)-(72,0)]",
                            "#/declares/resp/myResponse/payload/application%2Fjson": "[(66,8)-(72,0)]",
                            "core:mediaType": "[(66,8)-(66,24)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "resolved-link-target": {
                        "#/web-api/endpoint/%2Frefs/supportedOperation/post/returns/resp/200": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse"
                      },
                      "lexical": {
                        "apiContract:payload": "[(65,6)-(72,0)]",
                        "#/web-api/endpoint/%2Frefs/supportedOperation/post/returns/resp/200": "[(63,4)-(72,0)]",
                        "core:description": "[(64,6)-(65,0)]"
                      },
                      "declared-element": {
                        "#/web-api/endpoint/%2Frefs/supportedOperation/post/returns/resp/200": ""
                      },
                      "resolved-link": {
                        "#/web-api/endpoint/%2Frefs/supportedOperation/post/returns/resp/200": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Frefs/supportedOperation/post/returns/resp/200"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(43,6)-(47,0)]",
                    "#/web-api/endpoint/%2Frefs/supportedOperation/post": "[(38,4)-(47,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "#/web-api/endpoint/%2Frefs": "[(37,2)-(47,0)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "apiContract:endpoint": "[(5,0)-(47,0)]",
            "core:name": "[(4,2)-(5,0)]",
            "/web-api": "[(1,0)-(92,64)]",
            "core:version": "[(3,2)-(4,0)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#/BaseUnitProcessingData",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.8.1"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "OAS 3.0"
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#/declares/shape/ErrorResponse",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/ErrorResponse/property/property/status",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#status"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/ErrorResponse/property/property/status/scalar/status",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "status"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(53,10)-(53,14)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(53,10)-(54,0)]",
                    "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(52,8)-(54,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "status"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true"
              },
              "lexical": {
                "#/declares/shape/ErrorResponse/property/property/status": "[(52,8)-(54,0)]"
              }
            }
          },
          {
            "@id": "#/declares/shape/ErrorResponse/property/property/text",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#text"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/ErrorResponse/property/property/text/scalar/text",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "text"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(55,10)-(55,14)]"
                  },
                  "lexical": {
                    "shacl:datatype": "[(55,10)-(56,0)]",
                    "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(54,8)-(56,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "text"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true"
              },
              "lexical": {
                "#/declares/shape/ErrorResponse/property/property/text": "[(54,8)-(56,0)]"
              }
            }
          }
        ],
        "doc:recursive": [
          {
            "@value": true
          }
        ],
        "shacl:name": [
          {
            "@value": "ErrorResponse"
          }
        ],
        "apiContract:examples": [
          {
            "@id": "#/declares/example/ErrorResponseExample",
            "@type": [
              "apiContract:Example",
              "doc:DomainElement"
            ],
            "core:name": [
              {
                "@value": "ErrorResponseExample"
              }
            ],
            "apiContract:guiSummary": [
              {
                "@value": "this is an example for an error response"
              }
            ],
            "doc:strict": [
              {
                "@value": true
              }
            ],
            "doc:structuredValue": [
              {
                "@id": "#/declares/example/ErrorResponseExample/object_1",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:status": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "202"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "status"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                      }
                    }
                  }
                ],
                "data:text": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "Aloha"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "text"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true",
                        "shacl:datatype": "true"
                      },
                      "lexical": {
                        "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "object_1"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:text": "[(61,8)-(62,0)]",
                    "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                    "data:status": "[(60,8)-(61,0)]"
                  }
                }
              }
            ],
            "doc:raw": [
              {
                "@value": "status: \"202\"\ntext: \"Aloha\""
              }
            ],
            "smaps": {
              "synthesized-field": {
                "doc:raw": "true",
                "doc:strict": "true"
              },
              "resolved-link": {
                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
              },
              "lexical": {
                "doc:structuredValue": "[(59,6)-(62,0)]",
                "core:name": "[(57,4)-(57,24)]",
                "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                "apiContract:guiSummary": "[(58,6)-(59,0)]"
              },
              "declared-element": {
                "#/declares/example/ErrorResponseExample": ""
              },
              "resolved-link-target": {
                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
              },
              "tracked-element": {
                "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
              }
            }
          }
        ],
        "smaps": {
          "synthesized-field": {
            "doc:recursive": "true",
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/shape/ErrorResponse"
          },
          "type-property-lexical-info": {
            "#/declares/shape/ErrorResponse": "[(50,6)-(50,10)]"
          },
          "lexical": {
            "shacl:name": "[(49,4)-(49,17)]",
            "#/declares/shape/ErrorResponse": "[(49,4)-(56,0)]"
          },
          "declared-element": {
            "#/declares/shape/ErrorResponse": ""
          },
          "resolved-link-target": {
            "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/shape/ErrorResponse"
          }
        }
      },
      {
        "@id": "#/declares/parameter/query/myParam",
        "@type": [
          "apiContract:Parameter",
          "core:Parameter",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "myParam"
          }
        ],
        "apiContract:paramName": [
          {
            "@value": "myParam"
          }
        ],
        "apiContract:required": [
          {
            "@value": false
          }
        ],
        "apiContract:allowEmptyValue": [
          {
            "@value": false
          }
        ],
        "apiContract:style": [
          {
            "@value": "form"
          }
        ],
        "apiContract:explode": [
          {
            "@value": true
          }
        ],
        "apiContract:allowReserved": [
          {
            "@value": false
          }
        ],
        "apiContract:binding": [
          {
            "@value": "query"
          }
        ],
        "apiContract:payload": [
          {
            "@id": "#/declares/parameter/query/myParam/payload/application%2Fjson",
            "@type": [
              "apiContract:Payload",
              "core:Payload",
              "doc:DomainElement"
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ],
            "raml-shapes:schema": [
              {
                "@id": "#/declares/shape/ErrorResponse",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "#/declares/shape/ErrorResponse/property/property/status",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#status"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declares/shape/ErrorResponse/property/property/status/scalar/status",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "status"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(53,10)-(53,14)]"
                          },
                          "lexical": {
                            "shacl:datatype": "[(53,10)-(54,0)]",
                            "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(52,8)-(54,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "status"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "shacl:minCount": "true"
                      },
                      "lexical": {
                        "#/declares/shape/ErrorResponse/property/property/status": "[(52,8)-(54,0)]"
                      }
                    }
                  },
                  {
                    "@id": "#/declares/shape/ErrorResponse/property/property/text",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#text"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declares/shape/ErrorResponse/property/property/text/scalar/text",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "text"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(55,10)-(55,14)]"
                          },
                          "lexical": {
                            "shacl:datatype": "[(55,10)-(56,0)]",
                            "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(54,8)-(56,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "text"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "shacl:minCount": "true"
                      },
                      "lexical": {
                        "#/declares/shape/ErrorResponse/property/property/text": "[(54,8)-(56,0)]"
                      }
                    }
                  }
                ],
                "doc:recursive": [
                  {
                    "@value": true
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "ErrorResponse"
                  }
                ],
                "apiContract:examples": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample",
                    "@type": [
                      "apiContract:Example",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "ErrorResponseExample"
                      }
                    ],
                    "apiContract:guiSummary": [
                      {
                        "@value": "this is an example for an error response"
                      }
                    ],
                    "doc:strict": [
                      {
                        "@value": true
                      }
                    ],
                    "doc:structuredValue": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:status": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "202"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "status"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true",
                                "shacl:datatype": "true"
                              },
                              "lexical": {
                                "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                              }
                            }
                          }
                        ],
                        "data:text": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "Aloha"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "text"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true",
                                "shacl:datatype": "true"
                              },
                              "lexical": {
                                "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "object_1"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true"
                          },
                          "lexical": {
                            "data:text": "[(61,8)-(62,0)]",
                            "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                            "data:status": "[(60,8)-(61,0)]"
                          }
                        }
                      }
                    ],
                    "doc:raw": [
                      {
                        "@value": "status: \"202\"\ntext: \"Aloha\""
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "doc:raw": "true",
                        "doc:strict": "true"
                      },
                      "resolved-link": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                      },
                      "lexical": {
                        "doc:structuredValue": "[(59,6)-(62,0)]",
                        "core:name": "[(57,4)-(57,24)]",
                        "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                        "apiContract:guiSummary": "[(58,6)-(59,0)]"
                      },
                      "declared-element": {
                        "#/declares/example/ErrorResponseExample": ""
                      },
                      "resolved-link-target": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                      },
                      "tracked-element": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:recursive": "true",
                    "shacl:closed": "true"
                  },
                  "resolved-link": {
                    "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/shape/ErrorResponse"
                  },
                  "type-property-lexical-info": {
                    "#/declares/shape/ErrorResponse": "[(50,6)-(50,10)]"
                  },
                  "lexical": {
                    "shacl:name": "[(49,4)-(49,17)]",
                    "#/declares/shape/ErrorResponse": "[(49,4)-(56,0)]"
                  },
                  "declared-element": {
                    "#/declares/shape/ErrorResponse": ""
                  },
                  "resolved-link-target": {
                    "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/shape/ErrorResponse"
                  }
                }
              }
            ],
            "apiContract:examples": [
              {
                "@id": "#/declares/example/ErrorResponseExample",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "ErrorResponseExample"
                  }
                ],
                "apiContract:guiSummary": [
                  {
                    "@value": "this is an example for an error response"
                  }
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:status": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "202"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "status"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                          }
                        }
                      }
                    ],
                    "data:text": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "Aloha"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "text"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true"
                      },
                      "lexical": {
                        "data:text": "[(61,8)-(62,0)]",
                        "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                        "data:status": "[(60,8)-(61,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "status: \"202\"\ntext: \"Aloha\""
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:raw": "true",
                    "doc:strict": "true"
                  },
                  "resolved-link": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                  },
                  "lexical": {
                    "doc:structuredValue": "[(59,6)-(62,0)]",
                    "core:name": "[(57,4)-(57,24)]",
                    "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                    "apiContract:guiSummary": "[(58,6)-(59,0)]"
                  },
                  "declared-element": {
                    "#/declares/example/ErrorResponseExample": ""
                  },
                  "resolved-link-target": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                  },
                  "tracked-element": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:examples": "[(90,10)-(92,64)]",
                "core:mediaType": "[(87,8)-(87,24)]",
                "#/declares/parameter/query/myParam/payload/application%2Fjson": "[(87,8)-(92,64)]",
                "raml-shapes:schema": "[(88,10)-(90,0)]"
              }
            }
          }
        ],
        "smaps": {
          "synthesized-field": {
            "apiContract:explode": "true",
            "apiContract:required": "true"
          },
          "lexical": {
            "apiContract:payload": "[(86,6)-(92,64)]",
            "apiContract:style": "[(85,6)-(86,0)]",
            "#/declares/parameter/query/myParam": "[(82,4)-(92,64)]",
            "apiContract:paramName": "[(83,6)-(84,0)]",
            "apiContract:binding": "[(84,6)-(85,0)]"
          },
          "declared-element": {
            "#/declares/parameter/query/myParam": ""
          }
        }
      },
      {
        "@id": "#/declares/resp/myResponse",
        "@type": [
          "apiContract:Response",
          "core:Response",
          "apiContract:Message",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "myResponse"
          }
        ],
        "core:description": [
          {
            "@value": "Ok"
          }
        ],
        "apiContract:payload": [
          {
            "@id": "#/declares/resp/myResponse/payload/application%2Fjson",
            "@type": [
              "apiContract:Payload",
              "core:Payload",
              "doc:DomainElement"
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ],
            "raml-shapes:schema": [
              {
                "@id": "#/declares/shape/ErrorResponse",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "#/declares/shape/ErrorResponse/property/property/status",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#status"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declares/shape/ErrorResponse/property/property/status/scalar/status",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "status"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(53,10)-(53,14)]"
                          },
                          "lexical": {
                            "shacl:datatype": "[(53,10)-(54,0)]",
                            "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(52,8)-(54,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "status"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "shacl:minCount": "true"
                      },
                      "lexical": {
                        "#/declares/shape/ErrorResponse/property/property/status": "[(52,8)-(54,0)]"
                      }
                    }
                  },
                  {
                    "@id": "#/declares/shape/ErrorResponse/property/property/text",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#text"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declares/shape/ErrorResponse/property/property/text/scalar/text",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "text"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(55,10)-(55,14)]"
                          },
                          "lexical": {
                            "shacl:datatype": "[(55,10)-(56,0)]",
                            "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(54,8)-(56,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "text"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "shacl:minCount": "true"
                      },
                      "lexical": {
                        "#/declares/shape/ErrorResponse/property/property/text": "[(54,8)-(56,0)]"
                      }
                    }
                  }
                ],
                "doc:recursive": [
                  {
                    "@value": true
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "ErrorResponse"
                  }
                ],
                "apiContract:examples": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample",
                    "@type": [
                      "apiContract:Example",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "ErrorResponseExample"
                      }
                    ],
                    "apiContract:guiSummary": [
                      {
                        "@value": "this is an example for an error response"
                      }
                    ],
                    "doc:strict": [
                      {
                        "@value": true
                      }
                    ],
                    "doc:structuredValue": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:status": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "202"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "status"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true",
                                "shacl:datatype": "true"
                              },
                              "lexical": {
                                "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                              }
                            }
                          }
                        ],
                        "data:text": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "Aloha"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "text"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true",
                                "shacl:datatype": "true"
                              },
                              "lexical": {
                                "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "object_1"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true"
                          },
                          "lexical": {
                            "data:text": "[(61,8)-(62,0)]",
                            "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                            "data:status": "[(60,8)-(61,0)]"
                          }
                        }
                      }
                    ],
                    "doc:raw": [
                      {
                        "@value": "status: \"202\"\ntext: \"Aloha\""
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "doc:raw": "true",
                        "doc:strict": "true"
                      },
                      "resolved-link": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                      },
                      "lexical": {
                        "doc:structuredValue": "[(59,6)-(62,0)]",
                        "core:name": "[(57,4)-(57,24)]",
                        "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                        "apiContract:guiSummary": "[(58,6)-(59,0)]"
                      },
                      "declared-element": {
                        "#/declares/example/ErrorResponseExample": ""
                      },
                      "resolved-link-target": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                      },
                      "tracked-element": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:recursive": "true",
                    "shacl:closed": "true"
                  },
                  "resolved-link": {
                    "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/shape/ErrorResponse"
                  },
                  "type-property-lexical-info": {
                    "#/declares/shape/ErrorResponse": "[(50,6)-(50,10)]"
                  },
                  "lexical": {
                    "shacl:name": "[(49,4)-(49,17)]",
                    "#/declares/shape/ErrorResponse": "[(49,4)-(56,0)]"
                  },
                  "declared-element": {
                    "#/declares/shape/ErrorResponse": ""
                  },
                  "resolved-link-target": {
                    "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/shape/ErrorResponse"
                  }
                }
              }
            ],
            "apiContract:examples": [
              {
                "@id": "#/declares/example/ErrorResponseExample",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "ErrorResponseExample"
                  }
                ],
                "apiContract:guiSummary": [
                  {
                    "@value": "this is an example for an error response"
                  }
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:status": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "202"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "status"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                          }
                        }
                      }
                    ],
                    "data:text": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "Aloha"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "text"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true"
                      },
                      "lexical": {
                        "data:text": "[(61,8)-(62,0)]",
                        "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                        "data:status": "[(60,8)-(61,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "status: \"202\"\ntext: \"Aloha\""
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:raw": "true",
                    "doc:strict": "true"
                  },
                  "resolved-link": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                  },
                  "lexical": {
                    "doc:structuredValue": "[(59,6)-(62,0)]",
                    "core:name": "[(57,4)-(57,24)]",
                    "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                    "apiContract:guiSummary": "[(58,6)-(59,0)]"
                  },
                  "declared-element": {
                    "#/declares/example/ErrorResponseExample": ""
                  },
                  "resolved-link-target": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                  },
                  "tracked-element": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:examples": "[(69,10)-(72,0)]",
                "core:mediaType": "[(66,8)-(66,24)]",
                "#/declares/resp/myResponse/payload/application%2Fjson": "[(66,8)-(72,0)]",
                "raml-shapes:schema": "[(67,10)-(69,0)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "apiContract:payload": "[(65,6)-(72,0)]",
            "#/declares/resp/myResponse": "[(63,4)-(72,0)]",
            "core:description": "[(64,6)-(65,0)]"
          },
          "declared-element": {
            "#/declares/resp/myResponse": ""
          }
        }
      },
      {
        "@id": "#/declares/example/ErrorResponseExample",
        "@type": [
          "apiContract:Example",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "ErrorResponseExample"
          }
        ],
        "apiContract:guiSummary": [
          {
            "@value": "this is an example for an error response"
          }
        ],
        "doc:strict": [
          {
            "@value": true
          }
        ],
        "doc:structuredValue": [
          {
            "@id": "#/declares/example/ErrorResponseExample/object_1",
            "@type": [
              "data:Object",
              "data:Node",
              "doc:DomainElement"
            ],
            "data:status": [
              {
                "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                "@type": [
                  "data:Scalar",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:value": [
                  {
                    "@value": "202"
                  }
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "core:name": [
                  {
                    "@value": "status"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true",
                    "shacl:datatype": "true"
                  },
                  "lexical": {
                    "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                  }
                }
              }
            ],
            "data:text": [
              {
                "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                "@type": [
                  "data:Scalar",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:value": [
                  {
                    "@value": "Aloha"
                  }
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "core:name": [
                  {
                    "@value": "text"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true",
                    "shacl:datatype": "true"
                  },
                  "lexical": {
                    "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                  }
                }
              }
            ],
            "core:name": [
              {
                "@value": "object_1"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "core:name": "true"
              },
              "lexical": {
                "data:text": "[(61,8)-(62,0)]",
                "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                "data:status": "[(60,8)-(61,0)]"
              }
            }
          }
        ],
        "doc:raw": [
          {
            "@value": "status: \"202\"\ntext: \"Aloha\""
          }
        ],
        "smaps": {
          "synthesized-field": {
            "doc:raw": "true",
            "doc:strict": "true"
          },
          "resolved-link": {
            "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
          },
          "lexical": {
            "doc:structuredValue": "[(59,6)-(62,0)]",
            "core:name": "[(57,4)-(57,24)]",
            "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
            "apiContract:guiSummary": "[(58,6)-(59,0)]"
          },
          "declared-element": {
            "#/declares/example/ErrorResponseExample": ""
          },
          "resolved-link-target": {
            "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
          },
          "tracked-element": {
            "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
          }
        }
      },
      {
        "@id": "#/declares/request%2FmyReqBody",
        "@type": [
          "apiContract:Request",
          "core:Request",
          "apiContract:Message",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "myReqBody"
          }
        ],
        "apiContract:payload": [
          {
            "@id": "#/declares/request%2FmyReqBody/payload/application%2Fjson",
            "@type": [
              "apiContract:Payload",
              "core:Payload",
              "doc:DomainElement"
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ],
            "raml-shapes:schema": [
              {
                "@id": "#/declares/shape/ErrorResponse",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "#/declares/shape/ErrorResponse/property/property/status",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#status"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declares/shape/ErrorResponse/property/property/status/scalar/status",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "status"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(53,10)-(53,14)]"
                          },
                          "lexical": {
                            "shacl:datatype": "[(53,10)-(54,0)]",
                            "#/declares/shape/ErrorResponse/property/property/status/scalar/status": "[(52,8)-(54,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "status"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "shacl:minCount": "true"
                      },
                      "lexical": {
                        "#/declares/shape/ErrorResponse/property/property/status": "[(52,8)-(54,0)]"
                      }
                    }
                  },
                  {
                    "@id": "#/declares/shape/ErrorResponse/property/property/text",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#text"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declares/shape/ErrorResponse/property/property/text/scalar/text",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "text"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(55,10)-(55,14)]"
                          },
                          "lexical": {
                            "shacl:datatype": "[(55,10)-(56,0)]",
                            "#/declares/shape/ErrorResponse/property/property/text/scalar/text": "[(54,8)-(56,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "text"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "shacl:minCount": "true"
                      },
                      "lexical": {
                        "#/declares/shape/ErrorResponse/property/property/text": "[(54,8)-(56,0)]"
                      }
                    }
                  }
                ],
                "doc:recursive": [
                  {
                    "@value": true
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "ErrorResponse"
                  }
                ],
                "apiContract:examples": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample",
                    "@type": [
                      "apiContract:Example",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "ErrorResponseExample"
                      }
                    ],
                    "apiContract:guiSummary": [
                      {
                        "@value": "this is an example for an error response"
                      }
                    ],
                    "doc:strict": [
                      {
                        "@value": true
                      }
                    ],
                    "doc:structuredValue": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:status": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "202"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "status"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true",
                                "shacl:datatype": "true"
                              },
                              "lexical": {
                                "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                              }
                            }
                          }
                        ],
                        "data:text": [
                          {
                            "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "Aloha"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "text"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true",
                                "shacl:datatype": "true"
                              },
                              "lexical": {
                                "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "object_1"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true"
                          },
                          "lexical": {
                            "data:text": "[(61,8)-(62,0)]",
                            "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                            "data:status": "[(60,8)-(61,0)]"
                          }
                        }
                      }
                    ],
                    "doc:raw": [
                      {
                        "@value": "status: \"202\"\ntext: \"Aloha\""
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "doc:raw": "true",
                        "doc:strict": "true"
                      },
                      "resolved-link": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                      },
                      "lexical": {
                        "doc:structuredValue": "[(59,6)-(62,0)]",
                        "core:name": "[(57,4)-(57,24)]",
                        "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                        "apiContract:guiSummary": "[(58,6)-(59,0)]"
                      },
                      "declared-element": {
                        "#/declares/example/ErrorResponseExample": ""
                      },
                      "resolved-link-target": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                      },
                      "tracked-element": {
                        "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:recursive": "true",
                    "shacl:closed": "true"
                  },
                  "resolved-link": {
                    "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/shape/ErrorResponse"
                  },
                  "type-property-lexical-info": {
                    "#/declares/shape/ErrorResponse": "[(50,6)-(50,10)]"
                  },
                  "lexical": {
                    "shacl:name": "[(49,4)-(49,17)]",
                    "#/declares/shape/ErrorResponse": "[(49,4)-(56,0)]"
                  },
                  "declared-element": {
                    "#/declares/shape/ErrorResponse": ""
                  },
                  "resolved-link-target": {
                    "#/declares/shape/ErrorResponse": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/shape/ErrorResponse"
                  }
                }
              }
            ],
            "apiContract:examples": [
              {
                "@id": "#/declares/example/ErrorResponseExample",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "ErrorResponseExample"
                  }
                ],
                "apiContract:guiSummary": [
                  {
                    "@value": "this is an example for an error response"
                  }
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "#/declares/example/ErrorResponseExample/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:status": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1/status",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "202"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "status"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/example/ErrorResponseExample/object_1/status": "[(60,16)-(60,21)]"
                          }
                        }
                      }
                    ],
                    "data:text": [
                      {
                        "@id": "#/declares/example/ErrorResponseExample/object_1/text",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "Aloha"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "text"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true",
                            "shacl:datatype": "true"
                          },
                          "lexical": {
                            "#/declares/example/ErrorResponseExample/object_1/text": "[(61,14)-(61,21)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true"
                      },
                      "lexical": {
                        "data:text": "[(61,8)-(62,0)]",
                        "#/declares/example/ErrorResponseExample/object_1": "[(60,0)-(62,0)]",
                        "data:status": "[(60,8)-(61,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "status: \"202\"\ntext: \"Aloha\""
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:raw": "true",
                    "doc:strict": "true"
                  },
                  "resolved-link": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson/examples/example/myExample"
                  },
                  "lexical": {
                    "doc:structuredValue": "[(59,6)-(62,0)]",
                    "core:name": "[(57,4)-(57,24)]",
                    "#/declares/example/ErrorResponseExample": "[(57,4)-(62,0)]",
                    "apiContract:guiSummary": "[(58,6)-(59,0)]"
                  },
                  "declared-element": {
                    "#/declares/example/ErrorResponseExample": ""
                  },
                  "resolved-link-target": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/example/ErrorResponseExample"
                  },
                  "tracked-element": {
                    "#/declares/example/ErrorResponseExample": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/request%2FmyReqBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/parameter/query/myParam/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/returns/resp/200/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/declares/resp/myResponse/payload/application%2Fjson,file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml#/web-api/endpoint/%2Finlined/supportedOperation/post/expects/request%2FrequestBody/parameter/parameter/query/myParam/payload/application%2Fjson"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:examples": "[(78,10)-(81,0)]",
                "core:mediaType": "[(75,8)-(75,24)]",
                "#/declares/request%2FmyReqBody/payload/application%2Fjson": "[(75,8)-(81,0)]",
                "raml-shapes:schema": "[(76,10)-(78,0)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "core:name": "[(73,4)-(73,13)]",
            "#/declares/request%2FmyReqBody": "[(73,4)-(81,0)]"
          },
          "virtual-element": {
            "#/declares/request%2FmyReqBody": "true"
          },
          "declared-element": {
            "#/declares/request%2FmyReqBody": ""
          }
        }
      }
    ],
    "@context": {
      "@base": "file://amf-cli/shared/src/test/resources/resolution/shared-oas-30-examples/api.yaml",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "data": "http://a.ml/vocabularies/data#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
