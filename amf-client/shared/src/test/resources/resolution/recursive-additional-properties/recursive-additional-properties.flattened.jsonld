{
  "@graph": [
    {
      "@id": "#11",
      "@type": [
        "apiContract:WebAPI",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "apiContract:server": [
        {
          "@id": "#12"
        }
      ],
      "apiContract:scheme": [
        "https"
      ],
      "core:documentation": [
        {
          "@id": "#14"
        }
      ],
      "apiContract:endpoint": [
        {
          "@id": "#15"
        }
      ],
      "apiContract:tag": [
        {
          "@id": "#13"
        }
      ],
      "smaps": {
        "source-vendor": {
          "#11": "OAS 2.0"
        },
        "lexical": {
          "apiContract:tag": "[(9,0)-(11,0)]",
          "core:documentation": "[(7,0)-(9,0)]",
          "#11": "[(1,0)-(34,16)]",
          "apiContract:scheme": "[(2,0)-(4,0)]",
          "apiContract:endpoint": "[(11,6)-(20,0)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "apiContract:Server",
        "doc:DomainElement"
      ],
      "core:urlTemplate": "firestore.googleapis.com/",
      "smaps": {
        "host-lexical": {
          "core:urlTemplate": "[(4,0)-(5,0)]"
        },
        "synthesized-field": {
          "#12": "true"
        },
        "base-path-lexical": {
          "core:urlTemplate": "[(5,0)-(7,0)]"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "core:CreativeWork",
        "doc:DomainElement"
      ],
      "core:url": [
        {
          "@id": "https://cloud.google.com/firestore"
        }
      ],
      "smaps": {
        "lexical": {
          "core:url": "[(8,2)-(9,0)]",
          "#14": "[(8,0)-(9,0)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/v1/{parent}/{collectionId}",
      "apiContract:supportedOperation": [
        {
          "@id": "#16"
        }
      ],
      "smaps": {
        "lexical": {
          "#15": "[(12,2)-(20,0)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "apiContract:Tag",
        "doc:DomainElement"
      ],
      "core:name": "projects",
      "smaps": {
        "lexical": {
          "core:name": "[(10,4)-(11,0)]",
          "#13": "[(10,4)-(11,0)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "firestore.projects.databases.documents.list",
      "apiContract:returns": [
        {
          "@id": "#17"
        }
      ],
      "apiContract:operationId": "firestore.projects.databases.documents.list",
      "smaps": {
        "lexical": {
          "apiContract:operationId": "[(14,6)-(15,0)]",
          "core:name": "[(14,6)-(15,0)]",
          "#16": "[(13,4)-(20,0)]",
          "apiContract:returns": "[(15,6)-(20,0)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "Successful response",
      "apiContract:payload": [
        {
          "@id": "#18"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(17,10)-(18,0)]",
          "#17": "[(16,8)-(20,0)]",
          "core:name": "[(16,8)-(16,13)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#4"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(18,10)-(20,0)]",
          "#18": "[(18,10)-(20,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#5"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "Value",
      "smaps": {
        "resolved-link-target": {
          "#4": "amf://id#9"
        },
        "declared-element": {
          "#4": ""
        },
        "lexical": {
          "shacl:name": "[(29,2)-(29,7)]",
          "#4": "[(29,2)-(34,16)]"
        },
        "type-property-lexical-info": {
          "#4": "[(34,4)-(34,8)]"
        },
        "resolved-link": {
          "#4": "amf://id#10"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#mapValue"
        }
      ],
      "raml-shapes:range": {
        "@id": "#6"
      },
      "shacl:minCount": 0,
      "shacl:name": "mapValue",
      "smaps": {
        "lexical": {
          "#5": "[(31,6)-(34,0)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "raml-shapes:RecursiveShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:fixPoint": [
        {
          "@id": "#1"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "MapValue",
      "smaps": {
        "resolved-link-target": {
          "#6": "amf://id#1"
        },
        "declared-element": {
          "#6": ""
        },
        "lexical": {
          "#6": "[(21,2)-(29,0)]"
        },
        "type-property-lexical-info": {
          "#6": "[(28,4)-(28,8)]"
        },
        "resolved-link": {
          "#6": "amf://id#7"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#4"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#11"
      },
      "doc:version": "2.1.0",
      "doc:root": true
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#2"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "MapValue",
      "core:description": "An array value.",
      "smaps": {
        "resolved-link-target": {
          "#1": "amf://id#1"
        },
        "declared-element": {
          "#1": ""
        },
        "lexical": {
          "core:description": "[(22,4)-(23,0)]",
          "#1": "[(21,2)-(29,0)]",
          "shacl:name": "[(21,2)-(21,10)]"
        },
        "type-property-lexical-info": {
          "#1": "[(28,4)-(28,8)]"
        },
        "resolved-link": {
          "#1": "amf://id#7"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#values"
        }
      ],
      "raml-shapes:range": {
        "@id": "#3"
      },
      "shacl:minCount": 0,
      "shacl:name": "values",
      "smaps": {
        "lexical": {
          "#2": "[(24,6)-(28,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:additionalPropertiesSchema": {
        "@id": "#4"
      },
      "shacl:property": [],
      "shacl:name": "values",
      "smaps": {
        "type-property-lexical-info": {
          "#3": "[(27,8)-(27,12)]"
        },
        "lexical": {
          "#3": "[(24,6)-(28,0)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
