[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "#24",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "API"
          }
        ],
        "core:version": [
          {
            "@value": "1.0"
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#25",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/endpointA"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#26",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#28",
                    "@type": [
                      "apiContract:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "500"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "500"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#29",
                        "@type": [
                          "apiContract:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#30",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:closed": [
                              {
                                "@value": false
                              }
                            ],
                            "shacl:property": [
                              {
                                "@id": "#32",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "shacl:path": [
                                  {
                                    "@id": "http://a.ml/vocabularies/data#animalName"
                                  }
                                ],
                                "raml-shapes:range": [
                                  {
                                    "@id": "#33",
                                    "@type": [
                                      "raml-shapes:ScalarShape",
                                      "raml-shapes:AnyShape",
                                      "shacl:Shape",
                                      "raml-shapes:Shape",
                                      "doc:DomainElement"
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "shacl:name": [
                                      {
                                        "@value": "animalName"
                                      }
                                    ],
                                    "smaps": {
                                      "type-property-lexical-info": {
                                        "#33": "[(17,10)-(17,16)]"
                                      },
                                      "lexical": {
                                        "shacl:datatype": "[(17,10)-(17,26)]",
                                        "#33": "[(16,8)-(18,9)]"
                                      }
                                    }
                                  }
                                ],
                                "shacl:minCount": [
                                  {
                                    "@value": 0
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "animalName"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "shacl:minCount": "true"
                                  },
                                  "lexical": {
                                    "#32": "[(16,8)-(18,9)]"
                                  }
                                }
                              },
                              {
                                "@id": "#34",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "shacl:path": [
                                  {
                                    "@id": "http://a.ml/vocabularies/data#personName"
                                  }
                                ],
                                "raml-shapes:range": [
                                  {
                                    "@id": "#35",
                                    "@type": [
                                      "raml-shapes:ScalarShape",
                                      "raml-shapes:AnyShape",
                                      "shacl:Shape",
                                      "raml-shapes:Shape",
                                      "doc:DomainElement"
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "shacl:name": [
                                      {
                                        "@value": "personName"
                                      }
                                    ],
                                    "smaps": {
                                      "type-property-lexical-info": {
                                        "#35": "[(9,10)-(9,16)]"
                                      },
                                      "lexical": {
                                        "shacl:datatype": "[(9,10)-(9,26)]",
                                        "#35": "[(8,8)-(10,9)]"
                                      }
                                    }
                                  }
                                ],
                                "shacl:minCount": [
                                  {
                                    "@value": 0
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "personName"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "shacl:minCount": "true"
                                  },
                                  "lexical": {
                                    "#34": "[(8,8)-(10,9)]"
                                  }
                                }
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ],
                            "doc:reference-id": [
                              {
                                "@id": "#31"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "shacl:closed": "true"
                              },
                              "declared-element": {
                                "#30": ""
                              },
                              "lexical": {
                                "#30": "[(13,4)-(20,5)]"
                              },
                              "type-property-lexical-info": {
                                "#30": "[(14,6)-(14,12)]"
                              },
                              "external-fragment-ref": {
                                "#30": "Animal"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#29": "[(29,10)-(32,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(28,8)-(32,0)]",
                        "#28": "[(27,6)-(32,0)]"
                      }
                    }
                  }
                ],
                "doc:extends": [
                  {
                    "@id": "#27",
                    "@type": [
                      "apiContract:ParametrizedTrait",
                      "doc:ParametrizedDeclaration",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "myTrait"
                      }
                    ],
                    "doc:target": [
                      {
                        "@id": "#13",
                        "@type": [
                          "apiContract:Trait",
                          "doc:AbstractDeclaration",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "myTrait"
                          }
                        ],
                        "doc:dataNode": [
                          {
                            "@id": "#14",
                            "@type": [
                              "data:Object",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:responses": [
                              {
                                "@id": "#15",
                                "@type": [
                                  "data:Object",
                                  "data:Node",
                                  "doc:DomainElement"
                                ],
                                "data:500": [
                                  {
                                    "@id": "#16",
                                    "@type": [
                                      "data:Object",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:body": [
                                      {
                                        "@id": "#17",
                                        "@type": [
                                          "data:Object",
                                          "data:Node",
                                          "doc:DomainElement"
                                        ],
                                        "data:application%2Fjson": [
                                          {
                                            "@id": "#18",
                                            "@type": [
                                              "data:Object",
                                              "data:Node",
                                              "doc:DomainElement"
                                            ],
                                            "data:type": [
                                              {
                                                "@id": "#19",
                                                "@type": [
                                                  "data:Scalar",
                                                  "data:Node",
                                                  "doc:DomainElement"
                                                ],
                                                "data:value": [
                                                  {
                                                    "@value": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"definitions\": {\n    \"Person\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"personName\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Animal\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"animalName\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                                  }
                                                ],
                                                "shacl:datatype": [
                                                  {
                                                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                                                  }
                                                ],
                                                "core:name": [
                                                  {
                                                    "@value": "type"
                                                  }
                                                ],
                                                "smaps": {
                                                  "synthesized-field": {
                                                    "core:name": "true",
                                                    "shacl:datatype": "true"
                                                  },
                                                  "lexical": {
                                                    "#19": "[(1,0)-(1,0)]"
                                                  }
                                                }
                                              }
                                            ],
                                            "core:name": [
                                              {
                                                "@value": "application/json"
                                              }
                                            ],
                                            "smaps": {
                                              "synthesized-field": {
                                                "core:name": "true"
                                              },
                                              "lexical": {
                                                "data:type": "[(11,12)-(13,0)]",
                                                "#18": "[(11,0)-(13,0)]"
                                              }
                                            }
                                          }
                                        ],
                                        "core:name": [
                                          {
                                            "@value": "body"
                                          }
                                        ],
                                        "smaps": {
                                          "synthesized-field": {
                                            "core:name": "true"
                                          },
                                          "lexical": {
                                            "data:application%2Fjson": "[(10,10)-(13,0)]",
                                            "#17": "[(10,0)-(13,0)]"
                                          }
                                        }
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "500"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true"
                                      },
                                      "lexical": {
                                        "data:body": "[(9,8)-(13,0)]",
                                        "#16": "[(9,0)-(13,0)]"
                                      }
                                    }
                                  }
                                ],
                                "core:name": [
                                  {
                                    "@value": "responses"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "core:name": "true"
                                  },
                                  "lexical": {
                                    "data:500": "[(8,6)-(13,0)]",
                                    "#15": "[(8,0)-(13,0)]"
                                  }
                                }
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "object_1"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true"
                              },
                              "lexical": {
                                "data:responses": "[(7,4)-(13,0)]",
                                "#14": "[(7,4)-(13,0)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "resolved-link-target": {
                            "#13": "amf://id#13"
                          },
                          "declared-element": {
                            "#13": ""
                          },
                          "lexical": {
                            "doc:dataNode": "[(7,4)-(13,0)]",
                            "#13": "[(6,2)-(13,0)]",
                            "core:name": "[(6,2)-(6,9)]"
                          },
                          "resolved-link": {
                            "#13": "amf://id#20"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "core:name": "[(25,9)-(25,16)]",
                        "#27": "[(25,9)-(25,16)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "doc:extends": "[(25,4)-(26,0)]",
                    "#26": "[(24,2)-(32,0)]",
                    "apiContract:returns": "[(26,4)-(32,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(23,0)-(23,10)]",
                "#25": "[(23,0)-(32,0)]"
              }
            }
          },
          {
            "@id": "#36",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/endpointB"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#38",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#39",
                    "@type": [
                      "apiContract:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "500"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "500"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#40",
                        "@type": [
                          "apiContract:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#41",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:closed": [
                              {
                                "@value": false
                              }
                            ],
                            "shacl:property": [
                              {
                                "@id": "#32",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "shacl:path": [
                                  {
                                    "@id": "http://a.ml/vocabularies/data#animalName"
                                  }
                                ],
                                "raml-shapes:range": [
                                  {
                                    "@id": "#33",
                                    "@type": [
                                      "raml-shapes:ScalarShape",
                                      "raml-shapes:AnyShape",
                                      "shacl:Shape",
                                      "raml-shapes:Shape",
                                      "doc:DomainElement"
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "shacl:name": [
                                      {
                                        "@value": "animalName"
                                      }
                                    ],
                                    "smaps": {
                                      "type-property-lexical-info": {
                                        "#33": "[(17,10)-(17,16)]"
                                      },
                                      "lexical": {
                                        "shacl:datatype": "[(17,10)-(17,26)]",
                                        "#33": "[(16,8)-(18,9)]"
                                      }
                                    }
                                  }
                                ],
                                "shacl:minCount": [
                                  {
                                    "@value": 0
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "animalName"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "shacl:minCount": "true"
                                  },
                                  "lexical": {
                                    "#32": "[(16,8)-(18,9)]"
                                  }
                                }
                              },
                              {
                                "@id": "#42",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "shacl:path": [
                                  {
                                    "@id": "http://a.ml/vocabularies/data#personName"
                                  }
                                ],
                                "raml-shapes:range": [
                                  {
                                    "@id": "#43",
                                    "@type": [
                                      "raml-shapes:ScalarShape",
                                      "raml-shapes:AnyShape",
                                      "shacl:Shape",
                                      "raml-shapes:Shape",
                                      "doc:DomainElement"
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "shacl:name": [
                                      {
                                        "@value": "personName"
                                      }
                                    ],
                                    "smaps": {
                                      "type-property-lexical-info": {
                                        "#43": "[(9,10)-(9,16)]"
                                      },
                                      "lexical": {
                                        "shacl:datatype": "[(9,10)-(9,26)]",
                                        "#43": "[(8,8)-(10,9)]"
                                      }
                                    }
                                  }
                                ],
                                "shacl:minCount": [
                                  {
                                    "@value": 0
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "personName"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "shacl:minCount": "true"
                                  },
                                  "lexical": {
                                    "#42": "[(8,8)-(10,9)]"
                                  }
                                }
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ],
                            "doc:reference-id": [
                              {
                                "@id": "#31"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "shacl:closed": "true"
                              },
                              "type-property-lexical-info": {
                                "#41": "[(14,6)-(14,12)]"
                              },
                              "lexical": {
                                "#41": "[(13,4)-(20,5)]"
                              },
                              "declared-element": {
                                "#41": ""
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#40": "[(38,10)-(40,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(37,8)-(40,0)]",
                        "#39": "[(36,6)-(40,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(35,4)-(40,0)]",
                    "#38": "[(34,2)-(40,0)]"
                  }
                }
              }
            ],
            "doc:extends": [
              {
                "@id": "#37",
                "@type": [
                  "apiContract:ParametrizedResourceType",
                  "doc:ParametrizedDeclaration",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "myRt"
                  }
                ],
                "doc:target": [
                  {
                    "@id": "#4",
                    "@type": [
                      "apiContract:ResourceType",
                      "doc:AbstractDeclaration",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "myRt"
                      }
                    ],
                    "doc:dataNode": [
                      {
                        "@id": "#5",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:post": [
                          {
                            "@id": "#6",
                            "@type": [
                              "data:Object",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:responses": [
                              {
                                "@id": "#7",
                                "@type": [
                                  "data:Object",
                                  "data:Node",
                                  "doc:DomainElement"
                                ],
                                "data:500": [
                                  {
                                    "@id": "#8",
                                    "@type": [
                                      "data:Object",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:body": [
                                      {
                                        "@id": "#9",
                                        "@type": [
                                          "data:Object",
                                          "data:Node",
                                          "doc:DomainElement"
                                        ],
                                        "data:application%2Fjson": [
                                          {
                                            "@id": "#10",
                                            "@type": [
                                              "data:Object",
                                              "data:Node",
                                              "doc:DomainElement"
                                            ],
                                            "data:type": [
                                              {
                                                "@id": "#11",
                                                "@type": [
                                                  "data:Scalar",
                                                  "data:Node",
                                                  "doc:DomainElement"
                                                ],
                                                "data:value": [
                                                  {
                                                    "@value": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"definitions\": {\n    \"Person\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"personName\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Animal\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"animalName\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                                  }
                                                ],
                                                "shacl:datatype": [
                                                  {
                                                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                                                  }
                                                ],
                                                "core:name": [
                                                  {
                                                    "@value": "type"
                                                  }
                                                ],
                                                "smaps": {
                                                  "synthesized-field": {
                                                    "core:name": "true",
                                                    "shacl:datatype": "true"
                                                  },
                                                  "lexical": {
                                                    "#11": "[(1,0)-(1,0)]"
                                                  }
                                                }
                                              }
                                            ],
                                            "core:name": [
                                              {
                                                "@value": "application/json"
                                              }
                                            ],
                                            "smaps": {
                                              "synthesized-field": {
                                                "core:name": "true"
                                              },
                                              "lexical": {
                                                "data:type": "[(20,14)-(23,0)]",
                                                "#10": "[(20,0)-(23,0)]"
                                              }
                                            }
                                          }
                                        ],
                                        "core:name": [
                                          {
                                            "@value": "body"
                                          }
                                        ],
                                        "smaps": {
                                          "synthesized-field": {
                                            "core:name": "true"
                                          },
                                          "lexical": {
                                            "data:application%2Fjson": "[(19,12)-(23,0)]",
                                            "#9": "[(19,0)-(23,0)]"
                                          }
                                        }
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "500"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true"
                                      },
                                      "lexical": {
                                        "data:body": "[(18,10)-(23,0)]",
                                        "#8": "[(18,0)-(23,0)]"
                                      }
                                    }
                                  }
                                ],
                                "core:name": [
                                  {
                                    "@value": "responses"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "core:name": "true"
                                  },
                                  "lexical": {
                                    "data:500": "[(17,8)-(23,0)]",
                                    "#7": "[(17,0)-(23,0)]"
                                  }
                                }
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "post"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true"
                              },
                              "lexical": {
                                "data:responses": "[(16,6)-(23,0)]",
                                "#6": "[(16,0)-(23,0)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "object_1"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true"
                          },
                          "lexical": {
                            "data:post": "[(15,4)-(23,0)]",
                            "#5": "[(15,4)-(23,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "resolved-link-target": {
                        "#4": "amf://id#4"
                      },
                      "declared-element": {
                        "#4": ""
                      },
                      "lexical": {
                        "doc:dataNode": "[(15,4)-(23,0)]",
                        "#4": "[(14,2)-(23,0)]",
                        "core:name": "[(14,2)-(14,6)]"
                      },
                      "resolved-link": {
                        "#4": "amf://id#12"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:name": "[(33,8)-(33,12)]",
                    "#37": "[(33,8)-(33,12)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:path": "[(32,0)-(32,10)]",
                "#36": "[(32,0)-(40,0)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "core:version": "[(3,0)-(5,0)]",
            "#24": "[(2,0)-(40,0)]",
            "core:name": "[(2,0)-(3,0)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#21",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.2.0"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "RAML 1.0"
          }
        ]
      }
    ],
    "doc:references": [
      {
        "@id": "#1",
        "@type": [
          "doc:ExternalFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "#3",
            "@type": [
              "doc:ExternalDomainElement",
              "doc:DomainElement"
            ],
            "doc:raw": [
              {
                "@value": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"definitions\": {\n    \"Person\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"personName\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Animal\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"animalName\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
              }
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ],
            "smaps": {
              "lexical": {
                "#3": "[(1,0)-(22,1)]"
              }
            }
          }
        ],
        "doc:root": [
          {
            "@value": false
          }
        ],
        "doc:processingData": [
          {
            "@id": "#2",
            "@type": [
              "doc:BaseUnitProcessingData"
            ],
            "doc:transformed": [
              {
                "@value": false
              }
            ]
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#4",
        "@type": [
          "apiContract:ResourceType",
          "doc:AbstractDeclaration",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "myRt"
          }
        ],
        "doc:dataNode": [
          {
            "@id": "#5",
            "@type": [
              "data:Object",
              "data:Node",
              "doc:DomainElement"
            ],
            "data:post": [
              {
                "@id": "#6",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:responses": [
                  {
                    "@id": "#7",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:500": [
                      {
                        "@id": "#8",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:body": [
                          {
                            "@id": "#9",
                            "@type": [
                              "data:Object",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:application%2Fjson": [
                              {
                                "@id": "#10",
                                "@type": [
                                  "data:Object",
                                  "data:Node",
                                  "doc:DomainElement"
                                ],
                                "data:type": [
                                  {
                                    "@id": "#11",
                                    "@type": [
                                      "data:Scalar",
                                      "data:Node",
                                      "doc:DomainElement"
                                    ],
                                    "data:value": [
                                      {
                                        "@value": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"definitions\": {\n    \"Person\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"personName\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Animal\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"animalName\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                      }
                                    ],
                                    "shacl:datatype": [
                                      {
                                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                                      }
                                    ],
                                    "core:name": [
                                      {
                                        "@value": "type"
                                      }
                                    ],
                                    "smaps": {
                                      "synthesized-field": {
                                        "core:name": "true",
                                        "shacl:datatype": "true"
                                      },
                                      "lexical": {
                                        "#11": "[(1,0)-(1,0)]"
                                      }
                                    }
                                  }
                                ],
                                "core:name": [
                                  {
                                    "@value": "application/json"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "core:name": "true"
                                  },
                                  "lexical": {
                                    "data:type": "[(20,14)-(23,0)]",
                                    "#10": "[(20,0)-(23,0)]"
                                  }
                                }
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "body"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true"
                              },
                              "lexical": {
                                "data:application%2Fjson": "[(19,12)-(23,0)]",
                                "#9": "[(19,0)-(23,0)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "500"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true"
                          },
                          "lexical": {
                            "data:body": "[(18,10)-(23,0)]",
                            "#8": "[(18,0)-(23,0)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "responses"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true"
                      },
                      "lexical": {
                        "data:500": "[(17,8)-(23,0)]",
                        "#7": "[(17,0)-(23,0)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "post"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:responses": "[(16,6)-(23,0)]",
                    "#6": "[(16,0)-(23,0)]"
                  }
                }
              }
            ],
            "core:name": [
              {
                "@value": "object_1"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "core:name": "true"
              },
              "lexical": {
                "data:post": "[(15,4)-(23,0)]",
                "#5": "[(15,4)-(23,0)]"
              }
            }
          }
        ],
        "smaps": {
          "resolved-link-target": {
            "#4": "amf://id#4"
          },
          "declared-element": {
            "#4": ""
          },
          "lexical": {
            "doc:dataNode": "[(15,4)-(23,0)]",
            "#4": "[(14,2)-(23,0)]",
            "core:name": "[(14,2)-(14,6)]"
          },
          "resolved-link": {
            "#4": "amf://id#12"
          }
        }
      },
      {
        "@id": "#13",
        "@type": [
          "apiContract:Trait",
          "doc:AbstractDeclaration",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "myTrait"
          }
        ],
        "doc:dataNode": [
          {
            "@id": "#14",
            "@type": [
              "data:Object",
              "data:Node",
              "doc:DomainElement"
            ],
            "data:responses": [
              {
                "@id": "#15",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:500": [
                  {
                    "@id": "#16",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:body": [
                      {
                        "@id": "#17",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:application%2Fjson": [
                          {
                            "@id": "#18",
                            "@type": [
                              "data:Object",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:type": [
                              {
                                "@id": "#19",
                                "@type": [
                                  "data:Scalar",
                                  "data:Node",
                                  "doc:DomainElement"
                                ],
                                "data:value": [
                                  {
                                    "@value": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"definitions\": {\n    \"Person\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"personName\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Animal\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"animalName\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                  }
                                ],
                                "shacl:datatype": [
                                  {
                                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                                  }
                                ],
                                "core:name": [
                                  {
                                    "@value": "type"
                                  }
                                ],
                                "smaps": {
                                  "synthesized-field": {
                                    "core:name": "true",
                                    "shacl:datatype": "true"
                                  },
                                  "lexical": {
                                    "#19": "[(1,0)-(1,0)]"
                                  }
                                }
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "application/json"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "core:name": "true"
                              },
                              "lexical": {
                                "data:type": "[(11,12)-(13,0)]",
                                "#18": "[(11,0)-(13,0)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "body"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "core:name": "true"
                          },
                          "lexical": {
                            "data:application%2Fjson": "[(10,10)-(13,0)]",
                            "#17": "[(10,0)-(13,0)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "500"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "core:name": "true"
                      },
                      "lexical": {
                        "data:body": "[(9,8)-(13,0)]",
                        "#16": "[(9,0)-(13,0)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "responses"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "core:name": "true"
                  },
                  "lexical": {
                    "data:500": "[(8,6)-(13,0)]",
                    "#15": "[(8,0)-(13,0)]"
                  }
                }
              }
            ],
            "core:name": [
              {
                "@value": "object_1"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "core:name": "true"
              },
              "lexical": {
                "data:responses": "[(7,4)-(13,0)]",
                "#14": "[(7,4)-(13,0)]"
              }
            }
          }
        ],
        "smaps": {
          "resolved-link-target": {
            "#13": "amf://id#13"
          },
          "declared-element": {
            "#13": ""
          },
          "lexical": {
            "doc:dataNode": "[(7,4)-(13,0)]",
            "#13": "[(6,2)-(13,0)]",
            "core:name": "[(6,2)-(6,9)]"
          },
          "resolved-link": {
            "#13": "amf://id#20"
          }
        }
      }
    ],
    "@context": {
      "@base": "amf://id",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "data": "http://a.ml/vocabularies/data#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
