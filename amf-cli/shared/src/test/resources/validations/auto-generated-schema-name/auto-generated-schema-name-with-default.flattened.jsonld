{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "/web-api",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "Inline Type",
      "apiContract:accepts": [
        "application/xml"
      ],
      "apiContract:contentType": [
        "application/xml"
      ],
      "apiContract:endpoint": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline"
        }
      ],
      "smaps": {
        "single-value-array": {
          "apiContract:contentType": "",
          "apiContract:accepts": ""
        },
        "lexical": {
          "apiContract:contentType": "[(4,0)-(6,0)]",
          "core:name": "[(2,0)-(4,0)]",
          "/web-api": "[(2,0)-(23,23)]",
          "apiContract:accepts": "[(4,0)-(6,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/test-inline",
      "apiContract:supportedOperation": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(12,0)-(12,12)]",
          "#/web-api/endpoint/%2Ftest-inline": "[(12,0)-(23,23)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/200"
        },
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/201"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(18,4)-(23,23)]",
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post": "[(13,2)-(23,23)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/application%2Fxml"
        }
      ],
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request": "[(14,9)-(18,0)]"
        },
        "virtual-element": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request": "true"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/200",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/200/application%2Fxml"
        }
      ],
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/200": "[(19,6)-(21,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/201",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "201",
      "core:name": "201",
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/201/application%2Fxml"
        }
      ],
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/201": "[(21,6)-(23,23)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/application%2Fxml",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/application%2Fxml": "[(14,4)-(18,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/200/application%2Fxml",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#/declares/shape/theType"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/200/application%2Fxml": "[(20,8)-(21,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/201/application%2Fxml",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/xml",
      "raml-shapes:schema": {
        "@id": "#/declares/shape/theType"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/201/application%2Fxml": "[(22,8)-(23,23)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/foo"
        },
        {
          "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/bar"
        }
      ],
      "shacl:name": "default",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default": "[(14,4)-(18,0)]"
        },
        "auto-generated-name": {
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default": ""
        }
      }
    },
    {
      "@id": "#/declares/shape/theType",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/declares/shape/theType/property/property/one"
        },
        {
          "@id": "#/declares/shape/theType/property/property/two"
        }
      ],
      "shacl:name": "theType",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#/declares/shape/theType": "file://amf-cli/shared/src/test/resources/validations/auto-generated-schema-name/auto-generated-schema-name-with-default.raml#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/returns/resp/201/payload/default/shape/default/inherits/shape/theType"
        },
        "lexical": {
          "shacl:name": "[(7,2)-(7,9)]",
          "#/declares/shape/theType": "[(7,2)-(12,0)]"
        },
        "declared-element": {
          "#/declares/shape/theType": ""
        },
        "resolved-link-target": {
          "#/declares/shape/theType": "file://amf-cli/shared/src/test/resources/validations/auto-generated-schema-name/auto-generated-schema-name-with-default.raml#/declares/shape/theType"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/foo",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#foo"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/foo/scalar/foo"
      },
      "shacl:minCount": 1,
      "shacl:name": "foo",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(16,13)-(16,19)]",
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/foo": "[(16,8)-(17,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/bar",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#bar"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/bar/scalar/bar"
      },
      "shacl:minCount": 1,
      "shacl:name": "bar",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(17,13)-(17,19)]",
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/bar": "[(17,8)-(18,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/theType/property/property/one",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#one"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/theType/property/property/one/scalar/one"
      },
      "shacl:minCount": 1,
      "shacl:name": "one",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(9,11)-(9,17)]",
          "#/declares/shape/theType/property/property/one": "[(9,6)-(10,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/theType/property/property/two",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#two"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/theType/property/property/two/scalar/two"
      },
      "shacl:minCount": 1,
      "shacl:name": "two",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(10,11)-(10,17)]",
          "#/declares/shape/theType/property/property/two": "[(10,6)-(12,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/foo/scalar/foo",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "foo",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(16,13)-(16,19)]",
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/foo/scalar/foo": "[(16,8)-(17,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/bar/scalar/bar",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "bar",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(17,13)-(17,19)]",
          "#/web-api/endpoint/%2Ftest-inline/supportedOperation/post/expects/request/payload/default/shape/default/property/property/bar/scalar/bar": "[(17,8)-(18,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/theType/property/property/one/scalar/one",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "one",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(9,11)-(9,17)]",
          "#/declares/shape/theType/property/property/one/scalar/one": "[(9,6)-(10,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/theType/property/property/two/scalar/two",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "two",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(10,11)-(10,17)]",
          "#/declares/shape/theType/property/property/two/scalar/two": "[(10,6)-(12,0)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#/declares/shape/theType"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/web-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/validations/auto-generated-schema-name/auto-generated-schema-name-with-default.raml",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
