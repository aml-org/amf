{
  "@graph": [
    {
      "@id": "#17",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.2",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#18",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "e-terminal-common",
      "apiContract:endpoint": [
        {
          "@id": "#19"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(2,0)-(4,0)]",
          "#18": "[(2,0)-(21,6)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/reprints",
      "apiContract:supportedOperation": [
        {
          "@id": "#20"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(17,0)-(17,9)]",
          "#19": "[(17,0)-(21,6)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:returns": [
        {
          "@id": "#24"
        }
      ],
      "doc:extends": [
        {
          "@id": "#21"
        }
      ],
      "smaps": {
        "lexical": {
          "doc:extends": "[(19,4)-(21,6)]",
          "#20": "[(18,2)-(21,6)]"
        }
      }
    },
    {
      "@id": "#24",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#25"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(13,8)-(15,39)]",
          "#24": "[(12,6)-(15,39)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "apiContract:ParametrizedTrait",
        "doc:ParametrizedDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "myTrait",
      "doc:target": {
        "@id": "#10"
      },
      "doc:variable": [
        {
          "@id": "#22"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(19,10)-(19,17)]",
          "#21": "[(19,10)-(21,5)]"
        }
      }
    },
    {
      "@id": "#25",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#26"
      },
      "smaps": {
        "lexical": {
          "#25": "[(14,10)-(15,39)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "apiContract:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "myTrait",
      "doc:dataNode": {
        "@id": "#11"
      },
      "doc:variable": [
        "type-response-get"
      ],
      "smaps": {
        "declared-element": {
          "#10": ""
        },
        "lexical": {
          "doc:variable": "[(10,10)-(17,0)]",
          "core:name": "[(10,2)-(10,9)]",
          "#10": "[(10,2)-(17,0)]",
          "doc:dataNode": "[(11,4)-(17,0)]"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "doc:VariableValue",
        "doc:DomainElement"
      ],
      "core:name": "type-response-get",
      "doc:value": {
        "@id": "#23"
      },
      "smaps": {
        "lexical": {
          "doc:value": "[(20,25)-(20,58)]",
          "#22": "[(20,6)-(20,58)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "raml-shapes:UnionShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "#1"
        },
        {
          "@id": "#4"
        },
        {
          "@id": "#7"
        }
      ],
      "smaps": {
        "auto-generated-name": {
          "#26": ""
        },
        "lexical": {
          "#26": "[(15,12)-(15,39)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:responses": {
        "@id": "#12"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:responses": "[(11,4)-(17,0)]",
          "#11": "[(11,4)-(17,0)]"
        }
      }
    },
    {
      "@id": "#23",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "TestType1 | TestType2 | TestType3",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#23": "[(20,25)-(20,58)]"
        }
      }
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "TestType1",
      "smaps": {
        "resolved-link-target": {
          "#1": "amf://id#3"
        },
        "declared-element": {
          "#1": ""
        },
        "lexical": {
          "shacl:name": "[(5,2)-(5,11)]",
          "#1": "[(5,2)-(6,0)]"
        },
        "resolved-link": {
          "#1": "amf://id#2"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "shacl:name": "TestType2",
      "smaps": {
        "resolved-link-target": {
          "#4": "amf://id#6"
        },
        "declared-element": {
          "#4": ""
        },
        "lexical": {
          "shacl:name": "[(6,2)-(6,11)]",
          "#4": "[(6,2)-(7,0)]",
          "shacl:datatype": "[(6,13)-(6,20)]"
        },
        "resolved-link": {
          "#4": "amf://id#5"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "TestType3",
      "smaps": {
        "resolved-link-target": {
          "#7": "amf://id#9"
        },
        "declared-element": {
          "#7": ""
        },
        "lexical": {
          "shacl:name": "[(7,2)-(7,11)]",
          "#7": "[(7,2)-(9,0)]",
          "shacl:datatype": "[(7,13)-(7,19)]"
        },
        "resolved-link": {
          "#7": "amf://id#8"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:200": {
        "@id": "#13"
      },
      "core:name": "responses",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:200": "[(12,6)-(17,0)]",
          "#12": "[(12,0)-(17,0)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:body": {
        "@id": "#14"
      },
      "core:name": "200",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:body": "[(13,8)-(17,0)]",
          "#13": "[(13,0)-(17,0)]"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:application%2Fjson": {
        "@id": "#15"
      },
      "core:name": "body",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:application%2Fjson": "[(14,10)-(17,0)]",
          "#14": "[(14,0)-(17,0)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:type": {
        "@id": "#16"
      },
      "core:name": "application/json",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:type": "[(15,12)-(17,0)]",
          "#15": "[(15,0)-(17,0)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "<<type-response-get>>",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "type",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#16": "[(15,18)-(15,39)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#4"
        },
        {
          "@id": "#7"
        },
        {
          "@id": "#10"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#18"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#17"
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
