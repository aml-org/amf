{
  "@graph": [
    {
      "@id": "#24",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.2",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#25",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "test",
      "apiContract:endpoint": [
        {
          "@id": "#26"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#25": "[(2,0)-(28,24)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/CodeableConcept",
      "apiContract:supportedOperation": [
        {
          "@id": "#28"
        }
      ],
      "doc:extends": [
        {
          "@id": "#27"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(27,0)-(27,16)]",
          "#26": "[(27,0)-(28,24)]"
        }
      }
    },
    {
      "@id": "#28",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#29"
        }
      ],
      "smaps": {
        "lexical": {
          "#28": "[(22,4)-(1,0)]"
        }
      }
    },
    {
      "@id": "#27",
      "@type": [
        "apiContract:ParametrizedResourceType",
        "doc:ParametrizedDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "fhirResourceType",
      "doc:target": {
        "@id": "#17"
      },
      "smaps": {
        "lexical": {
          "core:name": "[(28,8)-(28,24)]",
          "#27": "[(28,8)-(28,24)]"
        }
      }
    },
    {
      "@id": "#29",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#30"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(23,6)-(1,0)]"
        },
        "virtual-element": {
          "#29": "true"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "apiContract:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "core:name": "fhirResourceType",
      "doc:dataNode": {
        "@id": "#18"
      },
      "doc:variable": [
        "resourcePathName"
      ],
      "smaps": {
        "resolved-link-target": {
          "#17": "amf://id#17"
        },
        "declared-element": {
          "#17": ""
        },
        "lexical": {
          "doc:variable": "[(21,19)-(27,0)]",
          "core:name": "[(21,2)-(21,18)]",
          "#17": "[(21,2)-(27,0)]",
          "doc:dataNode": "[(22,4)-(27,0)]"
        },
        "resolved-link": {
          "#17": "amf://id#23"
        }
      }
    },
    {
      "@id": "#30",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#3"
      },
      "smaps": {
        "lexical": {
          "#30": "[(24,8)-(1,0)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:post": {
        "@id": "#19"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:post": "[(22,4)-(27,0)]",
          "#18": "[(22,4)-(27,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        },
        {
          "@id": "#10"
        }
      ],
      "shacl:name": "CodeableConcept",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link-target": {
          "#3": "amf://id#3"
        },
        "declared-element": {
          "#3": ""
        },
        "lexical": {
          "#3": "[(13,2)-(19,0)]"
        },
        "type-property-lexical-info": {
          "#3": "[(14,4)-(14,8)]"
        },
        "resolved-link": {
          "#3": "amf://id#14"
        },
        "inherited-shapes": {
          "#3": "amf://id#9"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:body": {
        "@id": "#20"
      },
      "core:name": "post",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:body": "[(23,6)-(27,0)]",
          "#19": "[(23,0)-(27,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#extension"
        }
      ],
      "raml-shapes:range": {
        "@id": "#5"
      },
      "shacl:minCount": 0,
      "shacl:name": "extension",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(11,18)-(11,29)]",
          "#4": "[(11,6)-(13,0)]"
        },
        "inheritance-provenance": {
          "#4": "amf://id#9"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#text"
        }
      ],
      "raml-shapes:range": {
        "@id": "#11"
      },
      "shacl:minCount": 0,
      "shacl:name": "text",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(16,13)-(16,19)]",
          "#10": "[(16,6)-(19,0)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:application%2Fjson": {
        "@id": "#21"
      },
      "core:name": "body",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:application%2Fjson": "[(24,8)-(27,0)]",
          "#20": "[(24,0)-(27,0)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "raml-shapes:ArrayShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "#6"
      },
      "shacl:name": "extension?",
      "smaps": {
        "lexical": {
          "#5": "[(11,6)-(13,0)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "text?",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(16,13)-(16,19)]",
          "#11": "[(16,6)-(19,0)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:type": {
        "@id": "#22"
      },
      "core:name": "application/json",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:type": "[(25,10)-(27,0)]",
          "#21": "[(25,0)-(27,0)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "raml-shapes:RecursiveShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:fixPoint": [
        {
          "@id": "#1"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "Extension",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true"
        },
        "resolved-link": {
          "#6": "amf://id#7"
        },
        "lexical": {
          "#6": "[(5,2)-(9,0)]"
        },
        "declared-element": {
          "#6": ""
        },
        "resolved-link-target": {
          "#6": "amf://id#8"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "<<resourcePathName>>",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "type",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#22": "[(25,16)-(25,36)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#9"
        },
        {
          "@id": "#3"
        },
        {
          "@id": "#17"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#25"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#24"
      }
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#2"
        }
      ],
      "shacl:name": "Extension",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#1": "amf://id#7"
        },
        "lexical": {
          "shacl:name": "[(5,2)-(5,11)]",
          "#1": "[(5,2)-(9,0)]"
        },
        "declared-element": {
          "#1": ""
        },
        "resolved-link-target": {
          "#1": "amf://id#8"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "shacl:name": "Element",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#9": "amf://id#15"
        },
        "lexical": {
          "#9": "[(9,2)-(13,0)]"
        },
        "declared-element": {
          "#9": ""
        },
        "resolved-link-target": {
          "#9": "amf://id#16"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#propr"
        }
      ],
      "raml-shapes:range": {
        "@id": "#3"
      },
      "shacl:minCount": 1,
      "shacl:name": "propr",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(7,13)-(7,28)]",
          "#2": "[(7,6)-(9,0)]"
        }
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
