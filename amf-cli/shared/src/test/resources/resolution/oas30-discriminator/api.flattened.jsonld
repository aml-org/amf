{
  "@graph": [
    {
      "@id": "#17",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.0",
      "doc:transformed": true,
      "doc:sourceSpec": "OAS 3.0"
    },
    {
      "@id": "#18",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "Discriminators",
      "core:version": "1.0.0",
      "apiContract:endpoint": [
        {
          "@id": "#19"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:endpoint": "[(5,0)-(16,0)]",
          "core:name": "[(3,2)-(4,0)]",
          "#18": "[(1,0)-(37,0)]",
          "core:version": "[(4,2)-(5,0)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/inlined",
      "apiContract:supportedOperation": [
        {
          "@id": "#20"
        }
      ],
      "smaps": {
        "lexical": {
          "#19": "[(6,2)-(16,0)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:returns": [
        {
          "@id": "#21"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(8,6)-(16,0)]",
          "#20": "[(7,4)-(16,0)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "Ok",
      "apiContract:payload": [
        {
          "@id": "#22"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(11,10)-(16,0)]",
          "core:name": "[(9,8)-(9,13)]",
          "#21": "[(9,8)-(16,0)]",
          "core:description": "[(10,10)-(11,0)]"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#1"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(13,14)-(16,0)]",
          "#22": "[(12,12)-(16,0)]",
          "core:mediaType": "[(12,12)-(12,28)]"
        }
      }
    },
    {
      "@id": "#1",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "raml-shapes:discriminator": "petType",
      "raml-shapes:discriminatorMapping": [
        {
          "@id": "#2"
        },
        {
          "@id": "#3"
        }
      ],
      "raml-shapes:discriminatorValueMapping": [
        {
          "@id": "#4"
        },
        {
          "@id": "#10"
        }
      ],
      "shacl:property": [],
      "doc:recursive": true,
      "shacl:name": "Animal",
      "shacl:xone": [
        {
          "@id": "#5"
        },
        {
          "@id": "#11"
        }
      ],
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#1": "amf://id#16"
        },
        "lexical": {
          "shacl:xone": "[(19,6)-(22,0)]",
          "raml-shapes:discriminatorValueMapping": "[(24,8)-(27,0)]",
          "raml-shapes:discriminator": "[(23,8)-(24,0)]",
          "#1": "[(18,4)-(27,0)]",
          "raml-shapes:discriminatorMapping": "[(24,8)-(27,0)]",
          "shacl:name": "[(18,4)-(18,10)]"
        },
        "declared-element": {
          "#1": ""
        },
        "resolved-link-target": {
          "#1": "amf://id#1"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "apiContract:IriTemplateMapping",
        "doc:DomainElement"
      ],
      "apiContract:templateVariable": "dog",
      "apiContract:linkExpression": "#/components/schemas/Dog",
      "smaps": {
        "lexical": {
          "apiContract:linkExpression": "[(25,15)-(25,41)]",
          "#2": "[(25,10)-(26,0)]",
          "apiContract:templateVariable": "[(25,10)-(25,13)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "apiContract:IriTemplateMapping",
        "doc:DomainElement"
      ],
      "apiContract:templateVariable": "cat",
      "apiContract:linkExpression": "#/components/schemas/Cat",
      "smaps": {
        "lexical": {
          "apiContract:linkExpression": "[(26,15)-(26,41)]",
          "#3": "[(26,10)-(27,0)]",
          "apiContract:templateVariable": "[(26,10)-(26,13)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "raml-shapes:DiscriminatorValueMapping",
        "doc:DomainElement"
      ],
      "raml-shapes:discriminatorValue": "dog",
      "raml-shapes:discriminatorValueTarget": {
        "@id": "#5"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:discriminatorValueTarget": "[(25,15)-(25,41)]",
          "#4": "[(25,10)-(26,0)]",
          "raml-shapes:discriminatorValue": "[(25,10)-(25,13)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "raml-shapes:DiscriminatorValueMapping",
        "doc:DomainElement"
      ],
      "raml-shapes:discriminatorValue": "cat",
      "raml-shapes:discriminatorValueTarget": {
        "@id": "#11"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:discriminatorValueTarget": "[(26,15)-(26,41)]",
          "#10": "[(26,10)-(27,0)]",
          "raml-shapes:discriminatorValue": "[(26,10)-(26,13)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#6"
        }
      ],
      "shacl:name": "Dog",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#5": "amf://id#9"
        },
        "type-property-lexical-info": {
          "#5": "[(33,6)-(33,10)]"
        },
        "lexical": {
          "shacl:name": "[(32,4)-(32,7)]",
          "#5": "[(32,4)-(37,0)]"
        },
        "declared-element": {
          "#5": ""
        },
        "resolved-link-target": {
          "#5": "amf://id#5"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#12"
        }
      ],
      "shacl:name": "Cat",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#11": "amf://id#15"
        },
        "type-property-lexical-info": {
          "#11": "[(28,6)-(28,10)]"
        },
        "lexical": {
          "shacl:name": "[(27,4)-(27,7)]",
          "#11": "[(27,4)-(32,0)]"
        },
        "declared-element": {
          "#11": ""
        },
        "resolved-link-target": {
          "#11": "amf://id#11"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#bark"
        }
      ],
      "raml-shapes:range": {
        "@id": "#7"
      },
      "shacl:minCount": 0,
      "shacl:name": "bark",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#6": "[(35,8)-(37,0)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#13"
      },
      "shacl:minCount": 0,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#12": "[(30,8)-(32,0)]"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "bark",
      "smaps": {
        "type-property-lexical-info": {
          "#7": "[(36,10)-(36,14)]"
        },
        "lexical": {
          "shacl:datatype": "[(36,10)-(37,0)]",
          "#7": "[(35,8)-(37,0)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "type-property-lexical-info": {
          "#13": "[(31,10)-(31,14)]"
        },
        "lexical": {
          "shacl:datatype": "[(31,10)-(32,0)]",
          "#13": "[(30,8)-(32,0)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#1"
        },
        {
          "@id": "#11"
        },
        {
          "@id": "#5"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#18"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#17"
      }
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
