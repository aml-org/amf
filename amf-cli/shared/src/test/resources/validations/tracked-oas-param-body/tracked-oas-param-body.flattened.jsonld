{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "OAS 2.0"
    },
    {
      "@id": "/web-api",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "Banking",
      "core:description": "Banking",
      "core:version": "1.0",
      "apiContract:endpoint": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:endpoint": "[(8,0)-(48,28)]",
          "core:description": "[(5,2)-(6,0)]",
          "/web-api": "[(1,0)-(48,28)]",
          "core:name": "[(4,2)-(5,0)]",
          "core:version": "[(6,2)-(8,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/customers/{id}",
      "apiContract:supportedOperation": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post"
        }
      ],
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D": "[(9,2)-(48,28)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:expects": "[(11,0)-(48,28)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post": "[(10,4)-(48,28)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson"
        }
      ],
      "smaps": {
        "virtual-element": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request": "true"
        },
        "lexical": {
          "apiContract:payload": "[(11,6)-(48,28)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request": "[(11,0)-(48,28)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:name": "generated",
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated"
      },
      "smaps": {
        "body-parameter": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson": "true"
        },
        "lexical": {
          "raml-shapes:schema": "[(16,10)-(48,28)]",
          "core:name": "[(15,10)-(16,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson": "[(12,9)-(48,28)]",
          "core:mediaType": "[(13,10)-(14,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address"
        },
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/id"
        },
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/name"
        }
      ],
      "shacl:name": "generated",
      "apiContract:examples": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example"
        }
      ],
      "smaps": {
        "parameter-binding-in-body-lexical-info": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated": "[(14,10)-(15,0)]"
        },
        "lexical": {
          "apiContract:examples": "[(17,12)-(25,0)]",
          "shacl:closed": "[(26,12)-(27,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated": "[(16,10)-(48,28)]",
          "shacl:name": "[(15,10)-(16,0)]"
        },
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated": "[(25,12)-(25,16)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#address"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address"
      },
      "shacl:minCount": 1,
      "shacl:name": "address",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(28,16)-(28,23)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address": "[(32,14)-(44,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/id",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#id"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/id/scalar/id"
      },
      "shacl:minCount": 1,
      "shacl:name": "id",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(29,16)-(29,18)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/id": "[(44,14)-(47,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/name",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/name/scalar/name"
      },
      "shacl:minCount": 1,
      "shacl:name": "name",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(30,16)-(30,20)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/name": "[(47,14)-(48,28)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1"
      },
      "doc:raw": "address:\n  street: 12 Oxford St.\n  city: London\nid: 1299\nname: Example",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true"
        },
        "lexical": {
          "doc:structuredValue": "[(19,14)-(25,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example": "[(17,12)-(25,0)]",
          "doc:strict": "[(18,14)-(19,0)]"
        },
        "tracked-element": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example": "file://amf-cli/shared/src/test/resources/validations/tracked-oas-param-body/tracked-oas-param-body.yaml#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street"
        },
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/city"
        }
      ],
      "shacl:name": "address",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address": "[(33,16)-(33,20)]"
        },
        "lexical": {
          "shacl:closed": "[(34,16)-(35,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address": "[(32,14)-(44,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/id/scalar/id",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "raml-shapes:format": "int",
      "shacl:name": "id",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/id/scalar/id": "[(45,16)-(45,20)]"
        },
        "lexical": {
          "raml-shapes:format": "[(46,16)-(47,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/id/scalar/id": "[(44,14)-(47,0)]",
          "shacl:datatype": "[(45,16)-(46,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/name/scalar/name",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/name/scalar/name": "[(48,16)-(48,20)]"
        },
        "lexical": {
          "shacl:datatype": "[(48,16)-(48,28)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/name/scalar/name": "[(47,14)-(48,28)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:address": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address"
      },
      "data:id": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/id"
      },
      "data:name": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/name_1"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:name": "[(24,16)-(25,0)]",
          "data:address": "[(20,16)-(23,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1": "[(20,0)-(25,0)]",
          "data:id": "[(23,16)-(24,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#street"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street"
      },
      "shacl:minCount": 1,
      "shacl:name": "street",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(36,20)-(36,26)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street": "[(39,18)-(42,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/city",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#city"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/city/scalar/city"
      },
      "shacl:minCount": 1,
      "shacl:name": "city",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(37,20)-(37,24)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/city": "[(42,18)-(44,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:street": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address/street"
      },
      "data:city": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address/city"
      },
      "core:name": "address",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:city": "[(22,18)-(23,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address": "[(21,0)-(23,0)]",
          "data:street": "[(21,18)-(22,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/id",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "1299",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "id",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/id": "[(23,20)-(23,24)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/name_1",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Example",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/name_1": "[(24,22)-(24,29)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "street",
      "apiContract:examples": [
        {
          "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street/examples/example/default-example"
        }
      ],
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street": "[(41,20)-(41,24)]"
        },
        "lexical": {
          "apiContract:examples": "[(40,20)-(41,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street": "[(39,18)-(42,0)]",
          "shacl:datatype": "[(41,20)-(42,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/city/scalar/city",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "city",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/city/scalar/city": "[(43,20)-(43,24)]"
        },
        "lexical": {
          "shacl:datatype": "[(43,20)-(44,0)]",
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/city/scalar/city": "[(42,18)-(44,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address/street",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "12 Oxford St.",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "street",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address/street": "[(21,26)-(21,39)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address/city",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "London",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "city",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/examples/example/default-example/object_1/address/city": "[(22,24)-(22,30)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street/examples/example/default-example",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street/examples/example/default-example/scalar_1"
      },
      "doc:raw": "12 Oxford St.",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street/examples/example/default-example": "[(40,29)-(40,42)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street/examples/example/default-example/scalar_1",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "12 Oxford St.",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Fcustomers%2F%7Bid%7D/supportedOperation/post/expects/request/payload/application%2Fjson/shape/generated/property/property/address/shape/address/property/property/street/scalar/street/examples/example/default-example/scalar_1": "[(40,29)-(40,42)]"
        }
      }
    },
    {
      "@id": "",
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/web-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/validations/tracked-oas-param-body/tracked-oas-param-body.yaml",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
