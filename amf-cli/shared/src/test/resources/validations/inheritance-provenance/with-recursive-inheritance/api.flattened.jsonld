{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "/web-api",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "API",
      "smaps": {
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "/web-api": "[(2,0)-(9,16)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#/declares/shape/Person"
        },
        {
          "@id": "#/declares/shape/Child"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/web-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/declares/shape/Person",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/declares/shape/Person/property/property/children"
        },
        {
          "@id": "#/declares/shape/Person/property/property/name"
        }
      ],
      "shacl:name": "Person",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#/declares/shape/Person": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Child/inherits/shape/Person"
        },
        "lexical": {
          "shacl:name": "[(4,2)-(4,8)]",
          "#/declares/shape/Person": "[(4,2)-(8,0)]"
        },
        "declared-element": {
          "#/declares/shape/Person": ""
        },
        "resolved-link-target": {
          "#/declares/shape/Person": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Person"
        }
      }
    },
    {
      "@id": "#/declares/shape/Child",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/declares/shape/Person/property/property/name"
        },
        {
          "@id": "#/declares/shape/Person/property/property/children"
        }
      ],
      "shacl:name": "Child",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link-target": {
          "#/declares/shape/Child": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Child"
        },
        "declared-element": {
          "#/declares/shape/Child": ""
        },
        "lexical": {
          "shacl:name": "[(8,2)-(8,7)]",
          "#/declares/shape/Child": "[(8,2)-(9,16)]"
        },
        "type-property-lexical-info": {
          "#/declares/shape/Child": "[(9,4)-(9,8)]"
        },
        "resolved-link": {
          "#/declares/shape/Child": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Person/property/property/children/array/children/shape/default-node"
        },
        "inherited-shapes": {
          "#/declares/shape/Child": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Person"
        }
      }
    },
    {
      "@id": "#/declares/shape/Person/property/property/children",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#children"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/Person/property/property/children/array/children"
      },
      "shacl:minCount": 1,
      "shacl:name": "children",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(6,16)-(6,23)]",
          "#/declares/shape/Person/property/property/children": "[(6,6)-(7,0)]"
        },
        "inheritance-provenance": {
          "#/declares/shape/Person/property/property/children": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Person"
        }
      }
    },
    {
      "@id": "#/declares/shape/Person/property/property/name",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/Person/property/property/name/scalar/name"
      },
      "shacl:minCount": 1,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(7,12)-(7,18)]",
          "#/declares/shape/Person/property/property/name": "[(7,6)-(8,0)]"
        },
        "inheritance-provenance": {
          "#/declares/shape/Person/property/property/name": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Person"
        }
      }
    },
    {
      "@id": "#/declares/shape/Person/property/property/children/array/children",
      "@type": [
        "raml-shapes:ArrayShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "#/declares/shape/Child/recursive"
      },
      "shacl:name": "children",
      "smaps": {
        "lexical": {
          "#/declares/shape/Person/property/property/children/array/children": "[(6,6)-(7,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/Person/property/property/name/scalar/name",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(7,12)-(7,18)]",
          "#/declares/shape/Person/property/property/name/scalar/name": "[(7,6)-(8,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/Child/recursive",
      "@type": [
        "raml-shapes:RecursiveShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:fixPoint": [
        {
          "@id": "#/declares/shape/Child"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "Child",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true"
        },
        "resolved-link-target": {
          "#/declares/shape/Child/recursive": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Child"
        },
        "declared-element": {
          "#/declares/shape/Child/recursive": ""
        },
        "lexical": {
          "#/declares/shape/Child/recursive": "[(8,2)-(9,16)]"
        },
        "type-property-lexical-info": {
          "#/declares/shape/Child/recursive": "[(9,4)-(9,8)]"
        },
        "resolved-link": {
          "#/declares/shape/Child/recursive": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Person/property/property/children/array/children/shape/default-node"
        },
        "inherited-shapes": {
          "#/declares/shape/Child/recursive": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml#/declares/shape/Person"
        }
      }
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/validations/inheritance-provenance/with-recursive-inheritance/api.raml",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
