{
  "@graph": [
    {
      "@id": "#15",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.9.0",
      "doc:transformed": true,
      "doc:sourceSpec": "OAS 2.0"
    },
    {
      "@id": "#16",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "api",
      "core:version": "1.0.0",
      "apiContract:endpoint": [
        {
          "@id": "#17"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:endpoint": "[(6,0)-(30,0)]",
          "core:name": "[(4,2)-(6,0)]",
          "#16": "[(1,0)-(38,29)]",
          "core:version": "[(3,2)-(4,0)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/test",
      "apiContract:supportedOperation": [
        {
          "@id": "#18"
        }
      ],
      "smaps": {
        "lexical": {
          "#17": "[(7,2)-(30,0)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "apiContract:returns": [
        {
          "@id": "#19"
        },
        {
          "@id": "#24"
        },
        {
          "@id": "#26"
        },
        {
          "@id": "#28"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(9,6)-(30,0)]",
          "#18": "[(8,4)-(30,0)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "core:description": "ok",
      "apiContract:payload": [
        {
          "@id": "#20"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(11,10)-(12,0)]",
          "#19": "[(10,8)-(17,0)]",
          "core:name": "[(10,8)-(10,11)]"
        }
      }
    },
    {
      "@id": "#24",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "201",
      "core:name": "201",
      "apiContract:payload": [
        {
          "@id": "#25"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(17,8)-(17,11)]",
          "#24": "[(17,8)-(21,0)]"
        }
      }
    },
    {
      "@id": "#26",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "202",
      "core:name": "202",
      "apiContract:payload": [
        {
          "@id": "#27"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(21,8)-(21,11)]",
          "#26": "[(21,8)-(25,0)]"
        }
      }
    },
    {
      "@id": "#28",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "203",
      "core:name": "203",
      "apiContract:payload": [
        {
          "@id": "#29"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(25,8)-(25,11)]",
          "#28": "[(25,8)-(30,0)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#21"
      },
      "smaps": {
        "virtual-element": {
          "#20": "true"
        },
        "lexical": {
          "raml-shapes:schema": "[(12,10)-(17,0)]",
          "#20": "[(12,10)-(17,0)]"
        }
      }
    },
    {
      "@id": "#25",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#3"
      },
      "smaps": {
        "virtual-element": {
          "#25": "true"
        },
        "lexical": {
          "raml-shapes:schema": "[(18,10)-(21,0)]",
          "#25": "[(1,0)-(8,1)]"
        }
      }
    },
    {
      "@id": "#27",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#8"
      },
      "smaps": {
        "virtual-element": {
          "#27": "true"
        },
        "lexical": {
          "raml-shapes:schema": "[(22,10)-(25,0)]",
          "#27": "[(31,2)-(37,0)]"
        }
      }
    },
    {
      "@id": "#29",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#13"
      },
      "smaps": {
        "virtual-element": {
          "#29": "true"
        },
        "lexical": {
          "raml-shapes:schema": "[(26,10)-(30,0)]",
          "#29": "[(1,0)-(8,1)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#22"
        }
      ],
      "shacl:name": "default",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#21": "[(13,12)-(13,16)]"
        },
        "auto-generated-name": {
          "#21": ""
        },
        "lexical": {
          "#21": "[(12,10)-(17,0)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "schema",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#3": "[(2,2)-(2,8)]"
        },
        "resolved-link": {
          "#3": "amf://id#7"
        },
        "resolved-link-target": {
          "#3": "amf://id#6"
        },
        "auto-generated-name": {
          "#3": ""
        },
        "lexical": {
          "#3": "[(1,0)-(8,1)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#9"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "User",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#8": "[(32,4)-(32,8)]"
        },
        "resolved-link": {
          "#8": "amf://id#12"
        },
        "resolved-link-target": {
          "#8": "amf://id#11"
        },
        "declared-element": {
          "#8": ""
        },
        "lexical": {
          "shacl:name": "[(31,2)-(31,6)]",
          "#8": "[(31,2)-(37,0)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        }
      ],
      "doc:recursive": true,
      "shacl:name": "RefDefinition",
      "smaps": {
        "synthesized-field": {
          "doc:recursive": "true",
          "shacl:closed": "true"
        },
        "type-property-lexical-info": {
          "#13": "[(2,2)-(2,8)]"
        },
        "resolved-link-target": {
          "#13": "amf://id#6"
        },
        "declared-element": {
          "#13": ""
        },
        "resolved-link": {
          "#13": "amf://id#14"
        },
        "lexical": {
          "#13": "[(1,0)-(8,1)]"
        }
      }
    },
    {
      "@id": "#22",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#msg"
        }
      ],
      "raml-shapes:range": {
        "@id": "#23"
      },
      "shacl:minCount": 0,
      "shacl:name": "msg",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#22": "[(15,14)-(17,0)]"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#5"
      },
      "shacl:minCount": 0,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#4": "[(4,4)-(6,5)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#id"
        }
      ],
      "raml-shapes:range": {
        "@id": "#10"
      },
      "shacl:minCount": 0,
      "shacl:name": "id",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#9": "[(34,6)-(37,0)]"
        }
      }
    },
    {
      "@id": "#23",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "msg",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(16,16)-(17,0)]",
          "#23": "[(15,14)-(17,0)]"
        },
        "type-property-lexical-info": {
          "#23": "[(16,16)-(16,20)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(5,6)-(5,22)]",
          "#5": "[(4,4)-(6,5)]"
        },
        "type-property-lexical-info": {
          "#5": "[(5,6)-(5,12)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "shacl:name": "id",
      "smaps": {
        "lexical": {
          "shacl:datatype": "[(35,8)-(37,0)]",
          "#10": "[(34,6)-(37,0)]"
        },
        "type-property-lexical-info": {
          "#10": "[(35,8)-(35,12)]"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#1"
        }
      ],
      "doc:declares": [
        {
          "@id": "#8"
        },
        {
          "@id": "#13"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#16"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#15"
      }
    },
    {
      "@id": "#1",
      "@type": [
        "raml-shapes:DataTypeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#3"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#2"
      }
    },
    {
      "@id": "#2",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
