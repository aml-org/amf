#%Dialect 1.0

dialect: AsyncAPI
version: 1.0.0

external:
  async: http://www.asyncapi.com/v1/spec#

nodeMappings:

  AsyncAPIObject:
    classTerm: async.API
    mapping:
      asyncapi:
        propertyTerm: async.specVersion
        range: string
        pattern: 1.0.0
        mandatory: true
      baseTopic:
        propertyTerm: async.baseTopic
        range: string
      info:
        propertyTerm: async.info
        range: InfoObject
        mandatory: true
      servers:
        propertyTerm: async.server
        range: ServerObject
        allowMultiple: true
      topics:
        propertyTerm: async.topic
        range: TopicItemObject
        mandatory: true
        mapKey: topicPattern

  InfoObject:
    classTerm: async.Info
    mapping:
      title:
        propertyTerm: async.title
        range: string
        mandatory: true
      version:
        propertyTerm: async.version
        range: string
        mandatory: true
      description:
        propertyTerm: async.description
        range: string
      termsOfService:
        propertyTerm: async.termsOfService
        range: link
      contact:
        propertyTerm: async.contact
        range: ContactObject
      license:
        propertyTerm: async.license
        range: LicenseObject

  ContactObject:
    classTerm: async.Contact
    mapping:
      name:
        propertyTerm: async.name
        range: string
      url:
        propertyTerm: async.url
        range: link
      email:
        propertyTerm: async.email
        range: string
        pattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$

  LicenseObject:
    classTerm: async.License
    mapping:
      name:
        propertyTerm: async.name
        range: string
        mandatory: true
      url:
        propertyTerm: async.url
        range: string

  ServerObject:
    classTerm: async.Server
    mapping:
      url:
        propertyTerm: async.urlPattern
        range: string
        mandatory: true
        unique: true
      scheme:
        propertyTerm: async.urlScheme
        range: string
        mandatory: true
        enum: [amqp, amqps, mqtt, mqtts, ws, wss, stomp, stomps ]
        unique: true
      description:
        propertyTerm: async.description
        range: string
      variables:
        propertyTerm: async.patternVars
        range: PatternVariableObject
        mapKey: name

  PatternVariableObject:
    classTerm: async.PatternVariable
    mapping:
      name:
        propertyTerm: async.variableName
        range: string
        unique: true
      enum:
        propertyTerm: async.variableValueEnum
        range: string
        allowMultiple: true
      default:
        propertyTerm: async.variableValueDefault
        range: string
      description:
        propertyTerm: async.description
        range: string

  TopicItemObject:
    classTerm: async.Topic
    mapping:
      topicPattern:
        propertyTerm: async.topicPattern
        range: string
        mandatory: true
        unique: true
      subscribe:
        propertyTerm: async.subscribe
        range: MessageObject
      publish:
        propertyTerm: async.publish
        range: MessageObject

  MessageObject:
    classTerm: async.Message
    mapping:
      summary:
        propertyTerm: async.summary
        range: string
      description:
        propertyTerm: async.description
        range: string
      schema:
        propertyTerm: async.schema
        range: SchemaObject

  # Temporary
  SchemaObject:
    classTerm: async.Schema
    mapping:
      type:
        propertyTerm: async.schemaType
        range: string
        enum: [array, boolean, integer, "null", number, object, string]
        allowMultiple: true
      id:
        propertyTerm: async.schemaId
        range: string
      propertyKey:
        propertyTerm: async.propertyKey
        range: string
      "$schema":
        propertyTerm: async.schemaSchema
        range: string
      title:
        propertyTerm: async.schemaTitle
        range: string
      description:
        propertyTerm: async.schemaDescription
        range: string
      default:
        propertyTerm: async.schemaDefault
        range: any
      multipleOf:
        propertyTerm: async.schemaMultipleOf
        range: number
      maximum:
        propertyTerm: async.schemaMaximum
        range: number
      minimum:
        propertyTerm: async.schemaMinimum
        range: number
      exclusiveMinimum:
        propertyTerm: async.schemaExclusiveMinimum
        range: number
      exclusiveMaximum:
        propertyTerm: async.schemaExclusiveMaximum
        range: number
      maxLength:
        propertyTerm: async.schemaMaxLength
        range: number
      minLength:
        propertyTerm: async.schemaMinLength
        range: number
      pattern:
        propertyTerm: async.schemaPattern
        range: string
      additionalItems:
        propertyTerm: async.schemaAdditionalItems
        range: boolean
      items:
        propertyTerm: async.schemaItems
        range: SchemaObject
        allowMultiple: true
      maxItems:
        propertyTerm: async.schemaMaxItems
        range: boolean
      minItems:
        propertyTerm: async.schemaMinItems
        range: boolean
      uniqueItems:
        propertyTerm: async.schemaUniqueItems
        range: boolean
      maxProperties:
        propertyTerm: async.schemaMaxProperties
        range: number
      minProperties:
        propertyTerm: async.schemaMinProperties
        range: number
      required:
        propertyTerm: async.schemaRequired
        range: string
        allowMultiple: true
      properties:
        propertyTerm: async.schemaProperty
        range: SchemaObject
        mapKey: propertyKey
      patternProperties:
        propertyTerm: async.schemaProperty
        range: SchemaObject
        mapKey: propertyKey
      key:
        propertyTerm: async.schemaPropertyKey
        range: string
      items:
        propertyTerm: async.items
        range: SchemaObject
        allowMultiple: true

documents:
  root:
    encodes: AsyncAPIObject