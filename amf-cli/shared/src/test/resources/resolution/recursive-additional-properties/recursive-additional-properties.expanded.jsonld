[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "/web-api",
        "@type": [
          "apiContract:WebAPI",
          "apiContract:API",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "apiContract:server": [
          {
            "@id": "#/web-api/server/firestore.googleapis.com%2F",
            "@type": [
              "apiContract:Server",
              "doc:DomainElement"
            ],
            "core:urlTemplate": [
              {
                "@value": "firestore.googleapis.com/"
              }
            ],
            "smaps": {
              "host-lexical": {
                "core:urlTemplate": "[(4,0)-(5,0)]"
              },
              "synthesized-field": {
                "core:urlTemplate": "true"
              },
              "virtual-element": {
                "#/web-api/server/firestore.googleapis.com%2F": "true"
              },
              "base-path-lexical": {
                "core:urlTemplate": "[(5,0)-(7,0)]"
              }
            }
          }
        ],
        "apiContract:scheme": [
          {
            "@value": "https"
          }
        ],
        "core:documentation": [
          {
            "@id": "#/web-api/documentation/creative-work/https%3A%2F%2Fcloud.google.com%2Ffirestore",
            "@type": [
              "core:CreativeWork",
              "doc:DomainElement"
            ],
            "core:url": [
              {
                "@id": "https://cloud.google.com/firestore"
              }
            ],
            "smaps": {
              "lexical": {
                "core:url": "[(8,2)-(9,0)]",
                "#/web-api/documentation/creative-work/https%3A%2F%2Fcloud.google.com%2Ffirestore": "[(8,0)-(9,0)]"
              }
            }
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/v1/{parent}/{collectionId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list",
                "@type": [
                  "apiContract:Operation",
                  "core:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:name": [
                  {
                    "@value": "firestore.projects.databases.documents.list"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list/returns/resp/200",
                    "@type": [
                      "apiContract:Response",
                      "core:Response",
                      "apiContract:Message",
                      "doc:DomainElement"
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Successful response"
                      }
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list/returns/resp/200/payload/default",
                        "@type": [
                          "apiContract:Payload",
                          "core:Payload",
                          "doc:DomainElement"
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/declares/shape/Value/link-82420049",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-target": [
                              {
                                "@id": "#/declares/shape/Value"
                              }
                            ],
                            "doc:link-label": [
                              {
                                "@value": "Value"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list/returns/resp/200/payload/default": "[(29,2)-(34,16)]"
                          },
                          "virtual-element": {
                            "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list/returns/resp/200/payload/default": "true"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "core:description": "[(17,10)-(18,0)]",
                        "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list/returns/resp/200": "[(16,8)-(20,0)]",
                        "core:name": "[(16,8)-(16,13)]"
                      }
                    }
                  }
                ],
                "apiContract:operationId": [
                  {
                    "@value": "firestore.projects.databases.documents.list"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:operationId": "[(14,6)-(15,0)]",
                    "core:name": "[(14,6)-(15,0)]",
                    "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list": "[(13,4)-(20,0)]",
                    "apiContract:returns": "[(15,6)-(20,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D": "[(12,2)-(20,0)]"
              }
            }
          }
        ],
        "apiContract:tag": [
          {
            "@id": "#/web-api/tag/tag/projects",
            "@type": [
              "apiContract:Tag",
              "doc:DomainElement"
            ],
            "core:name": [
              {
                "@value": "projects"
              }
            ],
            "smaps": {
              "lexical": {
                "core:name": "[(10,4)-(11,0)]",
                "#/web-api/tag/tag/projects": "[(10,4)-(11,0)]"
              }
            }
          }
        ],
        "smaps": {
          "virtual-element": {
            "core:documentation": "true"
          },
          "lexical": {
            "apiContract:tag": "[(9,0)-(11,0)]",
            "apiContract:scheme": "[(2,0)-(4,0)]",
            "/web-api": "[(1,0)-(34,16)]",
            "apiContract:endpoint": "[(11,0)-(20,0)]"
          }
        }
      }
    ],
    "doc:root": [
      {
        "@value": true
      }
    ],
    "doc:processingData": [
      {
        "@id": "#/BaseUnitProcessingData",
        "@type": [
          "doc:APIContractProcessingData"
        ],
        "apiContract:modelVersion": [
          {
            "@value": "3.8.1"
          }
        ],
        "doc:transformed": [
          {
            "@value": true
          }
        ],
        "doc:sourceSpec": [
          {
            "@value": "OAS 2.0"
          }
        ]
      }
    ],
    "doc:declares": [
      {
        "@id": "#/declares/shape/MapValue",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/MapValue/property/property/values",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#values"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/MapValue/property/property/values/shape/values",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:additionalPropertiesSchema": [
                  {
                    "@id": "#/declares/shape/Value",
                    "@type": [
                      "shacl:NodeShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:closed": [
                      {
                        "@value": false
                      }
                    ],
                    "shacl:property": [
                      {
                        "@id": "#/declares/shape/Value/property/property/mapValue/recursiveProp",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:path": [
                          {
                            "@id": "http://a.ml/vocabularies/data#mapValue"
                          }
                        ],
                        "raml-shapes:range": [
                          {
                            "@id": "#/declares/shape/MapValue/recursive",
                            "@type": [
                              "raml-shapes:RecursiveShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "raml-shapes:fixPoint": [
                              {
                                "@id": "#/declares/shape/MapValue"
                              }
                            ],
                            "doc:recursive": [
                              {
                                "@value": true
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "MapValue"
                              }
                            ],
                            "smaps": {
                              "synthesized-field": {
                                "doc:recursive": "true"
                              },
                              "resolved-link": {
                                "#/declares/shape/MapValue/recursive": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/Value/property/property/mapValue/shape/mapValue"
                              },
                              "type-property-lexical-info": {
                                "#/declares/shape/MapValue/recursive": "[(28,4)-(28,8)]"
                              },
                              "lexical": {
                                "#/declares/shape/MapValue/recursive": "[(21,2)-(29,0)]"
                              },
                              "declared-element": {
                                "#/declares/shape/MapValue/recursive": ""
                              },
                              "resolved-link-target": {
                                "#/declares/shape/MapValue/recursive": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/MapValue"
                              }
                            }
                          }
                        ],
                        "shacl:minCount": [
                          {
                            "@value": 0
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "mapValue"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "shacl:minCount": "true"
                          },
                          "lexical": {
                            "#/declares/shape/Value/property/property/mapValue/recursiveProp": "[(31,6)-(34,0)]"
                          }
                        }
                      }
                    ],
                    "doc:recursive": [
                      {
                        "@value": true
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "Value"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "doc:recursive": "true",
                        "shacl:closed": "true"
                      },
                      "resolved-link": {
                        "#/declares/shape/Value": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list/returns/resp/200/payload/default/shape/default"
                      },
                      "type-property-lexical-info": {
                        "#/declares/shape/Value": "[(34,4)-(34,8)]"
                      },
                      "lexical": {
                        "shacl:name": "[(29,2)-(29,7)]",
                        "#/declares/shape/Value": "[(29,2)-(34,16)]"
                      },
                      "declared-element": {
                        "#/declares/shape/Value": ""
                      },
                      "resolved-link-target": {
                        "#/declares/shape/Value": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/Value"
                      }
                    }
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "values"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "shacl:closed": "true"
                  },
                  "lexical": {
                    "#/declares/shape/MapValue/property/property/values/shape/values": "[(24,6)-(28,0)]"
                  },
                  "type-property-lexical-info": {
                    "#/declares/shape/MapValue/property/property/values/shape/values": "[(27,8)-(27,12)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "values"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true"
              },
              "lexical": {
                "#/declares/shape/MapValue/property/property/values": "[(24,6)-(28,0)]"
              }
            }
          }
        ],
        "doc:recursive": [
          {
            "@value": true
          }
        ],
        "shacl:name": [
          {
            "@value": "MapValue"
          }
        ],
        "core:description": [
          {
            "@value": "An array value."
          }
        ],
        "smaps": {
          "synthesized-field": {
            "doc:recursive": "true",
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#/declares/shape/MapValue": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/Value/property/property/mapValue/shape/mapValue"
          },
          "type-property-lexical-info": {
            "#/declares/shape/MapValue": "[(28,4)-(28,8)]"
          },
          "lexical": {
            "core:description": "[(22,4)-(23,0)]",
            "#/declares/shape/MapValue": "[(21,2)-(29,0)]",
            "shacl:name": "[(21,2)-(21,10)]"
          },
          "declared-element": {
            "#/declares/shape/MapValue": ""
          },
          "resolved-link-target": {
            "#/declares/shape/MapValue": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/MapValue"
          }
        }
      },
      {
        "@id": "#/declares/shape/Value",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declares/shape/Value/property/property/mapValue/recursiveProp",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#mapValue"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declares/shape/MapValue/recursive",
                "@type": [
                  "raml-shapes:RecursiveShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "raml-shapes:fixPoint": [
                  {
                    "@id": "#/declares/shape/MapValue"
                  }
                ],
                "doc:recursive": [
                  {
                    "@value": true
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "MapValue"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:recursive": "true"
                  },
                  "resolved-link": {
                    "#/declares/shape/MapValue/recursive": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/Value/property/property/mapValue/shape/mapValue"
                  },
                  "type-property-lexical-info": {
                    "#/declares/shape/MapValue/recursive": "[(28,4)-(28,8)]"
                  },
                  "lexical": {
                    "#/declares/shape/MapValue/recursive": "[(21,2)-(29,0)]"
                  },
                  "declared-element": {
                    "#/declares/shape/MapValue/recursive": ""
                  },
                  "resolved-link-target": {
                    "#/declares/shape/MapValue/recursive": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/MapValue"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "mapValue"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "shacl:minCount": "true"
              },
              "lexical": {
                "#/declares/shape/Value/property/property/mapValue/recursiveProp": "[(31,6)-(34,0)]"
              }
            }
          }
        ],
        "doc:recursive": [
          {
            "@value": true
          }
        ],
        "shacl:name": [
          {
            "@value": "Value"
          }
        ],
        "smaps": {
          "synthesized-field": {
            "doc:recursive": "true",
            "shacl:closed": "true"
          },
          "resolved-link": {
            "#/declares/shape/Value": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/web-api/endpoint/%2Fv1%2F%7Bparent%7D%2F%7BcollectionId%7D/supportedOperation/get/firestore.projects.databases.documents.list/returns/resp/200/payload/default/shape/default"
          },
          "type-property-lexical-info": {
            "#/declares/shape/Value": "[(34,4)-(34,8)]"
          },
          "lexical": {
            "shacl:name": "[(29,2)-(29,7)]",
            "#/declares/shape/Value": "[(29,2)-(34,16)]"
          },
          "declared-element": {
            "#/declares/shape/Value": ""
          },
          "resolved-link-target": {
            "#/declares/shape/Value": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml#/declares/shape/Value"
          }
        }
      }
    ],
    "@context": {
      "@base": "file://amf-cli/shared/src/test/resources/resolution/recursive-additional-properties/recursive-additional-properties.yaml",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
