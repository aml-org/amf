{
  "@graph": [
    {
      "@id": "#4",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.10.0",
      "doc:transformed": true,
      "doc:sourceSpec": "OAS 2.0"
    },
    {
      "@id": "#5",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "Test",
      "core:version": "1.2",
      "apiContract:endpoint": [
        {
          "@id": "#6"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:endpoint": "[(5,0)-(11,54)]",
          "core:name": "[(3,2)-(4,0)]",
          "#5": "[(1,0)-(11,54)]",
          "core:version": "[(4,2)-(5,0)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/pets",
      "apiContract:supportedOperation": [
        {
          "@id": "#7"
        }
      ],
      "smaps": {
        "lexical": {
          "#6": "[(6,2)-(11,54)]"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:description": "A description",
      "apiContract:returns": [
        {
          "@id": "#8"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(9,6)-(11,54)]",
          "#7": "[(7,4)-(11,54)]",
          "core:description": "[(8,6)-(9,0)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "403",
      "core:name": "403",
      "core:description": "a description",
      "apiContract:payload": [
        {
          "@id": "#9"
        }
      ],
      "smaps": {
        "lexical": {
          "core:description": "[(22,4)-(23,0)]",
          "#8": "[(10,8)-(11,54)]",
          "core:name": "[(10,8)-(10,13)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "raml-shapes:schema": {
        "@id": "#10"
      },
      "smaps": {
        "virtual-element": {
          "#9": "true"
        },
        "lexical": {
          "raml-shapes:schema": "[(23,4)-(27,28)]",
          "#9": "[(9,2)-(20,0)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:name": "default",
      "core:description": "The response schema",
      "shacl:and": [
        {
          "@id": "#11"
        },
        {
          "@id": "#14"
        }
      ],
      "smaps": {
        "lexical": {
          "shacl:and": "[(11,4)-(20,0)]",
          "#10": "[(9,2)-(20,0)]",
          "core:description": "[(10,4)-(11,0)]"
        },
        "auto-generated-name": {
          "#10": ""
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#12"
        }
      ],
      "shacl:name": "NestedResponseSchema",
      "core:description": "A nested response schema",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "core:description": "[(3,4)-(4,0)]",
          "#11": "[(2,2)-(9,0)]"
        }
      }
    },
    {
      "@id": "#14",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#15"
        }
      ],
      "shacl:name": "item1",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#14": "[(13,8)-(20,0)]"
        }
      }
    },
    {
      "@id": "#12",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#message"
        }
      ],
      "raml-shapes:range": {
        "@id": "#13"
      },
      "shacl:minCount": 0,
      "shacl:name": "message",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#12": "[(5,6)-(9,0)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#status"
        }
      ],
      "raml-shapes:range": {
        "@id": "#16"
      },
      "shacl:minCount": 0,
      "shacl:name": "status",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#15": "[(14,10)-(20,0)]"
        }
      }
    },
    {
      "@id": "#13",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "message",
      "core:description": "HTTP message",
      "smaps": {
        "lexical": {
          "core:description": "[(6,8)-(7,0)]",
          "#13": "[(5,6)-(9,0)]",
          "shacl:datatype": "[(7,8)-(9,0)]"
        },
        "type-property-lexical-info": {
          "#13": "[(7,8)-(7,12)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:pattern": "^[1-5][0-9][0-9]$",
      "shacl:name": "status",
      "core:description": "HTTP Response code",
      "apiContract:examples": [
        {
          "@id": "#17"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:examples": "[(18,12)-(20,0)]",
          "shacl:pattern": "[(17,12)-(18,0)]",
          "#16": "[(14,10)-(20,0)]",
          "shacl:datatype": "[(16,12)-(17,0)]",
          "core:description": "[(15,12)-(16,0)]"
        },
        "type-property-lexical-info": {
          "#16": "[(16,12)-(16,16)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#18"
      },
      "doc:raw": "400",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#17": "[(18,21)-(18,26)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "400",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "scalar_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#18": "[(18,21)-(18,26)]"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#1"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#5"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#4"
      }
    },
    {
      "@id": "#1",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#3"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#2"
      }
    },
    {
      "@id": "#3",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "definitions:\n  NestedResponseSchema:\n    description: A nested response schema\n    properties:\n      message:\n        description: 'HTTP message'\n        type: string\n\n  ResponseSchema:\n    description: The response schema\n    allOf:\n      - \"$ref\": \"#/definitions/NestedResponseSchema\"\n      - properties:\n          status:\n            description: 'HTTP Response code'\n            type: string\n            pattern: '^[1-5][0-9][0-9]$'\n            example: '400'\n\nresponses:\n  403Response:\n    description: a description\n    schema:\n      $ref: '#/definitions/ResponseSchema'\n      example:\n        status: '400'\n        message: 'A message'",
      "core:mediaType": "application/yaml",
      "smaps": {
        "lexical": {
          "#3": "[(1,0)-(27,28)]"
        }
      }
    },
    {
      "@id": "#2",
      "@type": [
        "doc:BaseUnitProcessingData"
      ],
      "doc:transformed": false
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
