{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "/web-api",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "test",
      "apiContract:endpoint": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations"
        },
        {
          "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D"
        }
      ],
      "smaps": {
        "lexical": {
          "core:name": "[(3,0)-(6,0)]",
          "/web-api": "[(3,0)-(37,3)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/organizations",
      "apiContract:supportedOperation": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put"
        },
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(9,0)-(9,14)]",
          "#/web-api/endpoint/%2Forganizations": "[(9,0)-(37,3)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/organizations/{organization_id}",
      "apiContract:supportedOperation": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get"
        }
      ],
      "smaps": {
        "parent-end-point": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml#/web-api/endpoint/%2Forganizations"
        },
        "lexical": {
          "apiContract:path": "[(24,2)-(24,20)]",
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D": "[(24,2)-(37,3)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "put",
      "apiContract:expects": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request"
        }
      ],
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put": "[(10,2)-(15,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "Get organizations",
      "apiContract:returns": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(17,4)-(24,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get": "[(15,2)-(24,0)]",
          "core:name": "[(16,4)-(17,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "core:name": "Get organizations by organization ID",
      "apiContract:expects": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/request"
        }
      ],
      "apiContract:returns": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(31,6)-(37,3)]",
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get": "[(29,4)-(37,3)]",
          "core:name": "[(30,6)-(31,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(11,4)-(15,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request": "[(11,9)-(15,0)]"
        },
        "virtual-element": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request": "true"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(19,8)-(24,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200": "[(18,6)-(24,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/request",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:uriParameter": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/parameter/parameter/path/organization_id"
        }
      ]
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(33,10)-(37,3)]",
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200": "[(32,8)-(37,3)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson": "[(12,6)-(15,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson": "[(20,10)-(24,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/parameter/parameter/path/organization_id",
      "@type": [
        "apiContract:Parameter",
        "core:Parameter",
        "doc:DomainElement"
      ],
      "core:name": "organization_id",
      "apiContract:paramName": "organization_id",
      "core:description": "The organization's specific ID",
      "apiContract:required": true,
      "apiContract:binding": "path",
      "raml-shapes:schema": {
        "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/parameter/parameter/path/organization_id/scalar/schema"
      },
      "smaps": {
        "synthesized-field": {
          "apiContract:binding": "true"
        },
        "lexical": {
          "raml-shapes:schema": "[(26,6)-(29,0)]",
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/parameter/parameter/path/organization_id": "[(26,6)-(29,0)]",
          "core:description": "[(28,8)-(29,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#/declares/shape/Organization"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson": "[(34,12)-(37,3)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema",
      "@type": [
        "raml-shapes:ArrayShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "#/declares/shape/Organization"
      },
      "shacl:name": "schema",
      "apiContract:examples": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value"
        }
      ],
      "smaps": {
        "auto-generated-name": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema": ""
        },
        "lexical": {
          "apiContract:examples": "[(14,8)-(15,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema": "[(12,6)-(15,0)]"
        },
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema": "[(13,8)-(13,12)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema",
      "@type": [
        "raml-shapes:ArrayShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "#/declares/shape/Organization"
      },
      "shacl:name": "schema",
      "apiContract:examples": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value"
        }
      ],
      "smaps": {
        "auto-generated-name": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema": ""
        },
        "lexical": {
          "apiContract:examples": "[(22,12)-(24,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema": "[(20,10)-(24,0)]"
        },
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema": "[(21,12)-(21,16)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/parameter/parameter/path/organization_id/scalar/schema",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "shacl:name": "schema",
      "core:description": "The organization's specific ID",
      "smaps": {
        "type-property-lexical-info": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/parameter/parameter/path/organization_id/scalar/schema": "[(27,8)-(27,12)]"
        },
        "lexical": {
          "core:description": "[(28,8)-(29,0)]",
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/parameter/parameter/path/organization_id/scalar/schema": "[(26,6)-(29,0)]",
          "shacl:datatype": "[(27,8)-(28,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/Organization",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/references/0/shape/type/property/property/alternate_id"
        },
        {
          "@id": "#/references/0/shape/type/property/property/category"
        },
        {
          "@id": "#/references/0/shape/type/property/property/created_at"
        }
      ],
      "shacl:name": "Organization",
      "apiContract:examples": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value"
        }
      ],
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link-target": {
          "#/declares/shape/Organization": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml#/references/0/shape/type"
        },
        "type-property-lexical-info": {
          "#/declares/shape/Organization": "[(2,0)-(2,4)]"
        },
        "lexical": {
          "#/declares/shape/Organization": "[(2,0)-(20,0)]"
        },
        "resolved-link": {
          "#/declares/shape/Organization": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml#/declares/shape/Organization"
        },
        "declared-element": {
          "#/declares/shape/Organization": ""
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "value",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1"
      },
      "doc:raw": "-\n  category:\n    id: 39691\n    name: Religious and Spiritual\n  created_at: 2013-01-02T22:21:34Z\n-\n  category:\n    id: 61111\n    name: Service\n  created_at: 2016-02-01T16:37:02Z",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value": "[(2,0)-(15,3)]"
        },
        "tracked-element": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "value",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1"
      },
      "doc:raw": "-\n  category:\n    id: 39691\n    name: Religious and Spiritual\n  created_at: 2013-01-02T22:21:34Z\n-\n  category:\n    id: 61111\n    name: Service\n  created_at: 2016-02-01T16:37:02Z",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value": "[(2,0)-(15,3)]"
        },
        "tracked-element": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/alternate_id",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#alternate_id"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F"
      },
      "shacl:minCount": 0,
      "shacl:name": "alternate_id",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(4,16)-(7,0)]",
          "#/references/0/shape/type/property/property/alternate_id": "[(4,2)-(7,0)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/category",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#category"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/references/0/shape/type/property/property/category/shape/category"
      },
      "shacl:minCount": 1,
      "shacl:name": "category",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(7,11)-(17,0)]",
          "#/references/0/shape/type/property/property/category": "[(7,2)-(17,0)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/created_at",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#created_at"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/references/0/shape/type/property/property/created_at/scalar/created_at"
      },
      "shacl:minCount": 1,
      "shacl:name": "created_at",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(17,13)-(20,0)]",
          "#/references/0/shape/type/property/property/created_at": "[(17,2)-(20,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value",
      "@type": [
        "apiContract:Example",
        "doc:DomainElement"
      ],
      "core:name": "value",
      "doc:strict": true,
      "doc:structuredValue": {
        "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1"
      },
      "doc:raw": "alternate_id: 1\ncategory:\n  id: 39691\n  name: Religious and Spiritual\ncreated_at: 2013-01-02T22:21:34Z",
      "smaps": {
        "synthesized-field": {
          "doc:raw": "true",
          "doc:strict": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value": "[(2,0)-(9,0)]"
        },
        "tracked-element": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1",
      "@type": [
        "data:Array",
        "rdf:Seq",
        "data:Node",
        "doc:DomainElement"
      ],
      "rdfs:member": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2"
        },
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7"
        }
      ],
      "core:name": "array_1",
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1": "[(3,0)-(15,3)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1",
      "@type": [
        "data:Array",
        "rdf:Seq",
        "data:Node",
        "doc:DomainElement"
      ],
      "rdfs:member": [
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2"
        },
        {
          "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7"
        }
      ],
      "core:name": "array_1",
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1": "[(3,0)-(15,3)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F",
      "@type": [
        "raml-shapes:UnionShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F/inherits/union/default-union/anyOf/scalar/default-scalar"
        },
        {
          "@id": "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F/inherits/union/default-union/anyOf/nil/default-nil"
        }
      ],
      "shacl:name": "alternate_id?",
      "core:description": "The alternate ID of the organization",
      "smaps": {
        "inherited-shapes": {
          "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F/inherits/union/default-union"
        },
        "lexical": {
          "core:description": "[(6,4)-(7,0)]",
          "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F": "[(4,16)-(7,0)]"
        },
        "type-property-lexical-info": {
          "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F": "[(5,4)-(5,8)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/category/shape/category",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/id"
        },
        {
          "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/name"
        }
      ],
      "shacl:name": "category",
      "core:description": "Contains the ID and name of the category the organization is in",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "core:description": "[(8,4)-(9,0)]",
          "#/references/0/shape/type/property/property/category/shape/category": "[(7,2)-(17,0)]"
        },
        "type-property-lexical-info": {
          "#/references/0/shape/type/property/property/category/shape/category": "[(9,4)-(9,8)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/created_at/scalar/created_at",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#dateTime"
        }
      ],
      "shacl:name": "created_at",
      "core:description": "The date of creation of the organization",
      "smaps": {
        "type-property-lexical-info": {
          "#/references/0/shape/type/property/property/created_at/scalar/created_at": "[(18,4)-(18,8)]"
        },
        "lexical": {
          "core:description": "[(19,4)-(20,0)]",
          "#/references/0/shape/type/property/property/created_at/scalar/created_at": "[(17,2)-(20,0)]",
          "shacl:datatype": "[(18,4)-(19,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:alternate_id": {
        "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/alternate_id"
      },
      "data:category": {
        "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category"
      },
      "data:created_at": {
        "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/created_at"
      },
      "core:name": "object_1",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:created_at": "[(7,4)-(9,0)]",
          "data:alternate_id": "[(3,4)-(4,0)]",
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1": "[(3,0)-(9,0)]",
          "data:category": "[(4,4)-(7,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:category": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category"
      },
      "data:created_at": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/created_at"
      },
      "core:name": "object_2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:created_at": "[(8,4)-(10,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2": "[(5,0)-(10,0)]",
          "data:category": "[(5,4)-(8,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:category": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category"
      },
      "data:created_at": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/created_at"
      },
      "core:name": "object_7",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:created_at": "[(14,4)-(15,3)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7": "[(11,0)-(15,3)]",
          "data:category": "[(11,4)-(14,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:category": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category"
      },
      "data:created_at": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/created_at"
      },
      "core:name": "object_2",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:created_at": "[(8,4)-(10,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2": "[(5,0)-(10,0)]",
          "data:category": "[(5,4)-(8,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:category": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category"
      },
      "data:created_at": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/created_at"
      },
      "core:name": "object_7",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:created_at": "[(14,4)-(15,3)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7": "[(11,0)-(15,3)]",
          "data:category": "[(11,4)-(14,0)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F/inherits/union/default-union/anyOf/scalar/default-scalar",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "smaps": {
        "lexical": {
          "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F/inherits/union/default-union/anyOf/scalar/default-scalar": "[(5,10)-(5,16)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F/inherits/union/default-union/anyOf/nil/default-nil",
      "@type": [
        "raml-shapes:NilShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "smaps": {
        "lexical": {
          "#/references/0/shape/type/property/property/alternate_id/union/alternate_id%3F/inherits/union/default-union/anyOf/nil/default-nil": "[(5,19)-(5,22)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/id",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#id"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/id/scalar/id"
      },
      "shacl:minCount": 1,
      "shacl:name": "id",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(11,9)-(14,0)]",
          "#/references/0/shape/type/property/property/category/shape/category/property/property/id": "[(11,6)-(14,0)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/name",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#name"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/name/scalar/name"
      },
      "shacl:minCount": 1,
      "shacl:name": "name",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(14,11)-(17,0)]",
          "#/references/0/shape/type/property/property/category/shape/category/property/property/name": "[(14,6)-(17,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/alternate_id",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "1",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "alternate_id",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/alternate_id": "[(3,18)-(3,19)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:id": {
        "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category/id"
      },
      "data:name": {
        "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category/name"
      },
      "core:name": "category",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:name": "[(6,6)-(7,0)]",
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category": "[(5,0)-(7,0)]",
          "data:id": "[(5,6)-(6,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/created_at",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "2013-01-02T22:21:34Z",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#dateTime"
        }
      ],
      "core:name": "created_at",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/created_at": "[(7,16)-(7,36)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:id": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/id"
      },
      "data:name": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/name"
      },
      "core:name": "category",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:name": "[(7,6)-(8,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category": "[(6,0)-(8,0)]",
          "data:id": "[(6,6)-(7,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/created_at",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "2013-01-02T22:21:34Z",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#dateTime"
        }
      ],
      "core:name": "created_at",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/created_at": "[(8,16)-(8,36)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:id": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/id"
      },
      "data:name": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/name"
      },
      "core:name": "category",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:name": "[(13,6)-(14,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category": "[(12,0)-(14,0)]",
          "data:id": "[(12,6)-(13,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/created_at",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "2016-02-01T16:37:02Z",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#dateTime"
        }
      ],
      "core:name": "created_at",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/created_at": "[(14,16)-(14,36)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:id": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/id"
      },
      "data:name": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/name"
      },
      "core:name": "category",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:name": "[(7,6)-(8,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category": "[(6,0)-(8,0)]",
          "data:id": "[(6,6)-(7,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/created_at",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "2013-01-02T22:21:34Z",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#dateTime"
        }
      ],
      "core:name": "created_at",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/created_at": "[(8,16)-(8,36)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category",
      "@type": [
        "data:Object",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:id": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/id"
      },
      "data:name": {
        "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/name"
      },
      "core:name": "category",
      "smaps": {
        "synthesized-field": {
          "core:name": "true"
        },
        "lexical": {
          "data:name": "[(13,6)-(14,0)]",
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category": "[(12,0)-(14,0)]",
          "data:id": "[(12,6)-(13,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/created_at",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "2016-02-01T16:37:02Z",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#dateTime"
        }
      ],
      "core:name": "created_at",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/created_at": "[(14,16)-(14,36)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/id/scalar/id",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://a.ml/vocabularies/shapes#number"
        }
      ],
      "shacl:name": "id",
      "core:description": "ID of the category",
      "smaps": {
        "type-property-lexical-info": {
          "#/references/0/shape/type/property/property/category/shape/category/property/property/id/scalar/id": "[(12,8)-(12,12)]"
        },
        "lexical": {
          "core:description": "[(13,8)-(14,0)]",
          "#/references/0/shape/type/property/property/category/shape/category/property/property/id/scalar/id": "[(11,6)-(14,0)]",
          "shacl:datatype": "[(12,8)-(13,0)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type/property/property/category/shape/category/property/property/name/scalar/name",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "name",
      "core:description": "The name of the category",
      "smaps": {
        "type-property-lexical-info": {
          "#/references/0/shape/type/property/property/category/shape/category/property/property/name/scalar/name": "[(15,8)-(15,12)]"
        },
        "lexical": {
          "core:description": "[(16,8)-(17,0)]",
          "#/references/0/shape/type/property/property/category/shape/category/property/property/name/scalar/name": "[(14,6)-(17,0)]",
          "shacl:datatype": "[(15,8)-(16,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category/id",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "39691",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "id",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category/id": "[(5,10)-(5,15)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category/name",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Religious and Spiritual",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations%2F%7Borganization_id%7D/supportedOperation/get/returns/resp/200/payload/application%2Fjson/shape/schema/examples/example/value/object_1/category/name": "[(6,12)-(6,35)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/id",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "39691",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "id",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/id": "[(6,10)-(6,15)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/name",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Religious and Spiritual",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/name": "[(7,12)-(7,35)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/id",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "61111",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "id",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/id": "[(12,10)-(12,15)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/name",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Service",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/put/expects/request/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/name": "[(13,12)-(13,19)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/id",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "39691",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "id",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/id": "[(6,10)-(6,15)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/name",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Religious and Spiritual",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_2/category/name": "[(7,12)-(7,35)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/id",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "61111",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#integer"
        }
      ],
      "core:name": "id",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/id": "[(12,10)-(12,15)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/name",
      "@type": [
        "data:Scalar",
        "data:Node",
        "doc:DomainElement"
      ],
      "data:value": "Service",
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "core:name": "name",
      "smaps": {
        "synthesized-field": {
          "core:name": "true",
          "shacl:datatype": "true"
        },
        "lexical": {
          "#/web-api/endpoint/%2Forganizations/supportedOperation/get/returns/resp/200/payload/application%2Fjson/array/schema/examples/example/value/array_1/member/object_7/category/name": "[(13,12)-(13,19)]"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#/references/0"
        },
        {
          "@id": "#/references/1"
        },
        {
          "@id": "#/references/2"
        }
      ],
      "doc:declares": [
        {
          "@id": "#/declares/shape/Organization"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/web-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/references/0",
      "@type": [
        "raml-shapes:DataTypeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/0/shape/type"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/0/BaseUnitProcessingData"
      },
      "smaps": {
        "lexical": {
          "#/references/0": "[(1,0)-(20,0)]"
        }
      }
    },
    {
      "@id": "#/references/1",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/1/external"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/1/BaseUnitProcessingData"
      },
      "smaps": {
        "lexical": {
          "#/references/1": "[(1,0)-(15,3)]"
        }
      }
    },
    {
      "@id": "#/references/2",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#/references/2/external"
      },
      "doc:root": false,
      "doc:processingData": {
        "@id": "#/references/2/BaseUnitProcessingData"
      },
      "smaps": {
        "lexical": {
          "#/references/2": "[(1,0)-(9,0)]"
        }
      }
    },
    {
      "@id": "#/references/0/shape/type",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/references/0/shape/type/property/property/alternate_id"
        },
        {
          "@id": "#/references/0/shape/type/property/property/category"
        },
        {
          "@id": "#/references/0/shape/type/property/property/created_at"
        }
      ],
      "shacl:name": "type",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#/references/0/shape/type": "[(2,0)-(20,0)]"
        },
        "type-property-lexical-info": {
          "#/references/0/shape/type": "[(2,0)-(2,4)]"
        }
      }
    },
    {
      "@id": "#/references/0/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#/references/1/external",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "#%RAML 1.0 NamedExample\nvalue:\n  -\n   \n    category: \n      id: 39691\n      name: Religious and Spiritual\n    created_at: 2013-01-02T22:21:34Z\n    \n  -\n    category: \n      id: 61111   \n      name: Service\n    created_at: 2016-02-01T16:37:02Z\n   ",
      "core:mediaType": "application/yaml"
    },
    {
      "@id": "#/references/1/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "#/references/2/external",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "#%RAML 1.0 NamedExample\nvalue:\n    alternate_id: 1\n    category: \n      id: 39691\n      name: Religious and Spiritual\n    created_at: 2013-01-02T22:21:34Z\n   \n",
      "core:mediaType": "application/yaml"
    },
    {
      "@id": "#/references/2/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:sourceSpec": "RAML 1.0"
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/validations/examples/inline-named-examples/api.raml",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  }
}
