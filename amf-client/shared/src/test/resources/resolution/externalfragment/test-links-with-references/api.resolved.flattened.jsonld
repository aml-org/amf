{
  "@graph": [
    {
      "@id": "#14",
      "@type": [
        "apiContract:WebAPI",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "test",
      "apiContract:endpoint": [
        {
          "@id": "#15"
        }
      ],
      "smaps": {
        "source-vendor": {
          "#14": "RAML 1.0"
        },
        "lexical": {
          "core:name": "[(2,0)-(3,0)]",
          "#14": "[(2,0)-(18,23)]"
        }
      }
    },
    {
      "@id": "#15",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/articles",
      "apiContract:supportedOperation": [
        {
          "@id": "#16"
        },
        {
          "@id": "#19"
        }
      ],
      "smaps": {
        "lexical": {
          "#15": "[(6,0)-(18,23)]"
        }
      }
    },
    {
      "@id": "#16",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "get",
      "apiContract:returns": [
        {
          "@id": "#17"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(8,4)-(13,0)]",
          "#16": "[(7,2)-(13,0)]"
        }
      }
    },
    {
      "@id": "#19",
      "@type": [
        "apiContract:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:returns": [
        {
          "@id": "#20"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(14,4)-(18,23)]",
          "#19": "[(13,2)-(18,23)]"
        }
      }
    },
    {
      "@id": "#17",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#18"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(10,8)-(13,0)]",
          "#17": "[(9,6)-(13,0)]"
        }
      }
    },
    {
      "@id": "#20",
      "@type": [
        "apiContract:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:statusCode": "200",
      "core:name": "200",
      "apiContract:payload": [
        {
          "@id": "#21"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(16,8)-(18,23)]",
          "#20": "[(15,6)-(18,23)]"
        }
      }
    },
    {
      "@id": "#18",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#3"
      },
      "smaps": {
        "lexical": {
          "#18": "[(11,10)-(13,0)]"
        }
      }
    },
    {
      "@id": "#21",
      "@type": [
        "apiContract:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#3"
      },
      "smaps": {
        "lexical": {
          "#21": "[(17,10)-(18,23)]"
        }
      }
    },
    {
      "@id": "#3",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#4"
        },
        {
          "@id": "#6"
        },
        {
          "@id": "#8"
        }
      ],
      "shacl:name": "error",
      "doc:reference-id": [
        {
          "@id": "#2"
        }
      ],
      "smaps": {
        "resolved-link-target": {
          "#3": "amf://id#3"
        },
        "declared-element": {
          "#3": ""
        },
        "lexical": {
          "shacl:name": "[(4,2)-(4,7)]",
          "#3": "[(4,2)-(28,1)]"
        },
        "type-property-lexical-info": {
          "#3": "[(3,2)-(3,8)]"
        },
        "resolved-link": {
          "#3": "amf://id#13"
        },
        "parsed-json-schema": {
          "#3": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"details\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"message\"\n      ]\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"message\",\n    \"details\"\n  ]\n}"
        }
      }
    },
    {
      "@id": "#4",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#status"
        }
      ],
      "raml-shapes:range": {
        "@id": "#5"
      },
      "shacl:minCount": 1,
      "shacl:name": "status",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(24,4)-(24,12)]",
          "#4": "[(5,4)-(7,5)]"
        }
      }
    },
    {
      "@id": "#6",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#message"
        }
      ],
      "raml-shapes:range": {
        "@id": "#7"
      },
      "shacl:minCount": 1,
      "shacl:name": "message",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(25,4)-(25,13)]",
          "#6": "[(8,4)-(10,5)]"
        }
      }
    },
    {
      "@id": "#8",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#details"
        }
      ],
      "raml-shapes:range": {
        "@id": "#9"
      },
      "shacl:minCount": 1,
      "shacl:name": "details",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(26,4)-(26,13)]",
          "#8": "[(11,4)-(21,5)]"
        }
      }
    },
    {
      "@id": "#5",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "status",
      "smaps": {
        "type-property-lexical-info": {
          "#5": "[(6,6)-(6,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(6,6)-(6,22)]",
          "#5": "[(5,4)-(7,5)]"
        }
      }
    },
    {
      "@id": "#7",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "message",
      "smaps": {
        "type-property-lexical-info": {
          "#7": "[(9,6)-(9,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(9,6)-(9,22)]",
          "#7": "[(8,4)-(10,5)]"
        }
      }
    },
    {
      "@id": "#9",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#10"
        }
      ],
      "shacl:name": "details",
      "smaps": {
        "type-property-lexical-info": {
          "#9": "[(12,6)-(12,12)]"
        },
        "lexical": {
          "#9": "[(11,4)-(21,5)]"
        }
      }
    },
    {
      "@id": "#10",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#message"
        }
      ],
      "raml-shapes:range": {
        "@id": "#11"
      },
      "shacl:minCount": 1,
      "shacl:name": "message",
      "smaps": {
        "lexical": {
          "shacl:minCount": "[(19,8)-(19,17)]",
          "#10": "[(14,8)-(16,9)]"
        }
      }
    },
    {
      "@id": "#11",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "message",
      "smaps": {
        "type-property-lexical-info": {
          "#11": "[(15,10)-(15,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(15,10)-(15,26)]",
          "#11": "[(14,8)-(16,9)]"
        }
      }
    },
    {
      "@id": "",
      "doc:references": [
        {
          "@id": "#1"
        }
      ],
      "doc:declares": [
        {
          "@id": "#3"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#14"
      },
      "doc:version": "2.1.2",
      "doc:root": true
    },
    {
      "@id": "#1",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "#2"
      },
      "doc:version": "2.1.2",
      "doc:root": false
    },
    {
      "@id": "#2",
      "@type": [
        "doc:ExternalDomainElement",
        "doc:DomainElement"
      ],
      "doc:raw": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"details\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"message\"\n      ]\n    }\n  },\n  \"required\": [\n    \"status\",\n    \"message\",\n    \"details\"\n  ]\n}",
      "core:mediaType": "application/json"
    }
  ],
  "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
