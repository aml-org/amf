{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "ASYNC 2.0"
    },
    {
      "@id": "/async-api",
      "@type": [
        "apiContract:AsyncAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "components",
      "core:version": "1.0.0",
      "apiContract:endpoint": [
        {
          "@id": "#/async-api/endpoint/subscribe%2Fchannel"
        },
        {
          "@id": "#/async-api/endpoint/publish%2Fchannel"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:endpoint": "[(22,0)-(31,49)]",
          "core:name": "[(3,2)-(4,0)]",
          "/async-api": "[(1,0)-(31,49)]",
          "core:version": "[(4,2)-(6,0)]"
        }
      }
    },
    {
      "@id": "#/async-api/endpoint/subscribe%2Fchannel",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "subscribe/channel",
      "apiContract:supportedOperation": [
        {
          "@id": "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:supportedOperation": "[(24,0)-(28,0)]",
          "#/async-api/endpoint/subscribe%2Fchannel": "[(23,2)-(28,0)]"
        }
      }
    },
    {
      "@id": "#/async-api/endpoint/publish%2Fchannel",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "publish/channel",
      "apiContract:supportedOperation": [
        {
          "@id": "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:supportedOperation": "[(29,0)-(31,49)]",
          "#/async-api/endpoint/publish%2Fchannel": "[(28,2)-(31,49)]"
        }
      }
    },
    {
      "@id": "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "subscribe",
      "apiContract:returns": [
        {
          "@id": "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:returns": "[(25,6)-(28,0)]",
          "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe": "[(24,4)-(28,0)]"
        }
      }
    },
    {
      "@id": "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "publish",
      "apiContract:expects": [
        {
          "@id": "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:expects": "[(30,6)-(31,49)]",
          "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish": "[(29,4)-(31,49)]"
        }
      }
    },
    {
      "@id": "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response",
      "@type": [
        "apiContract:Response",
        "core:Response",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "someMessage",
      "apiContract:payload": [
        {
          "@id": "#/declares/msg/someMessage/payload/application%2Fjson"
        }
      ],
      "core:displayName": "lightMeasured",
      "core:title": "Light measured",
      "apiContract:headerSchema": {
        "@id": "#/declares/msg/someMessage/shape/schema"
      },
      "smaps": {
        "virtual-element": {
          "apiContract:payload": "true"
        },
        "resolved-link": {
          "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response"
        },
        "lexical": {
          "apiContract:headerSchema": "[(10,6)-(15,0)]",
          "core:displayName": "[(19,6)-(20,0)]",
          "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": "[(9,4)-(22,0)]",
          "core:name": "[(9,4)-(9,15)]",
          "core:title": "[(20,6)-(22,0)]"
        },
        "declared-element": {
          "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": ""
        },
        "resolved-link-target": {
          "#/async-api/endpoint/subscribe%2Fchannel/supportedOperation/subscribe/returns/resp/default-response": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/declares/msg/someMessage"
        }
      }
    },
    {
      "@id": "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "someMessage",
      "apiContract:payload": [
        {
          "@id": "#/declares/msg/someMessage/payload/application%2Fjson"
        }
      ],
      "core:displayName": "lightMeasured",
      "core:title": "Light measured",
      "apiContract:headerSchema": {
        "@id": "#/declares/msg/someMessage/shape/schema"
      },
      "smaps": {
        "virtual-element": {
          "apiContract:payload": "true"
        },
        "resolved-link": {
          "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request"
        },
        "lexical": {
          "apiContract:headerSchema": "[(10,6)-(15,0)]",
          "core:displayName": "[(19,6)-(20,0)]",
          "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": "[(9,4)-(22,0)]",
          "core:name": "[(9,4)-(9,15)]",
          "core:title": "[(20,6)-(22,0)]"
        },
        "declared-element": {
          "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": ""
        },
        "resolved-link-target": {
          "#/async-api/endpoint/publish%2Fchannel/supportedOperation/publish/expects/request": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml#/declares/msg/someMessage"
        }
      }
    },
    {
      "@id": "#/declares/msg/someMessage/payload/application%2Fjson",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "apiContract:schemaMediaType": "application/schema+json;version=draft-07",
      "raml-shapes:schema": {
        "@id": "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema"
      },
      "smaps": {
        "lexical": {
          "raml-shapes:schema": "[(15,6)-(17,0)]",
          "core:mediaType": "[(18,6)-(19,0)]",
          "#/declares/msg/someMessage/payload/application%2Fjson": "[(10,0)-(22,0)]",
          "apiContract:schemaMediaType": "[(17,6)-(18,0)]"
        }
      }
    },
    {
      "@id": "#/declares/msg/someMessage/shape/schema",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/declares/msg/someMessage/shape/schema/property/property/a"
        }
      ],
      "shacl:name": "schema",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "lexical": {
          "#/declares/msg/someMessage/shape/schema": "[(10,6)-(15,0)]"
        },
        "type-property-lexical-info": {
          "#/declares/msg/someMessage/shape/schema": "[(11,8)-(11,12)]"
        }
      }
    },
    {
      "@id": "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "schema",
      "smaps": {
        "type-property-lexical-info": {
          "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(16,8)-(16,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(16,8)-(17,0)]",
          "#/declares/msg/someMessage/payload/application%2Fjson/scalar/schema": "[(15,6)-(17,0)]"
        }
      }
    },
    {
      "@id": "#/declares/msg/someMessage/shape/schema/property/property/a",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#a"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a"
      },
      "shacl:minCount": 0,
      "shacl:name": "a",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true"
        },
        "lexical": {
          "#/declares/msg/someMessage/shape/schema/property/property/a": "[(13,10)-(15,0)]"
        }
      }
    },
    {
      "@id": "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "a",
      "smaps": {
        "type-property-lexical-info": {
          "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(14,12)-(14,16)]"
        },
        "lexical": {
          "shacl:datatype": "[(14,12)-(15,0)]",
          "#/declares/msg/someMessage/shape/schema/property/property/a/scalar/a": "[(13,10)-(15,0)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#/declares/msg/someMessage"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/async-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    },
    {
      "@id": "#/declares/msg/someMessage",
      "@type": [
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "core:name": "someMessage",
      "apiContract:payload": [
        {
          "@id": "#/declares/msg/someMessage/payload/application%2Fjson"
        }
      ],
      "core:displayName": "lightMeasured",
      "core:title": "Light measured",
      "apiContract:headerSchema": {
        "@id": "#/declares/msg/someMessage/shape/schema"
      },
      "smaps": {
        "virtual-element": {
          "apiContract:payload": "true"
        },
        "lexical": {
          "apiContract:headerSchema": "[(10,6)-(15,0)]",
          "core:displayName": "[(19,6)-(20,0)]",
          "#/declares/msg/someMessage": "[(9,4)-(22,0)]",
          "core:name": "[(9,4)-(9,15)]",
          "core:title": "[(20,6)-(22,0)]"
        },
        "declared-element": {
          "#/declares/msg/someMessage": ""
        }
      }
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/resolution/async20/message-references.yaml",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
