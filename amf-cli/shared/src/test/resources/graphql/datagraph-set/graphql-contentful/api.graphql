"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  title(locale: String): String
  description(locale: String): String
  contentType(locale: String): String
  fileName(locale: String): String
  size(locale: String): Int
  url(transform: ImageTransformOptions, locale: String): String
  width(locale: String): Int
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
}

type AssetCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Asset]!
}

input AssetFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  description_exists: Boolean
  description: String
  description_not: String
  description_in: [String]
  description_not_in: [String]
  description_contains: String
  description_not_contains: String
  url_exists: Boolean
  url: String
  url_not: String
  url_in: [String]
  url_not_in: [String]
  url_contains: String
  url_not_contains: String
  size_exists: Boolean
  size: Int
  size_not: Int
  size_in: [Int]
  size_not_in: [Int]
  size_gt: Int
  size_gte: Int
  size_lt: Int
  size_lte: Int
  contentType_exists: Boolean
  contentType: String
  contentType_not: String
  contentType_in: [String]
  contentType_not_in: [String]
  contentType_contains: String
  contentType_not_contains: String
  fileName_exists: Boolean
  fileName: String
  fileName_not: String
  fileName_in: [String]
  fileName_not_in: [String]
  fileName_contains: String
  fileName_not_contains: String
  width_exists: Boolean
  width: Int
  width_not: Int
  width_in: [Int]
  width_not_in: [Int]
  width_gt: Int
  width_gte: Int
  width_lt: Int
  width_lte: Int
  height_exists: Boolean
  height: Int
  height_not: Int
  height_in: [Int]
  height_not_in: [Int]
  height_gt: Int
  height_gte: Int
  height_lt: Int
  height_lte: Int
  OR: [AssetFilter]
  AND: [AssetFilter]
}

type AssetLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  lessonImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonImageCollection
  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCollection
  layoutHeroImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutHeroImageCollection
}

enum AssetOrder {
  url_ASC
  url_DESC
  size_ASC
  size_DESC
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  width_ASC
  width_DESC
  height_ASC
  height_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Categories can be applied to Courses and Lessons. Assigning Multiple categories
is also possible. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/category)
"""
type Category implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): CategoryLinkingCollections
  title(locale: String): String
  slug(locale: String): String
}

type CategoryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Category]!
}

input CategoryFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  OR: [CategoryFilter]
  AND: [CategoryFilter]
}

type CategoryLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCollection
}

enum CategoryOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input cfCourseNestedFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  image_exists: Boolean
  shortDescription_exists: Boolean
  shortDescription: String
  shortDescription_not: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  shortDescription_contains: String
  shortDescription_not_contains: String
  description_exists: Boolean
  description: String
  description_not: String
  description_in: [String]
  description_not_in: [String]
  description_contains: String
  description_not_contains: String
  duration_exists: Boolean
  duration: Int
  duration_not: Int
  duration_in: [Int]
  duration_not_in: [Int]
  duration_gt: Int
  duration_gte: Int
  duration_lt: Int
  duration_lte: Int
  skillLevel_exists: Boolean
  skillLevel: String
  skillLevel_not: String
  skillLevel_in: [String]
  skillLevel_not_in: [String]
  skillLevel_contains: String
  skillLevel_not_contains: String
  lessonsCollection_exists: Boolean
  categoriesCollection_exists: Boolean
  OR: [cfCourseNestedFilter]
  AND: [cfCourseNestedFilter]
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags_exists: Boolean
  tags: ContentfulMetadataTagsFilter
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_some: [String]
  id_contains_none: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A series of lessons designed to teach sets of concepts that enable students to
master Contentful. [See type
definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/course)
"""
type Course implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): CourseLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  image(preview: Boolean, locale: String): Asset
  shortDescription(locale: String): String
  description(locale: String): String
  duration(locale: String): Int
  skillLevel(locale: String): String
  lessonsCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseLessonsCollection
  categoriesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCategoriesCollection
}

type CourseCategoriesCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Category]!
}

type CourseCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Course]!
}

input CourseFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  image_exists: Boolean
  shortDescription_exists: Boolean
  shortDescription: String
  shortDescription_not: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  shortDescription_contains: String
  shortDescription_not_contains: String
  description_exists: Boolean
  description: String
  description_not: String
  description_in: [String]
  description_not_in: [String]
  description_contains: String
  description_not_contains: String
  duration_exists: Boolean
  duration: Int
  duration_not: Int
  duration_in: [Int]
  duration_not_in: [Int]
  duration_gt: Int
  duration_gte: Int
  duration_lt: Int
  duration_lte: Int
  skillLevel_exists: Boolean
  skillLevel: String
  skillLevel_not: String
  skillLevel_in: [String]
  skillLevel_not_in: [String]
  skillLevel_contains: String
  skillLevel_not_contains: String
  lessonsCollection_exists: Boolean
  categoriesCollection_exists: Boolean
  OR: [CourseFilter]
  AND: [CourseFilter]
}

type CourseLessonsCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Lesson]!
}

type CourseLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  layoutHighlightedCourseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutHighlightedCourseCollection
}

enum CourseOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  shortDescription_ASC
  shortDescription_DESC
  duration_ASC
  duration_DESC
  skillLevel_ASC
  skillLevel_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
}

type EntryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Entry]!
}

input EntryFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  OR: [EntryFilter]
  AND: [EntryFilter]
}

enum EntryOrder {
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
  AVIF
}

enum ImageResizeFocus {
  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top right."""
  TOP_RIGHT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES
}

enum ImageResizeStrategy {
  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat
}

"""
A page consisting of freely configurable and rearrangeable content modules. [See type
definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layout)
"""
type Layout implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LayoutLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  contentModulesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutContentModulesCollection
}

type LayoutCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Layout]!
}

type LayoutContentModulesCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LayoutContentModulesItem]!
}

union LayoutContentModulesItem = LayoutCopy | LayoutHeroImage | LayoutHighlightedCourse

"""
A block of text with a headline and a call to action to be shown on the landing
page. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layoutCopy)
"""
type LayoutCopy implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LayoutCopyLinkingCollections
  title(locale: String): String
  headline(locale: String): String
  copy(locale: String): String
  ctaTitle(locale: String): String
  ctaLink(locale: String): String
  visualStyle(locale: String): String
}

type LayoutCopyCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LayoutCopy]!
}

input LayoutCopyFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  headline_exists: Boolean
  headline: String
  headline_not: String
  headline_in: [String]
  headline_not_in: [String]
  headline_contains: String
  headline_not_contains: String
  copy_exists: Boolean
  copy: String
  copy_not: String
  copy_in: [String]
  copy_not_in: [String]
  copy_contains: String
  copy_not_contains: String
  ctaTitle_exists: Boolean
  ctaTitle: String
  ctaTitle_not: String
  ctaTitle_in: [String]
  ctaTitle_not_in: [String]
  ctaTitle_contains: String
  ctaTitle_not_contains: String
  ctaLink_exists: Boolean
  ctaLink: String
  ctaLink_not: String
  ctaLink_in: [String]
  ctaLink_not_in: [String]
  ctaLink_contains: String
  ctaLink_not_contains: String
  visualStyle_exists: Boolean
  visualStyle: String
  visualStyle_not: String
  visualStyle_in: [String]
  visualStyle_not_in: [String]
  visualStyle_contains: String
  visualStyle_not_contains: String
  OR: [LayoutCopyFilter]
  AND: [LayoutCopyFilter]
}

type LayoutCopyLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutCollection
}

enum LayoutCopyOrder {
  title_ASC
  title_DESC
  headline_ASC
  headline_DESC
  ctaTitle_ASC
  ctaTitle_DESC
  ctaLink_ASC
  ctaLink_DESC
  visualStyle_ASC
  visualStyle_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input LayoutFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  contentModulesCollection_exists: Boolean
  OR: [LayoutFilter]
  AND: [LayoutFilter]
}

"""
A hero image and header text. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layoutHeroImage)
"""
type LayoutHeroImage implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LayoutHeroImageLinkingCollections
  title(locale: String): String
  headline(locale: String): String
  backgroundImage(preview: Boolean, locale: String): Asset
}

type LayoutHeroImageCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LayoutHeroImage]!
}

input LayoutHeroImageFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  headline_exists: Boolean
  headline: String
  headline_not: String
  headline_in: [String]
  headline_not_in: [String]
  headline_contains: String
  headline_not_contains: String
  backgroundImage_exists: Boolean
  OR: [LayoutHeroImageFilter]
  AND: [LayoutHeroImageFilter]
}

type LayoutHeroImageLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutCollection
}

enum LayoutHeroImageOrder {
  title_ASC
  title_DESC
  headline_ASC
  headline_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A curated selection of highlighted courses. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layoutHighlightedCourse)
"""
type LayoutHighlightedCourse implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LayoutHighlightedCourseLinkingCollections
  title(locale: String): String
  course(preview: Boolean, locale: String): Course
}

type LayoutHighlightedCourseCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LayoutHighlightedCourse]!
}

input LayoutHighlightedCourseFilter {
  course: cfCourseNestedFilter
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  course_exists: Boolean
  OR: [LayoutHighlightedCourseFilter]
  AND: [LayoutHighlightedCourseFilter]
}

type LayoutHighlightedCourseLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutCollection
}

enum LayoutHighlightedCourseOrder {
  title_ASC
  title_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type LayoutLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
}

enum LayoutOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A educational lesson, representing one section of a course. [See type
definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lesson)
"""
type Lesson implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LessonLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  modulesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonModulesCollection
  enabled(locale: String): Boolean
  publishDate(locale: String): DateTime
}

"""
A code snippet module supporting all platforms to be used in a lesson. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lessonCodeSnippets)
"""
type LessonCodeSnippets implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LessonCodeSnippetsLinkingCollections
  title(locale: String): String
  curl(locale: String): String
  dotNet(locale: String): String
  javascript(locale: String): String
  java(locale: String): String
  javaAndroid(locale: String): String
  php(locale: String): String
  python(locale: String): String
  ruby(locale: String): String
  swift(locale: String): String
}

type LessonCodeSnippetsCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LessonCodeSnippets]!
}

input LessonCodeSnippetsFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  curl_exists: Boolean
  curl: String
  curl_not: String
  curl_in: [String]
  curl_not_in: [String]
  curl_contains: String
  curl_not_contains: String
  dotNet_exists: Boolean
  dotNet: String
  dotNet_not: String
  dotNet_in: [String]
  dotNet_not_in: [String]
  dotNet_contains: String
  dotNet_not_contains: String
  javascript_exists: Boolean
  javascript: String
  javascript_not: String
  javascript_in: [String]
  javascript_not_in: [String]
  javascript_contains: String
  javascript_not_contains: String
  java_exists: Boolean
  java: String
  java_not: String
  java_in: [String]
  java_not_in: [String]
  java_contains: String
  java_not_contains: String
  javaAndroid_exists: Boolean
  javaAndroid: String
  javaAndroid_not: String
  javaAndroid_in: [String]
  javaAndroid_not_in: [String]
  javaAndroid_contains: String
  javaAndroid_not_contains: String
  php_exists: Boolean
  php: String
  php_not: String
  php_in: [String]
  php_not_in: [String]
  php_contains: String
  php_not_contains: String
  python_exists: Boolean
  python: String
  python_not: String
  python_in: [String]
  python_not_in: [String]
  python_contains: String
  python_not_contains: String
  ruby_exists: Boolean
  ruby: String
  ruby_not: String
  ruby_in: [String]
  ruby_not_in: [String]
  ruby_contains: String
  ruby_not_contains: String
  swift_exists: Boolean
  swift: String
  swift_not: String
  swift_in: [String]
  swift_not_in: [String]
  swift_contains: String
  swift_not_contains: String
  OR: [LessonCodeSnippetsFilter]
  AND: [LessonCodeSnippetsFilter]
}

type LessonCodeSnippetsLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonCollection
}

enum LessonCodeSnippetsOrder {
  title_ASC
  title_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type LessonCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Lesson]!
}

"""
A markdown module to be used in a lesson. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lessonCopy)
"""
type LessonCopy implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LessonCopyLinkingCollections
  title(locale: String): String
  copy(locale: String): String
}

type LessonCopyCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LessonCopy]!
}

input LessonCopyFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  copy_exists: Boolean
  copy: String
  copy_not: String
  copy_in: [String]
  copy_not_in: [String]
  copy_contains: String
  copy_not_contains: String
  OR: [LessonCopyFilter]
  AND: [LessonCopyFilter]
}

type LessonCopyLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonCollection
}

enum LessonCopyOrder {
  title_ASC
  title_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input LessonFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  modulesCollection_exists: Boolean
  enabled_exists: Boolean
  enabled: Boolean
  enabled_not: Boolean
  publishDate_exists: Boolean
  publishDate: DateTime
  publishDate_not: DateTime
  publishDate_in: [DateTime]
  publishDate_not_in: [DateTime]
  publishDate_gt: DateTime
  publishDate_gte: DateTime
  publishDate_lt: DateTime
  publishDate_lte: DateTime
  OR: [LessonFilter]
  AND: [LessonFilter]
}

"""
An image to be used as a module in a lesson. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lessonImage)
"""
type LessonImage implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LessonImageLinkingCollections
  title(locale: String): String
  image(preview: Boolean, locale: String): Asset
  caption(locale: String): String
}

type LessonImageCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LessonImage]!
}

input LessonImageFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  image_exists: Boolean
  caption_exists: Boolean
  caption: String
  caption_not: String
  caption_in: [String]
  caption_not_in: [String]
  caption_contains: String
  caption_not_contains: String
  OR: [LessonImageFilter]
  AND: [LessonImageFilter]
}

type LessonImageLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonCollection
}

enum LessonImageOrder {
  title_ASC
  title_DESC
  caption_ASC
  caption_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type LessonLinkingCollections {
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection
  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCollection
}

type LessonModulesCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [LessonModulesItem]!
}

union LessonModulesItem = LessonCodeSnippets | LessonCopy | LessonImage

enum LessonOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  enabled_ASC
  enabled_DESC
  publishDate_ASC
  publishDate_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  asset(id: String!, preview: Boolean, locale: String): Asset
  assetCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: AssetFilter, order: [AssetOrder]): AssetCollection
  lesson(id: String!, preview: Boolean, locale: String): Lesson
  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonFilter, order: [LessonOrder]): LessonCollection
  lessonImage(id: String!, preview: Boolean, locale: String): LessonImage
  lessonImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonImageFilter, order: [LessonImageOrder]): LessonImageCollection
  lessonCopy(id: String!, preview: Boolean, locale: String): LessonCopy
  lessonCopyCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonCopyFilter, order: [LessonCopyOrder]): LessonCopyCollection
  layout(id: String!, preview: Boolean, locale: String): Layout
  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutFilter, order: [LayoutOrder]): LayoutCollection
  lessonCodeSnippets(id: String!, preview: Boolean, locale: String): LessonCodeSnippets
  lessonCodeSnippetsCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonCodeSnippetsFilter, order: [LessonCodeSnippetsOrder]): LessonCodeSnippetsCollection
  course(id: String!, preview: Boolean, locale: String): Course
  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: CourseFilter, order: [CourseOrder]): CourseCollection
  layoutCopy(id: String!, preview: Boolean, locale: String): LayoutCopy
  layoutCopyCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutCopyFilter, order: [LayoutCopyOrder]): LayoutCopyCollection
  layoutHeroImage(id: String!, preview: Boolean, locale: String): LayoutHeroImage
  layoutHeroImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutHeroImageFilter, order: [LayoutHeroImageOrder]): LayoutHeroImageCollection
  layoutHighlightedCourse(id: String!, preview: Boolean, locale: String): LayoutHighlightedCourse
  layoutHighlightedCourseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutHighlightedCourseFilter, order: [LayoutHighlightedCourseOrder]): LayoutHighlightedCourseCollection
  category(id: String!, preview: Boolean, locale: String): Category
  categoryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: CategoryFilter, order: [CategoryOrder]): CategoryCollection
  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: EntryFilter, order: [EntryOrder]): EntryCollection
}

type Sys {
  id: String!
  spaceId: String!
  environmentId: String!
  publishedAt: DateTime
  firstPublishedAt: DateTime
  publishedVersion: Int
}

input SysFilter {
  id_exists: Boolean
  id: String
  id_not: String
  id_in: [String]
  id_not_in: [String]
  id_contains: String
  id_not_contains: String
  publishedAt_exists: Boolean
  publishedAt: DateTime
  publishedAt_not: DateTime
  publishedAt_in: [DateTime]
  publishedAt_not_in: [DateTime]
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_not_in: [DateTime]
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  publishedVersion_exists: Boolean
  publishedVersion: Float
  publishedVersion_not: Float
  publishedVersion_in: [Float]
  publishedVersion_not_in: [Float]
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_lt: Float
  publishedVersion_lte: Float
}

