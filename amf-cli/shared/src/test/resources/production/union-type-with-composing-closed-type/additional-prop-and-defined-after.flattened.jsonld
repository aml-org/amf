{
  "@graph": [
    {
      "@id": "#/BaseUnitProcessingData",
      "@type": [
        "doc:APIContractProcessingData"
      ],
      "apiContract:modelVersion": "3.8.1",
      "doc:transformed": true,
      "doc:sourceSpec": "RAML 1.0"
    },
    {
      "@id": "/web-api",
      "@type": [
        "apiContract:WebAPI",
        "apiContract:API",
        "doc:RootDomainElement",
        "doc:DomainElement"
      ],
      "core:name": "Device Fraud Orchestration Service",
      "core:version": "v1",
      "apiContract:endpoint": [
        {
          "@id": "#/web-api/endpoint/%2Fevents"
        }
      ],
      "smaps": {
        "lexical": {
          "core:version": "[(3,0)-(5,0)]",
          "/web-api": "[(2,0)-(27,24)]",
          "core:name": "[(2,0)-(3,0)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fevents",
      "@type": [
        "apiContract:EndPoint",
        "doc:DomainElement"
      ],
      "apiContract:path": "/events",
      "apiContract:supportedOperation": [
        {
          "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:path": "[(23,0)-(23,7)]",
          "#/web-api/endpoint/%2Fevents": "[(23,0)-(27,24)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post",
      "@type": [
        "apiContract:Operation",
        "core:Operation",
        "doc:DomainElement"
      ],
      "apiContract:method": "post",
      "apiContract:expects": [
        {
          "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request"
        }
      ],
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Fevents/supportedOperation/post": "[(24,2)-(27,24)]"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request",
      "@type": [
        "apiContract:Request",
        "core:Request",
        "apiContract:Message",
        "doc:DomainElement"
      ],
      "apiContract:payload": [
        {
          "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request/payload/application%2Fjson"
        }
      ],
      "smaps": {
        "lexical": {
          "apiContract:payload": "[(25,4)-(27,24)]",
          "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request": "[(25,9)-(27,24)]"
        },
        "virtual-element": {
          "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request": "true"
        }
      }
    },
    {
      "@id": "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request/payload/application%2Fjson",
      "@type": [
        "apiContract:Payload",
        "core:Payload",
        "doc:DomainElement"
      ],
      "core:mediaType": "application/json",
      "raml-shapes:schema": {
        "@id": "#/declares/shape/unionShape"
      },
      "smaps": {
        "lexical": {
          "#/web-api/endpoint/%2Fevents/supportedOperation/post/expects/request/payload/application%2Fjson": "[(26,6)-(27,24)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/unionShape",
      "@type": [
        "raml-shapes:UnionShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "#/declares/shape/closedShapeType"
        },
        {
          "@id": "#/declares/shape/openShape"
        }
      ],
      "shacl:name": "unionShape",
      "smaps": {
        "declared-element": {
          "#/declares/shape/unionShape": ""
        },
        "lexical": {
          "shacl:name": "[(19,2)-(19,12)]",
          "#/declares/shape/unionShape": "[(19,2)-(23,0)]"
        },
        "type-property-lexical-info": {
          "#/declares/shape/unionShape": "[(20,4)-(20,8)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/closedShapeType",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": true,
      "shacl:property": [
        {
          "@id": "#/declares/shape/closedShapeType/property/property/payment"
        }
      ],
      "shacl:name": "closedShapeType",
      "smaps": {
        "resolved-link-target": {
          "#/declares/shape/closedShapeType": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-after.raml#/declares/shape/closedShapeType"
        },
        "declared-element": {
          "#/declares/shape/closedShapeType": ""
        },
        "lexical": {
          "shacl:name": "[(6,2)-(6,17)]",
          "#/declares/shape/closedShapeType": "[(6,2)-(13,0)]",
          "shacl:closed": "[(8,4)-(9,0)]"
        },
        "type-property-lexical-info": {
          "#/declares/shape/closedShapeType": "[(7,4)-(7,8)]"
        },
        "resolved-link": {
          "#/declares/shape/closedShapeType": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-after.raml#/declares/shape/unionShape/inherits/union/default-union/anyOf/shape/default-node"
        }
      }
    },
    {
      "@id": "#/declares/shape/openShape",
      "@type": [
        "shacl:NodeShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:property": [
        {
          "@id": "#/declares/shape/openShape/property/property/order"
        }
      ],
      "shacl:name": "openShape",
      "smaps": {
        "synthesized-field": {
          "shacl:closed": "true"
        },
        "resolved-link": {
          "#/declares/shape/openShape": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-after.raml#/declares/shape/unionShape/inherits/union/default-union/anyOf/shape/default-node_1"
        },
        "type-property-lexical-info": {
          "#/declares/shape/openShape": "[(14,4)-(14,8)]"
        },
        "lexical": {
          "shacl:name": "[(13,2)-(13,11)]",
          "#/declares/shape/openShape": "[(13,2)-(19,0)]"
        },
        "declared-element": {
          "#/declares/shape/openShape": ""
        },
        "resolved-link-target": {
          "#/declares/shape/openShape": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-after.raml#/declares/shape/openShape"
        }
      }
    },
    {
      "@id": "#/declares/shape/closedShapeType/property/property/payment",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#payment"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/closedShapeType/property/property/payment/scalar/payment"
      },
      "shacl:minCount": 1,
      "shacl:name": "payment",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(10,14)-(13,0)]",
          "#/declares/shape/closedShapeType/property/property/payment": "[(10,6)-(13,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/openShape/property/property/order",
      "@type": [
        "shacl:PropertyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:path": [
        {
          "@id": "http://a.ml/vocabularies/data#order"
        }
      ],
      "raml-shapes:range": {
        "@id": "#/declares/shape/openShape/property/property/order/scalar/order"
      },
      "shacl:minCount": 1,
      "shacl:name": "order",
      "smaps": {
        "synthesized-field": {
          "shacl:minCount": "true",
          "shacl:path": "true"
        },
        "lexical": {
          "raml-shapes:range": "[(16,12)-(19,0)]",
          "#/declares/shape/openShape/property/property/order": "[(16,6)-(19,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/closedShapeType/property/property/payment/scalar/payment",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "payment",
      "smaps": {
        "type-property-lexical-info": {
          "#/declares/shape/closedShapeType/property/property/payment/scalar/payment": "[(11,8)-(11,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(11,8)-(13,0)]",
          "#/declares/shape/closedShapeType/property/property/payment/scalar/payment": "[(10,6)-(13,0)]"
        }
      }
    },
    {
      "@id": "#/declares/shape/openShape/property/property/order/scalar/order",
      "@type": [
        "raml-shapes:ScalarShape",
        "raml-shapes:AnyShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": [
        {
          "@id": "http://www.w3.org/2001/XMLSchema#string"
        }
      ],
      "shacl:name": "order",
      "smaps": {
        "type-property-lexical-info": {
          "#/declares/shape/openShape/property/property/order/scalar/order": "[(17,8)-(17,12)]"
        },
        "lexical": {
          "shacl:datatype": "[(17,8)-(19,0)]",
          "#/declares/shape/openShape/property/property/order/scalar/order": "[(16,6)-(19,0)]"
        }
      }
    },
    {
      "@id": "",
      "doc:declares": [
        {
          "@id": "#/declares/shape/closedShapeType"
        },
        {
          "@id": "#/declares/shape/openShape"
        },
        {
          "@id": "#/declares/shape/unionShape"
        }
      ],
      "@type": [
        "doc:Document",
        "doc:Fragment",
        "doc:Module",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "/web-api"
      },
      "doc:root": true,
      "doc:processingData": {
        "@id": "#/BaseUnitProcessingData"
      }
    }
  ],
  "@context": {
    "@base": "file://amf-cli/shared/src/test/resources/production/union-type-with-composing-closed-type/additional-prop-and-defined-after.raml",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#"
  }
}
